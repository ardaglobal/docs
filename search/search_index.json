{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Arda","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"#welcome-to-arda","title":"Welcome to Arda","text":"<p>Arda is a vertically integrated operating system for structured private markets. It transforms real-world assets into programmable, compliance-first digital instruments, enabling global liquidity, institutional-grade compliance, and seamless financial innovation.</p> <p>This documentation provides a full specification of Arda's protocol architecture, primitives, products, deployment strategies, and integration layers. It is designed for developers, integrators, regulators, and contributors to the Arda ecosystem.</p>"},{"location":"#key-concepts","title":"Key Concepts","text":""},{"location":"#programmable-infrastructure","title":"Programmable Infrastructure","text":"<p>Arda converts messy private markets into programmable digital assets with persistent identities and real-time data. This infrastructure ensures automated compliance, frictionless transactions, and enables the creation of entirely new financial products. At its core, Arda\u2019s programmable infrastructure underpins globally accessible private markets that operate with the efficiency of digital economies.</p>"},{"location":"#global-liquidity-247-market-access","title":"Global Liquidity &amp; 24/7 Market Access","text":"<p>Arda eliminates traditional market barriers, enabling private markets to trade with the same accessibility and liquidity as global financial markets enjoy.</p>"},{"location":"#instant-settlement-transaction-efficiency","title":"Instant Settlement &amp; Transaction Efficiency","text":"<p>Traditional private market deals and transfers, often plagued by multi-month settlement times and delays due to paper-based processes spanning buyer and seller chains, are reduced to minutes with Arda\u2019s infrastructure.</p>"},{"location":"#empowering-business-model-innovation","title":"Empowering Business Model Innovation","text":"<p>Our vision is not just about what Arda does itself but what Arda does for others too. Activating and empowering thousands of businesses and a global community to bloom. Imagine a 10x more powerful digital and programmable version of what Coldwell Banker might facilitate.</p> <p>Arda\u2019s programmable ecosystem enables the creation of composable financial products and private market applications tailored to user needs.</p>"},{"location":"#compliance-regulatory-first-approach","title":"Compliance &amp; Regulatory-First Approach","text":"<p>Compliance is not an afterthought\u2014it\u2019s embedded in every Arda process. Our architecture ensures that global, jurisdiction-specific regulatory requirements are integrated from the ground up.</p>"},{"location":"#design-principles","title":"Design Principles","text":""},{"location":"#regional-global-execution-separation","title":"Regional &amp; Global Execution Separation","text":"<p>One of the reasons private markets are so fragmented is because every jurisdiction has different regulatory requirements. This means that execution needs to happen regionally.</p>"},{"location":"#on-chain-vs-off-chain","title":"On-Chain vs Off-Chain","text":"<p>Private markets deal with a lot of sensitive financial data. This requires a careful balance of on-chain versus off-chain transaction and data handling to provide both transparency and privacy.</p>"},{"location":"#privacy-security-compliance","title":"Privacy, Security, Compliance","text":"<p>Privacy, security, and compliance are core design principles for Arda to ensure that the right solution is built day one, and is not a future promise.</p>"},{"location":"#best-in-class-tooling","title":"Best-in-class tooling","text":"<p>Arda is committed to providing best-in-class tooling for application developers and ecosystem projects.</p>"},{"location":"#ecosystem-value-accrual","title":"Ecosystem Value Accrual","text":"<p>Arda is designed to incentivize and reward all ecosystem participants\u2014from data providers to application developers to users.</p>"},{"location":"#stakeholder-flexibility","title":"Stakeholder Flexibility","text":"<p>Variety of node types and mediums of integration to enable read, write, or read and write functionality into Arda depending on stakeholder (e.g. regulator).</p>"},{"location":"#architecture-layers","title":"Architecture Layers","text":""},{"location":"#ardaos","title":"ArdaOS","text":"<p>Regional execution environments tailored to sovereign compliance, privacy, and legal constraints.</p>"},{"location":"#arda-core","title":"Arda Core","text":"<p>The foundational infrastructure supporting the Arda ecosystem.</p>"},{"location":"#semantic-intelligence-layer","title":"Semantic Intelligence Layer","text":"<p>A standardized data model that turns fragmented deal data into machine-readable intelligence.</p>"},{"location":"#application-layer","title":"Application Layer","text":"<p>Capital formation, trading, asset management, marketplace tools.</p>"},{"location":"#how-to-use-this-documentation","title":"How to Use This Documentation","text":"<p>This site is structured to help both technical and non-technical stakeholders explore and contribute to Arda's ecosystem.</p> <ul> <li>If you're interested in the vision and design philosophy, start with the Introduction section.</li> <li>If you're interested in the different components of the Arda ecosystem, start with the Architecture Layers sections, starting with ArdaOS.</li> <li>If you're interested in how to build on Arda, use the Getting Started section.</li> </ul>"},{"location":"#glossary","title":"Glossary","text":""},{"location":"application-layer/arda-capital/","title":"Overview","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"application-layer/arda-capital/#arda-capital","title":"Arda Capital","text":"<p>Arda Capital is the programmable capital formation and lending layer of the Arda protocol. It enables compliant issuance, lending, borrowing, syndication, and structuring of real-world asset-backed facilities\u2014such as mortgages, credit lines, construction loans, and tokenized debt pools\u2014using composable primitives across sovereign ArdaOS chains.</p> <p>Built on Arda's core primitives, the module serves the full capital lifecycle\u2014from deal origination and underwriting to tranche structuring, yield distribution, and loan repayment. It integrates deeply with the Compliance Engine, Token Factory, Vault, and Arda Clear to provide a unified experience for enforcement, data, and settlement.</p>"},{"location":"application-layer/arda-capital/#key-modules","title":"Key Modules","text":"Module Description <code>Loan Structures</code> Defines supported loan types and configurations <code>Underwriting</code> Risk scoring, collateral analysis, dynamic LTV enforcement <code>Syndication Engine</code> Permissioned capital formation using programmable pools <code>Tranche System</code> Tokenizes risk layers and defines cashflow waterfalls <code>Treasury/Float</code> Manages interest, fees, and idle capital allocation <code>Permissioned Pools</code> Permissioned pools for capital formation"},{"location":"application-layer/arda-capital/#1-facility-creation","title":"1. Facility Creation","text":"<ul> <li>Programmable wrappers for debt or equity instruments.</li> <li>Supports legal anchoring via Arda Foundry.</li> <li>Can be created via SDK or UI with defined rulesets and triggers.</li> </ul>"},{"location":"application-layer/arda-capital/#2-capital-formation","title":"2. Capital Formation","text":"<ul> <li>Primary market fundraising via PermissionedPools.</li> <li>Supports investor mandates, pro-rata allocation, soft/hard caps.</li> <li>Integrated with compliance and jurisdiction gating.</li> </ul>"},{"location":"application-layer/arda-capital/#3-drawdown-mechanics","title":"3. Drawdown Mechanics","text":"<ul> <li>Partial or full drawdown support.</li> <li>Triggered by milestone checks, oracle data, or governance.</li> <li>Each drawdown event linked to repayment schedule and DebtToken issuance.</li> </ul>"},{"location":"application-layer/arda-capital/#4-interest-and-repayment-logic","title":"4. Interest and Repayment Logic","text":"<ul> <li>InterestAccrual model supports fixed, floating, step-up, or indexed terms.</li> <li>Repayment tracked on-chain and broadcast to YieldToken holders.</li> <li>Default triggers can pause disbursement or initiate liquidation.</li> </ul>"},{"location":"application-layer/arda-capital/#5-structuring-and-syndication","title":"5. Structuring and Syndication","text":"<ul> <li>Facility may be sliced into TrancheTokens with defined risk profiles.</li> <li>Waterfall logic and AllocationEngine govern distribution.</li> <li>Syndication via programmable pools (e.g. Sharpe &gt; 2, LTV &lt; 70%).</li> </ul>"},{"location":"application-layer/arda-capital/#6-automated-underwriting-compliance-enforce-jurisdictional-rules-investor-accreditation-and-loan-covenants-programmatically","title":"6. Automated Underwriting &amp; Compliance: Enforce jurisdictional rules, investor accreditation, and loan covenants programmatically","text":""},{"location":"application-layer/arda-capital/#7-dynamic-securitization-pool-and-tranche-loans-into-investable-assets-with-just-in-time-settlement","title":"7. Dynamic Securitization: Pool and tranche loans into investable assets with just-in-time settlement","text":"<p>KYC/attestation-gated capital markets for specific jurisdictions |</p>"},{"location":"application-layer/arda-capital/#key-token-types","title":"Key Token Types","text":"<ul> <li>DebtToken: Represents a borrower's principal and interest obligation</li> <li>YieldToken: Grants rights to a portion of cashflows from assets or loans</li> <li>TrancheToken: Encodes a risk-adjusted share of a syndicated capital pool</li> </ul> <p>Each token type is lifecycle-managed and complies with TransferRules and jurisdictional logic.</p>"},{"location":"application-layer/arda-capital/#capital-lifecycle","title":"Capital Lifecycle","text":"<pre><code>flowchart TD\n    A[Deal Origination] --&gt; B[Underwriting]\n    B --&gt; C[Syndication + Allocation]\n    C --&gt; D[Token Issuance (Tranche / Debt)]\n    D --&gt; E[Interest Accrual + Repayment]\n    E --&gt; F[Settlement via Arda Clear]\n</code></pre>"},{"location":"application-layer/arda-capital/#interop-compliance","title":"Interop &amp; Compliance","text":"<ul> <li>Compliance First: Only verified participants can join pools or execute deals.</li> <li>Jurisdiction Sync: Capital rules adapt per region via JurisdictionProfiles.</li> <li>Global Liquidity: Tranche and YieldTokens may be tradable cross-chain via Interop.</li> <li>Audit-Ready: Capital flows and token events are logged to on-chain AuditLog.</li> </ul>"},{"location":"application-layer/arda-capital/#use-cases","title":"Use Cases","text":"<ul> <li>Real estate-backed loans</li> <li>Tokenized bridge financing</li> <li>REIT syndication and redemption</li> <li>Crowdfunding and retail-accessible capital pools</li> <li>Institutional-grade structured products</li> </ul>"},{"location":"application-layer/arda-capital/#capital-types-supported","title":"Capital Types Supported","text":"<ul> <li>Mortgages</li> <li>Bridge Loans</li> <li>Construction Facilities</li> <li>REIT Debt and Equity</li> <li>Revolving Credit for Developers</li> <li>Factoring and Invoice Lending (Future)</li> </ul>"},{"location":"application-layer/arda-capital/#compliance-controls","title":"Compliance Controls","text":"<ul> <li>Investor eligibility tied to KYC tier and jurisdiction.</li> <li>Facility template rules enforce limits on ticket size, currency, risk exposure.</li> <li>Tax withholding and reporting built-in for repayment flows.</li> </ul>"},{"location":"application-layer/arda-capital/#developer-notes","title":"Developer Notes","text":"<ul> <li>SDK includes `</li> </ul>"},{"location":"application-layer/arda-capital/analytics/","title":"Analytics","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"application-layer/arda-capital/analytics/#analytics-reporting","title":"Analytics &amp; Reporting","text":""},{"location":"application-layer/arda-capital/analytics/#overview","title":"\ud83e\udded Overview","text":"<p>The Analytics module in Arda Capital provides real-time, on-chain and off-chain performance insights for loans, pools, tranches, and portfolios. It leverages protocol-native data structures, observability agents, and risk primitives to power dashboards, reports, and agent-based triggers.</p> <p>Analytics is critical for investors, syndicate managers, regulators, and governance actors to track capital health, risk exposure, and compliance adherence.</p>"},{"location":"application-layer/arda-capital/analytics/#core-features","title":"Core Features","text":"Feature Description FacilityRegistry Canonical index of all active and historical loan structures TrancheIndex Aggregated tranche-level performance and exposure metrics RiskPrimitives Shared metrics such as PD, LGD, LTV, volatility, Sharpe ratio DataOracles External feeds (market rates, FX, index values, price benchmarks) Monitoring Agents Automated event detection (defaults, covenants, delays)"},{"location":"application-layer/arda-capital/analytics/#example-metrics","title":"Example Metrics","text":"<ul> <li>Current LTV per loan or pool</li> <li>Tranche occupancy rate</li> <li>Interest paid vs scheduled</li> <li>Net capital outstanding</li> <li>Sharpe ratio of a tranche pool</li> <li>Exposure by region, property type, or risk class</li> <li>Defaults or missed payments (flagged by agent)</li> </ul>"},{"location":"application-layer/arda-capital/analytics/#example-monitoring-agent-output","title":"Example: Monitoring Agent Output","text":"<pre><code>{\n  \"loanId\": \"LN-1102\",\n  \"status\": \"risk_alert\",\n  \"trigger\": \"missed_interest_payment\",\n  \"timestamp\": \"2025-06-15T00:00:00Z\",\n  \"details\": {\n    \"expected\": 50000,\n    \"received\": 0,\n    \"daysOverdue\": 10\n  }\n}\n</code></pre>"},{"location":"application-layer/arda-capital/analytics/#system-architecture","title":"System Architecture","text":"<pre><code>flowchart TD\n    A[Data Oracle] --&gt; B[Risk Engine]\n    B --&gt; C[Analytics Dashboard]\n    C --&gt; D[Monitoring Agent]\n    D --&gt; E[Compliance or Syndication Triggers]\n</code></pre>"},{"location":"application-layer/arda-capital/analytics/#integration","title":"Integration","text":"<ul> <li>FacilityRegistry: Indexes and categorizes active capital deals</li> <li>Vault: Provides attested off-chain data inputs for metrics</li> <li>Identity Module: Attributes roles and risk to entities and wallets</li> <li>Interop Layer: Aggregates data from multiple sovereign regions</li> </ul>"},{"location":"application-layer/arda-capital/compliance/","title":"Compliance","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"application-layer/arda-capital/compliance/#compliance","title":"Compliance","text":""},{"location":"application-layer/arda-capital/compliance/#overview","title":"Overview","text":"<p>This document defines how Arda Capital applies compliance enforcement across the lending, syndication, and tokenization lifecycle. While Arda Core's Compliance Engine provides the base enforcement primitives, Arda Capital extends them to enforce eligibility, permissioning, and transparency in capital markets contexts.</p> <p>Compliance is embedded directly in the capital workflow\u2014from loan issuance and investor onboarding to capital deployment, repayment, and redemption.</p>"},{"location":"application-layer/arda-capital/compliance/#enforcement-domains","title":"Enforcement Domains","text":"Domain Enforcement Logic Loan Origination Verifies borrower identity, jurisdiction, and eligibility using KYC Tier + Attestation Syndication Pools Restricts participation based on KYC Tier, region, investor class Tranches Transfers governed by TransferRules and Token restrictions Interest/Fee Split Verifies destination wallet and authorized roles for distributions Pool Creation Pool creators must pass verification and declare jurisdictional config"},{"location":"application-layer/arda-capital/compliance/#compliance-objects-used","title":"Compliance Objects Used","text":"<ul> <li>TransferRule \u2014 Enforces who can send/receive capital-related tokens</li> <li>JurisdictionProfile \u2014 Applies limits or bans based on regional policy</li> <li>AttestationRegistry \u2014 Validates KYC status, accreditation, and role-based access</li> <li>AuditLog \u2014 Immutable record of capital events (e.g. pool entry, loan payment, distribution)</li> </ul>"},{"location":"application-layer/arda-capital/compliance/#sample-loan-compliance-flow","title":"Sample Loan Compliance Flow","text":"<pre><code>flowchart TD\n    A[Borrower] --&gt; B[KYC Check]\n    B --&gt; C[Jurisdiction Check]\n    C --&gt; D[Underwriting Approved]\n    D --&gt; E[Compliance Approval]\n    E --&gt; F[DebtToken Issued]\n</code></pre> <p>If any step fails, the transaction is rejected at the protocol layer and logged.</p>"},{"location":"application-layer/arda-capital/compliance/#example-tranche-transferrule","title":"Example Tranche TransferRule","text":"<pre><code>{\n  \"tokenType\": \"TrancheToken\",\n  \"fromKycTier\": 2,\n  \"toKycTier\": 2,\n  \"jurisdiction\": \"US\",\n  \"restrictions\": {\n    \"accredited_only\": true,\n    \"maxAUM\": 10000000\n  }\n}\n</code></pre> <p>This ensures only accredited US investors can transfer or receive this tranche, and no single holder exceeds AUM limits.</p>"},{"location":"application-layer/arda-capital/compliance/#integration-points","title":"Integration Points","text":"<ul> <li>Token Factory: Ensures tokens are linked to compliant Issuers and Mandates</li> <li>Vault: Anchors legal agreements and compliance attestations</li> <li>Identity Module: Determines role permissions and wallet group bindings</li> <li>Syndication + Pools: Apply eligibility criteria before allocation</li> </ul>"},{"location":"application-layer/arda-capital/loan-structures/","title":"Loan Structures","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"application-layer/arda-capital/loan-structures/#loan-structures","title":"Loan Structures","text":""},{"location":"application-layer/arda-capital/loan-structures/#overview","title":"Overview","text":"<p>This module defines the supported loan structures within Arda Capital. Each structure represents a standardized template for configuring real-world asset-backed loans, including repayment mechanics, collateralization terms, jurisdiction-specific rules, and tokenization logic.</p> <p>Loan structures are programmable and lifecycle-aware, enabling automated interest accrual, drawdown, repayment, and enforcement via Arda protocol components.</p>"},{"location":"application-layer/arda-capital/loan-structures/#loan-types","title":"Loan Types","text":"Type Description Features <code>Mortgage</code> Secured by real estate collateral Fixed/floating interest, amortization, foreclosure logic <code>Bridge Loan</code> Short-term loan for development or gap financing Bullet repayment, time-gated drawdown, rollover support <code>HELOC</code> Revolving credit secured by property equity Variable balance, repayment triggers, lien protection <code>Construction Facility</code> Milestone-based disbursements for new developments Phase gating, builder attestations, escrow-based <code>Convertible Note</code> Debt that can convert into equity/tranche tokens Optional conversion rules, discount rate, maturity event"},{"location":"application-layer/arda-capital/loan-structures/#lifecycle-events","title":"Lifecycle Events","text":"<p>Each loan structure includes a series of lifecycle transitions triggered by protocol interactions or off-chain events:</p> <ul> <li>INITIATED: Terms agreed, structure committed</li> <li>DRAWN: Initial funds released or drawdown started</li> <li>ACCRUING: Interest calculation and metadata updates begin</li> <li>PARTIALLY REPAID: Repayment transaction received and validated</li> <li>MATURED: Loan reaches terminal status or conversion point</li> <li>CLOSED: Principal repaid, token burned or settled</li> </ul>"},{"location":"application-layer/arda-capital/loan-structures/#compliance-features","title":"Compliance Features","text":"<p>Loan structures enforce embedded permissions and jurisdictional logic:</p> <ul> <li>KYC Tiering: Only eligible entities may originate or fund</li> <li>Tokenization Hooks: Generates DebtToken, TrancheToken upon funding</li> <li>Transfer Restrictions: Complies with TransferRule and JurisdictionProfile</li> <li>Attestation Checkpoints: Can require notarization or milestone proofs for drawdown</li> </ul>"},{"location":"application-layer/arda-capital/loan-structures/#drawdown-logic","title":"Drawdown Logic","text":"<p>Loans may be structured with full or partial draw capability:</p> <pre><code>draw_schedule:\n  total_amount: 1000000\n  tranche:\n    - amount: 300000\n      condition: signed_contract\n    - amount: 400000\n      condition: verified_foundation_phase\n    - amount: 300000\n      condition: inspection_certified\n</code></pre> <p>This ensures funds are released based on performance and verified evidence (e.g. from a Monitoring Agent).</p>"},{"location":"application-layer/arda-capital/loan-structures/#integration","title":"Integration","text":"<p>Loan structures interact with:</p> <ul> <li>Token Factory \u2013 For DebtToken issuance</li> <li>Vault \u2013 For proof of documentation, contracts, inspection reports</li> <li>Clear \u2013 For repayment, accrual, and waterfall logic</li> <li>Syndication Engine \u2013 When structured into tranches or capital pools</li> </ul>"},{"location":"application-layer/arda-capital/mandates/","title":"Mandates","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"application-layer/arda-capital/mandates/#investment-mandates","title":"Investment Mandates","text":""},{"location":"application-layer/arda-capital/mandates/#overview","title":"\ud83e\udded Overview","text":"<p>The Mandates module in Arda Capital facilitates the creation and management of legal and operational structures such as SPVs, trusts, and fund wrappers. These entities enable tokenized assets and debt instruments to remain legally enforceable off-chain while interoperating with Arda Core's programmable logic.</p> <p>Mandates provide the bridge between on-chain financial instruments and traditional legal entities required by institutional investors, regulators, and auditors.</p>"},{"location":"application-layer/arda-capital/mandates/#key-components","title":"Key Components","text":"Component Description SPV Special Purpose Vehicle to hold title, debt, or yield rights Mandate Legal and operational directive encoded into the Arda protocol CustodyRelationship Defines relationships between wallets, custodians, and legal entities Issuer Entity Registered entity responsible for offering tokens or executing capital deals"},{"location":"application-layer/arda-capital/mandates/#use-cases","title":"Use Cases","text":"<ul> <li>Real Estate Tokenization: Establish an SPV that holds the asset title and issues AssetTokens.</li> <li>Fund Vehicles: Create mandates for REITs, LPs, or debt funds tied to syndicated pools.</li> <li>Legal Attribution: Link token rights (e.g. rent income, liquidation claims) to contractually enforceable roles.</li> </ul>"},{"location":"application-layer/arda-capital/mandates/#mandate-lifecycle","title":"Mandate Lifecycle","text":"<ol> <li>Drafting \u2013 Legal metadata and documents submitted to the Vault</li> <li>Verification \u2013 Third-party validation or notary attestation</li> <li>Mandate Creation \u2013 On-chain issuance of Mandate object with parameters and linked wallets</li> <li>Execution Binding \u2013 Roles and custody logic established</li> <li>Termination / Migration \u2013 Entity can be sunset or replaced</li> </ol>"},{"location":"application-layer/arda-capital/mandates/#mandate-object-example","title":"Mandate Object Example","text":"<pre><code>{\n  \"mandateId\": \"MND-001\",\n  \"type\": \"SPV\",\n  \"jurisdiction\": \"UAE\",\n  \"entityId\": \"ENTITY-014\",\n  \"authorizedSigners\": [\"Wallet-0x123\", \"Wallet-0x456\"],\n  \"rights\": [\"token_issuance\", \"rental_disbursement\"],\n  \"documents\": [\"vault://mandates/UAE-SPV.pdf\"]\n}\n</code></pre>"},{"location":"application-layer/arda-capital/mandates/#compliance-considerations","title":"Compliance Considerations","text":"<ul> <li>All mandates are verified against jurisdictional rules before activation</li> <li>CustodyRelationships enforce who may sign or transact on behalf of the entity</li> <li>Vault-anchored documents ensure auditability and off-chain enforceability</li> </ul>"},{"location":"application-layer/arda-capital/mandates/#integration-points","title":"Integration Points","text":"<ul> <li>Vault: Storage of signed legal docs, attestations, operating agreements</li> <li>Token Factory: Restricts issuance to authorized issuer roles via mandate link</li> <li>Compliance Engine: Ensures only valid mandates and entities may act</li> <li>Identity Module: Binds WalletGroups to operational roles and entity representations</li> </ul>"},{"location":"application-layer/arda-capital/permissioned-pools/","title":"Permissioned Pools","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"application-layer/arda-capital/permissioned-pools/#permissioned-pools","title":"Permissioned Pools","text":""},{"location":"application-layer/arda-capital/permissioned-pools/#overview","title":"Overview","text":"<p>Permissioned Pools are a foundational primitive in Arda Capital used to facilitate jurisdiction-aware, KYC-gated capital formation. They enable only qualified participants to join investment opportunities, ensuring compliance with regional regulations while supporting programmable capital deployment.</p> <p>Pools can be used for lending, syndication, insurance, or investment \u2014 and each enforces compliance rules at entry, operation, and exit.</p>"},{"location":"application-layer/arda-capital/permissioned-pools/#core-features","title":"Core Features","text":"Feature Description KYC Tier Enforcement Restricts pool access based on verified identity level Jurisdiction Scope Pools may limit participation to investors from specific regions Risk Filters Pools may impose capital limits, rating bands, or deal types Token Binding Participation may be tokenized via TrancheToken or PoolShare Dynamic Governance Pool creators may update filters or terminate pools (with constraints)"},{"location":"application-layer/arda-capital/permissioned-pools/#lifecycle","title":"Lifecycle","text":"<ol> <li>Initialization \u2014 Pool is created with access rules and optional funding caps</li> <li>Staking \u2014 Eligible users commit capital</li> <li>Matching \u2014 Capital is allocated to deals, tranches, or lending lines</li> <li>Monitoring \u2014 Compliance and performance checks occur continuously</li> <li>Redemption \u2014 Capital + returns distributed per PoolShare or TrancheToken</li> <li>Closure \u2014 Optional wind-down or rollover into a new mandate</li> </ol>"},{"location":"application-layer/arda-capital/permissioned-pools/#example-pool-configuration","title":"Example Pool Configuration","text":"<pre><code>{\n  \"poolId\": \"POOL-XYZ\",\n  \"region\": \"US\",\n  \"requiredKycTier\": 3,\n  \"maxAUM\": 50000000,\n  \"acceptedToken\": \"USDC\",\n  \"restrictions\": {\n    \"investorType\": \"accredited\",\n    \"jurisdictionWhitelist\": [\"US\", \"SG\"]\n  }\n}\n</code></pre>"},{"location":"application-layer/arda-capital/permissioned-pools/#access-enforcement","title":"Access Enforcement","text":"<p>Pool access is governed by:</p> <ul> <li>TransferRule \u2014 Applies to inbound token transfers and staking intents</li> <li>Attestation Check \u2014 Confirms accredited status or verified role</li> <li>Vault Conditions \u2014 May require document upload or agent certification</li> <li>Audit Logging \u2014 Every entry, exit, and role assignment is recorded</li> </ul>"},{"location":"application-layer/arda-capital/permissioned-pools/#integration","title":"Integration","text":"<ul> <li>Syndication Engine \u2014 Pulls matched pools into capital allocation flows</li> <li>Tranche System \u2014 Issues TrancheTokens for risk-layered pools</li> <li>Compliance Engine \u2014 Validates eligibility of each participant</li> <li>Identity Module \u2014 Binds wallet groups to entity roles within the pool</li> </ul>"},{"location":"application-layer/arda-capital/settlement/","title":"Settlement","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"application-layer/arda-capital/settlement/#arda-settlement","title":"Arda Settlement","text":"<p>The Arda Settlement system provides finality, netting, and token movement infrastructure across ArdaOS chains and external blockchains. It underpins Arda Clear and ensures compliant, auditable, and efficient settlement of real estate and capital markets transactions.</p> <p>This spec defines the settlement-related primitives, flows, and constraints.</p>"},{"location":"application-layer/arda-capital/settlement/#core-components","title":"Core Components","text":""},{"location":"application-layer/arda-capital/settlement/#1-settlementqueue","title":"1. SettlementQueue","text":"<ul> <li>Queue of pending transfers and nettable events.</li> <li>Types:<ul> <li>Internal (same chain, direct finality)</li> <li>Cross-region (requires bridging)</li> <li>Conditional (e.g. legal check, fiat clearance)</li> </ul> </li> <li>Each entry includes:<ul> <li>Source and destination wallet</li> <li>Token type and amount</li> <li>Dependencies (e.g. compliance check or hook)</li> </ul> </li> </ul>"},{"location":"application-layer/arda-capital/settlement/#2-nettingengine","title":"2. NettingEngine","text":"<ul> <li>Aggregates multi-party flows into net positions for final settlement.</li> <li>Reduces gas and execution overhead.</li> <li>Example:<ul> <li>5 buyers contribute funds to a pool \u2192 net to SPV</li> <li>3 lenders repay a tranche \u2192 net repayment to token holders</li> </ul> </li> </ul>"},{"location":"application-layer/arda-capital/settlement/#3-feesink","title":"3. FeeSink","text":"<ul> <li>Final recipient for all protocol or regulatory fees.</li> <li>Configured by governance or jurisdiction profile.</li> <li>Can route to:<ul> <li>DAO treasury</li> <li>Regulator</li> <li>Operating company</li> <li>Burn address</li> </ul> </li> </ul>"},{"location":"application-layer/arda-capital/settlement/#cross-chain-cross-asset-logic","title":"Cross-Chain / Cross-Asset Logic","text":"<p>Arda Clear handles cross-network finality via:</p> <ul> <li>Bridged messages: Validated via light clients, TEE, or ZK proof</li> <li>Delay buffers: Regulatory or fiat buffers (e.g. 24h notice)</li> <li>Confirmation events: Settlement posted to protocol event log</li> </ul>"},{"location":"application-layer/arda-capital/settlement/#compliance-integration","title":"Compliance Integration","text":"<ul> <li>All settlement actions must pass:<ul> <li><code>TransferRule</code></li> <li><code>JurisdictionProfile</code></li> <li>Role-based access</li> </ul> </li> <li>SettlementQueue entries are subject to slashing or rejection if unauthorized</li> </ul>"},{"location":"application-layer/arda-capital/settlement/#developer-notes","title":"Developer Notes","text":"<ul> <li><code>enqueueSettlement()</code> call creates queue entry</li> <li><code>settle()</code> or <code>batchSettle()</code> finalizes and clears nettable items</li> <li>Hooks can trigger post-settlement logic (e.g. token minting, custody transfer)</li> </ul>"},{"location":"application-layer/arda-capital/settlement/#examples","title":"Examples","text":""},{"location":"application-layer/arda-capital/settlement/#token-transfer-on-same-chain","title":"Token Transfer on Same Chain","text":"<pre><code>{\n  \"source\": \"walletA\",\n  \"destination\": \"walletB\",\n  \"token\": \"AssetToken.001\",\n  \"amount\": \"100\",\n  \"type\": \"internal\"\n}\n</code></pre>"},{"location":"application-layer/arda-capital/settlement/#cross-region-debt-repayment","title":"Cross-Region Debt Repayment","text":"<pre><code>{\n  \"source\": \"borrower.wallet\",\n  \"destination\": \"SPV.wallet\",\n  \"token\": \"MoneyToken.USD.ae\",\n  \"amount\": \"25000\",\n  \"type\": \"cross-region\",\n  \"jurisdiction\": \"UAE \u2192 USA\"\n}\n</code></pre>"},{"location":"application-layer/arda-capital/syndication/","title":"Syndication","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"application-layer/arda-capital/syndication/#syndication","title":"Syndication","text":""},{"location":"application-layer/arda-capital/syndication/#overview","title":"Overview","text":"<p>The Syndication Engine is the programmable capital allocation layer within Arda Capital. It enables institutional and retail investors to participate in structured deals by staking capital into permissioned pools. These pools syndicate approved loans or deals based on predefined risk filters, jurisdictional rules, and tranche mechanics.</p> <p>Syndication provides a decentralized alternative to manual book-building, while enforcing compliance, auditability, and transparency.</p>"},{"location":"application-layer/arda-capital/syndication/#key-components","title":"Key Components","text":"Component Description Programmable Pool Smart contract for gated investor capital Risk Filter Criteria such as LTV, Sharpe Ratio, KYC Tier, or property type Allocation Engine Matches deals to pools based on eligibility and timing Waterfall Logic Determines cashflow distribution order (e.g. senior vs junior) OrderBook Aggregates commitments and facilitates final tranche splits"},{"location":"application-layer/arda-capital/syndication/#pool-lifecycle","title":"Pool Lifecycle","text":"<ol> <li>Creation \u2014 Anchor investor or fund defines risk filters and terms</li> <li>Capital Commitments \u2014 Investors stake capital subject to permissioned checks</li> <li>Matching \u2014 Underwritten deals are routed to matched pools</li> <li>Allocation \u2014 Investors receive TrancheTokens or allocations proportional to commitment</li> <li>Distribution \u2014 Cashflows (interest, principal) paid out based on tranche priority</li> <li>Settlement \u2014 Final events processed via Arda Clear</li> </ol>"},{"location":"application-layer/arda-capital/syndication/#example-pool-configuration","title":"Example Pool Configuration","text":"<pre><code>{\n  \"poolId\": \"POOL-001\",\n  \"jurisdiction\": \"UAE\",\n  \"kycTier\": 2,\n  \"maxLTV\": 0.75,\n  \"minSharpe\": 1.2,\n  \"currency\": \"USDC\",\n  \"tranches\": [\n    { \"id\": \"SENIOR\", \"rate\": 0.05, \"priority\": 1 },\n    { \"id\": \"JUNIOR\", \"rate\": 0.12, \"priority\": 2 }\n  ]\n}\n</code></pre>"},{"location":"application-layer/arda-capital/syndication/#tranching","title":"Tranching","text":"<p>Each pool may tokenize capital commitments into TrancheTokens:</p> Tranche Risk Return Priority Senior Low 4\u20136% First to be paid Mezzanine Medium 8\u201312% Second Junior High 12\u201320%+ Last, high risk/reward <p>Waterfall logic enforces these ranks programmatically at settlement.</p>"},{"location":"application-layer/arda-capital/syndication/#compliance-enforcement","title":"Compliance Enforcement","text":"<ul> <li>Transfer Rules: Prevent transfer of TrancheTokens to unqualified parties</li> <li>Jurisdiction Profiles: Apply limits per region (e.g. max contribution size)</li> <li>Attestation Matching: Anchor investor or verifier identity linked to pool creation</li> <li>Audit Log: Every allocation and distribution is logged immutably</li> </ul>"},{"location":"application-layer/arda-capital/tranches/","title":"Tranches","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"application-layer/arda-capital/tranches/#tranches","title":"Tranches","text":""},{"location":"application-layer/arda-capital/tranches/#overview","title":"Overview","text":"<p>The Tranche System in Arda Capital enables the creation, distribution, and lifecycle management of TrancheTokens. These tokens represent layered claims on cashflows within a syndicated capital pool, allowing for structured risk and return profiles.</p> <p>Tranches are used in private credit, securitized real estate deals, bridge lending, and other forms of asset-backed capital markets. Each tranche is programmable and governed by an embedded waterfall engine to determine payout order and rules.</p>"},{"location":"application-layer/arda-capital/tranches/#key-features","title":"Key Features","text":"Feature Description Tokenized Tranches ERC-20 compatible tokens for each risk layer Waterfall Logic Defines payout priority across tranches Lifecycle Hooks Tracks issuance, maturity, and settlement Compliance Filtering Limits access to tranches based on KYC, jurisdiction, or role Yield Distribution Streams or batches returns based on protocol rules"},{"location":"application-layer/arda-capital/tranches/#tranche-metadata","title":"Tranche Metadata","text":"<pre><code>{\n  \"trancheId\": \"TRANCHE-001\",\n  \"poolId\": \"POOL-001\",\n  \"riskClass\": \"Mezzanine\",\n  \"interestRate\": 0.10,\n  \"maturityDate\": \"2026-01-01\",\n  \"priority\": 2,\n  \"token\": \"TrancheToken-0xabc123\"\n}\n</code></pre>"},{"location":"application-layer/arda-capital/tranches/#tranche-priority","title":"Tranche Priority","text":"<p>Tranches are ordered by payout priority. Higher priority tranches receive payments first:</p> Priority Tranche Type Risk Example Return 1 Senior Low 4\u20136% 2 Mezzanine Medium 8\u201312% 3 Junior High 12\u201320%+ <p>Arda Clear uses this priority when executing the waterfall during settlement.</p>"},{"location":"application-layer/arda-capital/tranches/#lifecycle","title":"Lifecycle","text":"<ol> <li>Issued \u2014 When a pool is funded, TrancheTokens are minted.</li> <li>Active \u2014 While the underlying facility is accruing or disbursing cashflows.</li> <li>Partial Repayment \u2014 Tranches may receive interest or principal based on priority and availability.</li> <li>Matured \u2014 When the facility ends or reaches final payment.</li> <li>Closed/Burned \u2014 Tokens are burned and recorded as closed in AuditLog.</li> </ol>"},{"location":"application-layer/arda-capital/tranches/#waterfall-engine","title":"Waterfall Engine","text":"<p>Arda Clear applies the following waterfall rules:</p> <ul> <li>Satisfy all accrued interest to senior tranches</li> <li>Then repay principal in order of priority</li> <li>Any residual funds allocated to junior tranches or issuer (if agreed)</li> </ul>"},{"location":"application-layer/arda-capital/tranches/#compliance","title":"Compliance","text":"<p>Tranches embed:</p> <ul> <li>TransferRule: Restrict trading to verified addresses</li> <li>JurisdictionProfile: Enforce maximum exposure or total AUM</li> <li>AuditLog: Records all mint, transfer, burn, and distribution events</li> </ul>"},{"location":"application-layer/arda-capital/treasury-flow/","title":"Treasury Flow","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"application-layer/arda-capital/treasury-flow/#treasury-flow","title":"Treasury Flow","text":""},{"location":"application-layer/arda-capital/treasury-flow/#overview","title":"Overview","text":"<p>Arda's Treasury Flow system manages the movement of funds across facilities, tokens, fee recipients, and compliance-controlled accounts. It supports programmable distribution, interest allocation, and sweeping logic, all enforced by deterministic, permissioned protocol logic.</p> <p>This enables real-time capital flows across structured financial products with full auditability and regulatory compliance.</p>"},{"location":"application-layer/arda-capital/treasury-flow/#core-components","title":"Core Components","text":""},{"location":"application-layer/arda-capital/treasury-flow/#1-sweepinstruction","title":"1. SweepInstruction","text":"<ul> <li>Defines automatic movement of MoneyTokens from one account to another.</li> <li>Examples:<ul> <li>Daily sweep from borrower wallet to facility escrow</li> <li>Weekly distribution from SPV to yield token holders</li> </ul> </li> <li>Can be conditional (e.g. only if &gt;$10,000 available)</li> </ul>"},{"location":"application-layer/arda-capital/treasury-flow/#2-interestsplitrule","title":"2. InterestSplitRule","text":"<ul> <li>Governs how interest is allocated across stakeholders.</li> <li>Fields:<ul> <li>Percentage to senior tranche, junior tranche, servicer, protocol</li> <li>Optional floors and caps</li> </ul> </li> <li>Can dynamically change based on FacilityStatus</li> </ul>"},{"location":"application-layer/arda-capital/treasury-flow/#3-feeengine","title":"3. FeeEngine","text":"<ul> <li>Central routing hub for fees in a transaction.</li> <li>Supported fee types:<ul> <li>Origination</li> <li>Platform</li> <li>Servicer</li> <li>Auditor</li> <li>Regulatory reserve</li> </ul> </li> <li>Fees are expressed as flat amounts or basis points, and paid in MoneyToken</li> </ul>"},{"location":"application-layer/arda-capital/treasury-flow/#4-oracleupdate","title":"4. OracleUpdate","text":"<ul> <li>Triggers price or valuation changes.</li> <li>Used to:<ul> <li>Update LTV calculations</li> <li>Drive dynamic repayment terms</li> <li>Adjust reserve ratios</li> </ul> </li> </ul>"},{"location":"application-layer/arda-capital/treasury-flow/#flow-example-mortgage-facility","title":"\ud83d\udd01 Flow Example: Mortgage Facility","text":"<ol> <li>User draws $1M from a facility \u2192 triggers FeeEngine</li> <li>Origination fees (1%) sent to protocol, servicer, and SPV reserve</li> <li>Monthly payments routed via SweepInstruction to a custodial account</li> <li>InterestSplitRule allocates yield to senior and junior tranche holders</li> <li>Late payment triggers EventHook that adjusts schedule and penalties</li> </ol>"},{"location":"application-layer/arda-capital/treasury-flow/#compliance-audit","title":"\ud83e\uddee Compliance &amp; Audit","text":"<ul> <li>All treasury flows logged in <code>AuditLog</code></li> <li>KYC tier, jurisdiction, and role must be validated before funds move</li> <li>Some instructions require additional approvals (e.g. sovereign capital flows)</li> </ul>"},{"location":"application-layer/arda-capital/treasury-flow/#developer-notes","title":"\ud83d\udee0\ufe0f Developer Notes","text":"<ul> <li>SDK exposes <code>createSweep</code>, <code>registerSplitRule</code>, and <code>simulateFeeImpact</code></li> <li>Events are posted to protocol event bus for downstream systems</li> <li>Integration with Arda Clear allows off-chain fiat or cross-chain bridging to follow same logic</li> </ul>"},{"location":"application-layer/arda-capital/treasury/","title":"Treasury","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"application-layer/arda-capital/treasury/#treasury-and-float-management","title":"Treasury and Float Management","text":""},{"location":"application-layer/arda-capital/treasury/#overview","title":"Overview","text":"<p>The Treasury module in Arda Capital manages the flow of funds across capital formation, interest collection, fee distribution, and idle balance allocation. It enables programmable control over how capital is swept, retained, or redirected across tranches, issuers, agents, or protocol reserves.</p> <p>It serves as the accounting and liquidity management layer that complements Arda Clear and TrancheTokens, ensuring capital is used efficiently, compliantly, and transparently.</p>"},{"location":"application-layer/arda-capital/treasury/#key-functions","title":"Key Functions","text":"Function Description Sweep Instruction Rules that route funds from one address or pool to another Interest Split Rule Defines how earned interest is split among parties (investor, agent, protocol) Fee Sink Receives protocol or administrative fees Float Allocation Routes idle balances to holding accounts, escrow, or auto-yield systems Oracle Update Pulls interest rates, FX rates, or reference benchmarks"},{"location":"application-layer/arda-capital/treasury/#example-sweep-configuration","title":"Example Sweep Configuration","text":"<pre><code>{\n  \"instructionId\": \"SWP-023\",\n  \"source\": \"Pool-001\",\n  \"destination\": \"FeeSink-001\",\n  \"trigger\": \"onInterestAccrual\",\n  \"amount\": \"dynamic\",\n  \"condition\": \"kycTier &gt;= 2 &amp;&amp; jurisdiction == 'UAE'\"\n}\n</code></pre> <p>This setup routes interest from a regional pool to a fee sink, conditioned on compliant identity and location.</p>"},{"location":"application-layer/arda-capital/treasury/#interest-split-logic","title":"Interest Split Logic","text":"<p>A portion of accrued interest is distributed according to governance-defined rules:</p> Party Share Investor (TrancheToken holder) 80% Protocol Treasury 15% Agent / Originator 5% <p>This logic is enforced automatically by Arda Clear during settlement cycles.</p>"},{"location":"application-layer/arda-capital/treasury/#float-use-cases","title":"Float Use Cases","text":"<ul> <li>Yield Optimization: Temporarily park funds in on-chain yield vaults or bank deposits</li> <li>Compliance Holding: Retain idle funds for AML/settlement checks</li> <li>Drawdown Buffering: Retain liquidity for partial loan drawdowns or reserve disbursements</li> </ul> <p>All float logic is transparent and auditable, with every sweep and sink logged on-chain.</p>"},{"location":"application-layer/arda-capital/treasury/#integration-points","title":"Integration Points","text":"<ul> <li>Clear: Executes all fund movement and priority enforcement</li> <li>Tranches: Determines interest streams for each token holder group</li> <li>Compliance Engine: Validates sweep rules and jurisdictional logic</li> <li>Vault: Stores and anchors reference configurations and triggers</li> </ul>"},{"location":"application-layer/arda-capital/underwriting/","title":"Underwriting","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"application-layer/arda-capital/underwriting/#underwriting","title":"Underwriting","text":""},{"location":"application-layer/arda-capital/underwriting/#overview","title":"Overview","text":"<p>The Underwriting module in Arda Capital provides programmable, data-driven evaluation logic for real-world asset financing. It enables automatic assessment of borrower profiles, property characteristics, market data, and collateral metrics to enforce eligibility and risk controls in loan origination and syndication workflows.</p> <p>This system is built to integrate with agentic intelligence layers, enabling predictive scoring, dynamic risk exposure tracking, and milestone-triggered recalibration.</p>"},{"location":"application-layer/arda-capital/underwriting/#core-capabilities","title":"Core Capabilities","text":"Feature Description Risk Scoring AI-assisted borrower and asset scoring using tagged features Collateral Valuation Periodic appraisal updates from oracles and valuation agents LTV Enforcement Dynamic loan-to-value monitoring with automatic thresholds Cohort Analysis Risk segmentation based on geography, asset class, performance Milestone Triggers Disbursement conditioned on off-chain or attested events"},{"location":"application-layer/arda-capital/underwriting/#underwriting-process","title":"Underwriting Process","text":"<ol> <li>Application Intake \u2014 Deal metadata submitted via onboarding or API</li> <li>Data Aggregation \u2014 Pull valuation, rent rolls, credit scores, and jurisdictional rules</li> <li>Risk Model Execution \u2014 Agent evaluates data using scoring primitives and cohort trends</li> <li>Decision \u2014 Loan is approved, rejected, or gated for further review</li> <li>Syndication Prep \u2014 Approved deals are matched to pools and moved into tokenization</li> </ol>"},{"location":"application-layer/arda-capital/underwriting/#risk-parameters","title":"Risk Parameters","text":"<p>Key underwriting metrics include:</p> <ul> <li>Loan-to-Value (LTV)</li> <li>Debt Service Coverage Ratio (DSCR)</li> <li>Risk score (0\u2013100)</li> <li>Asset volatility (std deviation of price or yield)</li> <li>Jurisdictional flags (e.g. AML, political risk)</li> </ul> <p>These are modeled using shared risk primitives and intelligence protocol agents.</p>"},{"location":"application-layer/arda-capital/underwriting/#example-agent-inputs","title":"Example Agent Inputs","text":"<pre><code>{\n  \"assetValue\": 2400000,\n  \"loanAmount\": 1600000,\n  \"creditScore\": 720,\n  \"jurisdiction\": \"SG\",\n  \"propertyType\": \"Residential\",\n  \"rentalYield\": 0.045\n}\n</code></pre>"},{"location":"application-layer/arda-capital/underwriting/#integration-points","title":"Integration Points","text":"<ul> <li>Vault \u2014 Secure inputs (e.g. appraisals, docs, rent rolls)</li> <li>Token Factory \u2014 Defines asset rights and tranching post-approval</li> <li>Syndication Engine \u2014 Auto-matches approved loans to programmable pools</li> <li>Compliance Engine \u2014 Filters disqualified applicants and applies local rules</li> </ul>"},{"location":"application-layer/arda-trading/","title":"Overview","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"application-layer/arda-trading/#arda-trading","title":"Arda Trading","text":""},{"location":"application-layer/arda-trading/#overview","title":"Overview","text":"<p>Arda Trading is the secondary market infrastructure layer of the Arda protocol. It supports listing, negotiation, and settlement of tokenized real-world assets and capital instruments, while enforcing full compliance with jurisdictional regulations and KYC-based access control.</p> <p>Designed for both institutional and retail use cases, Arda Trading offers a hybrid model that combines orderbook-based exchange mechanics with RFQ (Request-for-Quote) workflows to accommodate a wide range of asset types and liquidity profiles.</p> <p>Arda Trading provides secondary market infrastructure for real-world asset tokens, including fractional property, debt, and structured financial instruments. It supports both public orderbook and private RFQ-based trading, with embedded compliance enforcement and programmable settlement via Arda Clear.</p> <p>Arda Trading enables institutions, brokers, and individuals to interact with tokenized real estate and private credit as seamlessly as modern equities\u2014while remaining compliant with regional laws and regulations.</p>"},{"location":"application-layer/arda-trading/#key-capabilities","title":"Key Capabilities","text":"Feature Description Hybrid Orderbook + RFQ Supports both open matching and bilateral negotiation Compliance-Aware Matching Pre-trade and post-trade rules integrated at execution Listing Framework Standardized token listing, metadata, and verification Liquidity Incentives Programs for brokers, agents, and market makers Arda Clear Integration All trades settle via the Arda Clear engine for real-time finality"},{"location":"application-layer/arda-trading/#1-hybrid-exchange-model","title":"1. Hybrid Exchange Model","text":"<ul> <li>Supports both:<ul> <li>Public limit and market orders</li> <li>Private negotiated RFQs and OTC trades</li> </ul> </li> <li>Trade types:<ul> <li>AssetToken, DebtToken, TrancheToken, YieldToken</li> </ul> </li> </ul>"},{"location":"application-layer/arda-trading/#2-order-management-system","title":"2. Order Management System","text":"<ul> <li>Standard order types:<ul> <li>Limit, market, stop, TWAP, fill-or-kill</li> </ul> </li> <li>Compliance checks triggered before order execution</li> <li>Wallet-level permissions integrated</li> </ul>"},{"location":"application-layer/arda-trading/#3-rfq-engine","title":"3. RFQ Engine","text":"<ul> <li>Brokers and agents can quote or respond to structured deals</li> <li>Settlement can be deferred or contingent</li> <li>Ideal for large block trades or illiquid asset types</li> </ul>"},{"location":"application-layer/arda-trading/#4-compliance-layer-matching","title":"4. Compliance-Layer Matching","text":"<ul> <li>Matches only allowed trades:<ul> <li>Jurisdictional permission</li> <li>Role and wallet status</li> <li>KYC tier and holding limits</li> </ul> </li> <li>Disallowed trades are rejected before matching</li> </ul>"},{"location":"application-layer/arda-trading/#5-escrow-conditional-settlement","title":"5. Escrow &amp; Conditional Settlement","text":"<ul> <li>Optional escrow of tokens or payments</li> <li>Delayed or phased release</li> <li>Useful for milestone-dependent deals or legal finality requirements</li> </ul>"},{"location":"application-layer/arda-trading/#workflow-overview","title":"Workflow Overview","text":"<pre><code>flowchart TD\n    A[Token Listing] --&gt; B[Orderbook or RFQ]\n    B --&gt; C[Compliance Check]\n    C --&gt; D[Arda Clear]\n    D --&gt; E[Final Settlement + Transfer]\n</code></pre>"},{"location":"application-layer/arda-trading/#supported-asset-types","title":"Supported Asset Types","text":"<ul> <li>AssetTokens (fractional ownership, rent rights)</li> <li>DebtTokens (loans, receivables)</li> <li>TrancheTokens (securitized pools)</li> <li>YieldTokens (cashflow-linked)</li> <li>Permissioned Pool Shares</li> </ul>"},{"location":"application-layer/arda-trading/#market-mechanics","title":"Market Mechanics","text":"<ul> <li>Public Markets: Open liquidity and matching, visible to eligible users</li> <li>Private Markets: Gated trading with attestation-restricted visibility</li> <li>RFQ Mode: Large blocks or regulated assets negotiated off-book</li> <li>Auction Support: Optional timed auctions for special or illiquid assets</li> </ul>"},{"location":"application-layer/arda-trading/#integration-points","title":"Integration Points","text":"<ul> <li>Clear: All matched trades are routed to Arda Clear for compliance and payment processing</li> <li>Vault: Metadata and asset documents referenced for verification</li> <li>Compliance Engine: Filters orders, RFQs, and trade actions</li> <li>Wallet + Identity: Enforces tier gating and region limits</li> </ul>"},{"location":"application-layer/arda-trading/#use-cases","title":"Use Cases","text":"<ul> <li>Secondary trading of real estate or capital tokens</li> <li>Broker-assisted asset sales</li> <li>Liquidity exit for crowdfunding participants</li> <li>OTC block deals with compliance rails</li> <li>Landmark asset auctions with verified buyer pools</li> </ul>"},{"location":"application-layer/arda-trading/#liquidity-features","title":"Liquidity Features","text":"<ul> <li>Fractional Ownership: Enables retail-sized positions</li> <li>Liquidity Incentives: Market makers and brokers rewarded for tight spreads</li> <li>Asset Pools: Group similar tokens for index or pooled liquidity</li> <li>Exit Pathways: For crowdfunded or long-term holders</li> </ul>"},{"location":"application-layer/arda-trading/#settlement","title":"Settlement","text":"<ul> <li>Executed trades are routed through Arda Clear</li> <li>Supports:<ul> <li>Instant on-chain swaps</li> <li>Cross-chain or fiat-linked netting</li> <li>Delayed finality for regulated jurisdictions</li> </ul> </li> </ul>"},{"location":"application-layer/arda-trading/#developer-notes","title":"Developer Notes","text":"<ul> <li>Orderbook and RFQ exposed via SDK and APIs</li> <li>Hooks allow post-trade compliance or event triggering</li> <li>Governance may whitelist new token types or matching logic via AIP</li> </ul>"},{"location":"application-layer/arda-trading/#example-flow","title":"Example Flow","text":"<ol> <li>Investor lists 1% of a Dubai property token at market price</li> <li>U.S. buyer submits RFQ for 5% total stake \u2192 price and terms agreed</li> <li>Compliance engine verifies eligibility (KYC Tier 3, accredited)</li> <li>Tokens held in escrow until fiat settlement completes</li> <li>Final settlement posted via Arda Clear</li> </ol>"},{"location":"application-layer/arda-trading/compliance/","title":"Compliance","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"application-layer/arda-trading/compliance/#trading-compliance-layer","title":"Trading Compliance Layer","text":""},{"location":"application-layer/arda-trading/compliance/#overview","title":"Overview","text":"<p>Arda Trading integrates real-time compliance enforcement into every trade-related action. This ensures that token listings, order submissions, quote responses, and settlements all conform to regional regulations, KYC levels, and asset-specific restrictions.</p> <p>The Compliance Engine provides deterministic validation via TransferRules and JurisdictionProfiles, preventing unauthorized trading behavior.</p>"},{"location":"application-layer/arda-trading/compliance/#enforcement-points","title":"Enforcement Points","text":"Action Compliance Logic Order Submission Verifies wallet tier, region, and token type Order Visibility Filters orderbook by jurisdictional eligibility Match Execution Checks TransferRule, blacklists, and volume limits Quote Handling Validates eligibility before RFQ or OTC deal is shown Settlement Triggers TransferRule, AttestationRegistry, and AuditLog hooks"},{"location":"application-layer/arda-trading/compliance/#compliance-structures","title":"Compliance Structures","text":"<ul> <li>TransferRule \u2014 Enforced on every token move</li> <li>JurisdictionProfile \u2014 Applies per-region caps, opt-ins, or asset constraints</li> <li>AttestationRegistry \u2014 Governs RFQ access, broker role eligibility</li> <li>AuditLog \u2014 Records full trade and action history immutably</li> </ul>"},{"location":"application-layer/arda-trading/compliance/#example-regional-rule","title":"Example: Regional Rule","text":"<pre><code>{\n  \"tokenType\": \"AssetToken\",\n  \"jurisdiction\": \"US\",\n  \"fromKycTier\": 2,\n  \"toKycTier\": 2,\n  \"restrictions\": {\n    \"accredited_investor_required\": true,\n    \"maxTransactionSizeUSD\": 250000\n  }\n}\n</code></pre>"},{"location":"application-layer/arda-trading/compliance/#listings-visibility","title":"Listings &amp; Visibility","text":"<p>Before a token can be listed or traded:</p> <ul> <li>Metadata must be verified and anchored in the Vault</li> <li>Token originator must have a valid issuer mandate</li> <li>Minimum KYC tier and attestation checks apply</li> <li>Region-based opt-in logic ensures local compliance</li> </ul>"},{"location":"application-layer/arda-trading/compliance/#rfq-specific-controls","title":"RFQ-Specific Controls","text":"<p>RFQ messages undergo pre-execution filtering:</p> <ul> <li>Initiator Check: Can only submit if tier and attestation are valid</li> <li>Counterparty Filter: Auto-matches based on shared eligibility</li> <li>Jurisdiction Mapping: Ensures both sides meet regional requirements</li> </ul>"},{"location":"application-layer/arda-trading/cross-chain/","title":"Cross Chain","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"application-layer/arda-trading/cross-chain/#cross-chain-liquidity-and-transfers","title":"Cross-Chain Liquidity and Transfers","text":""},{"location":"application-layer/arda-trading/cross-chain/#overview","title":"Overview","text":"<p>Arda Trading supports compliant cross-chain trading of tokenized assets via Interop bridges coordinated with Arda Core. This enables liquidity to move between regional ArdaOS chains and external blockchains (e.g. Ethereum, Celestia) while preserving compliance, identity checks, and finality guarantees.</p> <p>Bridging is facilitated via verifiable proofs (ZK, MPC, or multisig), and settlement flows through Arda Clear to ensure auditability and legal enforceability.</p>"},{"location":"application-layer/arda-trading/cross-chain/#use-cases","title":"Use Cases","text":"<ul> <li>Trade an AssetToken issued on Arda UAE on a marketplace in Arda US</li> <li>Transfer DebtTokens between chains for collateral aggregation</li> <li>Unlock liquidity across regions with shared pool participation</li> <li>Enable regulated OTC deals via cross-chain RFQ bridging</li> <li>Migrate fractional ownership portfolios between sovereign Arda chains</li> </ul>"},{"location":"application-layer/arda-trading/cross-chain/#supported-bridge-types","title":"Supported Bridge Types","text":"Bridge Description Celestia IPC ZK-based sovereign chain interoperability Hyperlane Modular message relay across chains Native Arda Bridge Chain-to-chain bridge for KYC-verified transfers Oracle Bridge Attested fallback via institutional validators (slow-path)"},{"location":"application-layer/arda-trading/cross-chain/#compliance-hooks","title":"Compliance Hooks","text":"<p>Every cross-chain instruction checks:</p> <ul> <li>TransferRule (on sender and recipient chain)</li> <li>KYC Tier (both ends)</li> <li>JurisdictionProfile</li> <li>Vault-based Attestation proofs</li> <li>Cross-chain audit sync via AuditLog</li> </ul>"},{"location":"application-layer/arda-trading/cross-chain/#example-bridge-instruction","title":"Example Bridge Instruction","text":"<pre><code>{\n  \"txId\": \"BRIDGE-789\",\n  \"sourceChain\": \"arda-uae\",\n  \"destinationChain\": \"arda-us\",\n  \"tokenId\": \"AssetToken-007\",\n  \"amount\": 5,\n  \"sender\": \"0xABC\",\n  \"receiver\": \"0xDEF\",\n  \"status\": \"PENDING\"\n}\n</code></pre>"},{"location":"application-layer/arda-trading/cross-chain/#interop-architecture","title":"Interop Architecture","text":"<pre><code>flowchart TD\n    A[Arda UAE] --&gt;|Bridge Msg| B[Arda Core]\n    B --&gt; C[Compliance + AuditLog]\n    C --&gt; D[Arda US]\n    D --&gt; E[Arda Clear]\n</code></pre>"},{"location":"application-layer/arda-trading/cross-chain/#finality-fallbacks","title":"Finality + Fallbacks","text":"<ul> <li>Arda Core confirms message receipt</li> <li>Destination chain validates sender rules</li> <li>Funds/token moved only after full compliance approval</li> <li>Timeout + rollback available on Oracle fallback bridges</li> </ul>"},{"location":"application-layer/arda-trading/fractional/","title":"Fractional","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"application-layer/arda-trading/fractional/#fractional-ownership-and-trading","title":"Fractional Ownership and Trading","text":""},{"location":"application-layer/arda-trading/fractional/#overview","title":"Overview","text":"<p>Arda supports fractional ownership of real-world assets through AssetTokens, enabling investors to buy and sell portions of properties or financial rights. This lowers the barrier to entry, improves liquidity, and enables portfolio diversification at smaller capital sizes.</p> <p>The trading of fractional interests is fully compliance-gated, supporting retail, accredited, and institutional flows while respecting regional legal boundaries.</p>"},{"location":"application-layer/arda-trading/fractional/#key-features","title":"Key Features","text":"Feature Description Micro-ownership Allows purchases as low as 0.01% of an asset Transfer Restricted Enforces KYC tier, jurisdiction, and token limits on every trade Aggregation Support Brokers or marketplaces can bundle fractions into portfolios Real Yield Distribution Fractional holders can receive pro-rata rent or dividend payouts Early Liquidity Enables crowdfunding exit before full asset maturity"},{"location":"application-layer/arda-trading/fractional/#lifecycle","title":"Lifecycle","text":"<ol> <li>Issuance \u2014 AssetTokens minted representing fractional rights</li> <li>Primary Distribution \u2014 Via Arda Capital, Crowdfunding, or Direct Sale</li> <li>Secondary Trading \u2014 Listed on Arda Trading with KYC filters</li> <li>Yield Streams \u2014 Optional rental yield, income, or tax distribution</li> <li>Exit/Maturity \u2014 Asset is sold or converted; fractions redeemed via Arda Clear</li> </ol>"},{"location":"application-layer/arda-trading/fractional/#compliance-controls","title":"Compliance Controls","text":"<ul> <li>Minimum Denomination \u2014 Configured per jurisdiction (e.g., 0.1%, $1,000 equivalent)</li> <li>Transfer Whitelist \u2014 Only eligible investors may receive tokens</li> <li>Lockups / Vesting \u2014 Optional time gating for early participants</li> <li>Tax Reporting \u2014 Optional automatic tax and capital gains tracking</li> </ul>"},{"location":"application-layer/arda-trading/fractional/#integration-points","title":"Integration Points","text":"<ul> <li>Token Factory \u2014 Defines fractional rights in metadata schema</li> <li>Vault \u2014 Anchors legal title, tax compliance, and offer documents</li> <li>Clear \u2014 Manages payouts and final redemptions</li> <li>Compliance Engine \u2014 Enforces per-fraction regulatory logic</li> <li>Orderbook / RFQ \u2014 Enables public or private market trading</li> </ul>"},{"location":"application-layer/arda-trading/fractional/#example","title":"Example","text":"<pre><code>{\n  \"tokenId\": \"AssetToken-002\",\n  \"fractionOwned\": 0.005,\n  \"entitlements\": [\"rental_income\", \"appreciation\"],\n  \"region\": \"UAE\",\n  \"restrictions\": {\n    \"minAmountUSD\": 1000,\n    \"kycTier\": 2\n  }\n}\n</code></pre>"},{"location":"application-layer/arda-trading/interfaces/","title":"Interfaces","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"application-layer/arda-trading/interfaces/#trading-interfaces-and-sdks","title":"Trading Interfaces and SDKs","text":""},{"location":"application-layer/arda-trading/interfaces/#overview","title":"Overview","text":"<p>Arda Trading exposes a suite of SDKs, APIs, and UI components that enable wallet providers, brokers, custodians, and marketplaces to interact with the trading infrastructure. All interfaces enforce embedded compliance constraints and are designed to work seamlessly across regional ArdaOS deployments.</p> <p>Interfaces support listing, order submission, RFQ messaging, market data access, and real-time trade execution routing through Arda Clear.</p>"},{"location":"application-layer/arda-trading/interfaces/#sdk-endpoints","title":"SDK Endpoints","text":"Endpoint Description <code>POST /orderbook/order</code> Submit order (limit, market, stop, etc.) <code>GET /orderbook/depth</code> Retrieve orderbook for a token <code>POST /rfq/submit</code> Initiate request-for-quote negotiation <code>POST /rfq/respond</code> Respond to an RFQ if qualified <code>GET /token/:id</code> Fetch token metadata and fractional rights <code>GET /wallet/:id/compliance</code> Return compliance permissions for wallet <code>GET /trade/:id/status</code> Query execution or settlement status"},{"location":"application-layer/arda-trading/interfaces/#sdk-features","title":"SDK Features","text":"<ul> <li>Compliance middleware for TransferRule and jurisdiction checks</li> <li>Typed schema generation for token definitions</li> <li>Event stream for matched trades and quote activity</li> <li>Pluggable adapters for brokers, custodians, and DAO UIs</li> <li>Automatic settlement routing and escrow support</li> </ul>"},{"location":"application-layer/arda-trading/interfaces/#ui-integration","title":"UI Integration","text":"<p>Developers may embed components via:</p> <ul> <li>Order Forms \u2014 Pre-validated entry points for trading any token</li> <li>Market Viewers \u2014 Read-only interfaces filtered by region/tier</li> <li>RFQ Messenger \u2014 Chat-style UX for regulated block trades</li> <li>Portfolio Dashboards \u2014 Aggregated ownership, yield, and order history</li> </ul>"},{"location":"application-layer/arda-trading/interfaces/#integration-patterns","title":"Integration Patterns","text":"Pattern Audience Description API Gateway Custodians, Brokers Direct REST-based execution SDK Client DApps, UIs JS/TS libraries for fast integration Agent Mode Institutions API + CLI interface with identity attestation RPC Plugin Exchanges Low-latency RPC wrapper for order injection"},{"location":"application-layer/arda-trading/interfaces/#compliance-enforcement","title":"Compliance Enforcement","text":"<p>Every SDK call routes through:</p> <ul> <li>KYC Tier Filter</li> <li>JurisdictionProfile</li> <li>AuditLog Hook</li> <li>TransferRule Validator</li> </ul> <p>Misconfigured or disallowed calls return clear structured errors and are never forwarded to execution layer.</p>"},{"location":"application-layer/arda-trading/interfaces/#example-error-unauthorized-wallet","title":"Example Error (Unauthorized Wallet)","text":"<pre><code>{\n  \"error\": \"AccessDenied\",\n  \"message\": \"KYC tier too low for asset class: TrancheToken\",\n  \"requiredTier\": 2,\n  \"actualTier\": 1\n}\n</code></pre>"},{"location":"application-layer/arda-trading/market-makers/","title":"Market Makers","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"application-layer/arda-trading/market-makers/#market-makers-and-liquidity-incentives","title":"Market Makers and Liquidity Incentives","text":""},{"location":"application-layer/arda-trading/market-makers/#overview","title":"Overview","text":"<p>Arda Trading incentivizes liquidity providers, brokers, and market makers to seed secondary markets for tokenized assets. These actors are rewarded for tightening spreads, improving depth, and facilitating early adoption of thinly traded tokens, such as real estate shares or private debt instruments.</p> <p>Market maker participation is permissioned and compliance-aware, with programs tailored to institutional agents, DAO participants, and regulated brokers.</p>"},{"location":"application-layer/arda-trading/market-makers/#key-roles","title":"Key Roles","text":"Role Description Protocol Market Maker Contracts directly with Arda DAO to provide base liquidity Broker Partner Onboards assets and maintains liquidity with performance-linked incentives LP Syndicate Whitelisted addresses collectively manage a market-making strategy Autonomous Agent Smart contract-based bots using programmatic rules to provide quotes"},{"location":"application-layer/arda-trading/market-makers/#incentive-mechanisms","title":"Incentive Mechanisms","text":"<ul> <li>Spread Rebates: Earned for providing tight bid/ask spreads</li> <li>Volume Rewards: Based on trading volume and order persistence</li> <li>Token Incentives: $ARDA or PoolShare tokens distributed weekly</li> <li>Listing Bounties: For onboarding landmark or illiquid assets</li> <li>Fee Sharing: Optional fee split with marketplaces or listing platforms</li> </ul>"},{"location":"application-layer/arda-trading/market-makers/#participation-requirements","title":"Participation Requirements","text":"<ul> <li>KYC Tier: Tier 2+ required for all market maker wallets</li> <li>Jurisdiction Limits: Certain assets restricted to regional actors</li> <li>Liquidity Thresholds: Must maintain minimum size and uptime</li> <li>Disclosure: Brokers must disclose conflicts and sources of funds</li> </ul>"},{"location":"application-layer/arda-trading/market-makers/#performance-monitoring","title":"Performance Monitoring","text":"<p>Metrics tracked include:</p> <ul> <li>Spread %</li> <li>Orderbook depth (per token)</li> <li>Quote frequency and uptime</li> <li>Trade fulfillment ratio</li> <li>Regional coverage and asset class diversity</li> </ul> <p>These are published in the Agent Registry and on-chain analytics dashboards.</p>"},{"location":"application-layer/arda-trading/market-makers/#integration-points","title":"Integration Points","text":"<ul> <li>Orderbook: Posts and updates limit orders</li> <li>RFQ Engine: Fulfills quotes manually or via API</li> <li>Vault: Stores registration documents, broker agreements</li> <li>Compliance Engine: Filters based on KYC, region, and mandate status</li> <li>Agent Registry: Tracks score, participation, and governance eligibility</li> </ul>"},{"location":"application-layer/arda-trading/market-makers/#example-market-maker-record","title":"Example Market Maker Record","text":"<pre><code>{\n  \"agentId\": \"MM-041\",\n  \"entity\": \"PropBridge Capital Ltd\",\n  \"region\": \"EU\",\n  \"authorizedTokens\": [\"AssetToken-001\", \"TrancheToken-011\"],\n  \"performance\": {\n    \"spreadAvg\": 0.85,\n    \"dailyVolume\": 98000,\n    \"uptimePct\": 98.7\n  }\n}\n</code></pre>"},{"location":"application-layer/arda-trading/orderbook/","title":"Order Book","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"application-layer/arda-trading/orderbook/#orderbook-and-matching-engine","title":"Orderbook and Matching Engine","text":""},{"location":"application-layer/arda-trading/orderbook/#overview","title":"Overview","text":"<p>The Arda Orderbook and Matching Engine powers the open market side of Arda Trading. It facilitates secondary market transactions for tokenized assets through limit, market, and conditional orders. It is tightly coupled with compliance logic to ensure only permitted trades execute, and every match routes to Arda Clear for atomic settlement.</p> <p>The engine is designed to serve both low-friction retail experiences and institutional execution use cases.</p>"},{"location":"application-layer/arda-trading/orderbook/#supported-order-types","title":"Supported Order Types","text":"Type Description <code>Limit</code> Buy/sell at a specified price or better <code>Market</code> Immediate execution at best available price <code>Stop-Loss</code> Triggers market sell when asset drops below threshold <code>TWAP</code> Time-weighted average price algorithmic execution <code>RFQ</code> Broker-assisted, non-custodial quote negotiation"},{"location":"application-layer/arda-trading/orderbook/#matching-logic","title":"Matching Logic","text":"<ol> <li>Order Submission \u2014 User submits via SDK or UI</li> <li>Pre-Trade Compliance \u2014 Enforces TransferRules, KYC tiers, and jurisdiction constraints</li> <li>Order Matching \u2014 Best bid/ask match executed</li> <li>Settlement Routing \u2014 Trade is queued in Arda Clear</li> <li>Finalization \u2014 Funds and tokens transferred atomically</li> </ol>"},{"location":"application-layer/arda-trading/orderbook/#market-data","title":"Market Data","text":"<p>The engine supports:</p> <ul> <li>Orderbook depth queries</li> <li>Trade history</li> <li>Spread calculation</li> <li>Price discovery for NAV models or yield assumptions</li> </ul> <p>All data is scoped to eligible users based on jurisdiction and attestation level.</p>"},{"location":"application-layer/arda-trading/orderbook/#compliance-enforcement","title":"Compliance Enforcement","text":"<p>The engine consults the Compliance Engine on every action:</p> <ul> <li>Order Submission \u2014 KYC/region check</li> <li>Order Visibility \u2014 Only display listings allowed by region/tier</li> <li>Trade Execution \u2014 Validate TransferRule before settlement</li> <li>AuditLog \u2014 Every match, cancel, or fail event is recorded</li> </ul>"},{"location":"application-layer/arda-trading/orderbook/#matching-modes","title":"Matching Modes","text":"Mode Audience Visibility Execution Public Tier 2+ All verified users Automatic Private Tier 3 only Whitelisted Manual or auction RFQ Institutional Bilateral Quote-based"},{"location":"application-layer/arda-trading/orderbook/#example-order-submission-sdk","title":"Example Order Submission (SDK)","text":"<pre><code>{\n  \"type\": \"limit\",\n  \"tokenId\": \"AssetToken-001\",\n  \"price\": 105.25,\n  \"quantity\": 10,\n  \"side\": \"buy\",\n  \"wallet\": \"0x123...\",\n  \"kycTier\": 2\n}\n</code></pre>"},{"location":"application-layer/arda-trading/orderbook/#integration-points","title":"Integration Points","text":"<ul> <li>Clear \u2014 Atomic netting and compliance-validated transfers</li> <li>Vault \u2014 Resolves asset metadata (e.g. location, type, rights)</li> <li>Wallet + Identity \u2014 Validates tier and role on submit</li> <li>Compliance Engine \u2014 Final approval gate</li> </ul>"},{"location":"application-layer/arda-trading/settlement/","title":"Settlement","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"application-layer/arda-trading/settlement/#trade-settlement-and-finality","title":"Trade Settlement and Finality","text":""},{"location":"application-layer/arda-trading/settlement/#overview","title":"Overview","text":"<p>Settlement in Arda Trading is powered by Arda Clear, ensuring compliant, atomic finalization of asset transfers and payments. The system supports real-time and delayed settlement, netting, fee deduction, and multi-jurisdictional compliance validation across all ArdaOS regions.</p> <p>Arda Clear acts as a post-trade coordination layer between the matching engine, compliance filters, custody systems, and fiat on/off-ramps.</p>"},{"location":"application-layer/arda-trading/settlement/#key-components","title":"Key Components","text":"Component Description Settlement Queue Buffers and orders pending trade instructions Compliance Hook Enforces KYC, TransferRule, and JurisdictionProfile checks Netting Engine Aggregates trades for batch resolution or bilateral offsetting Escrow Layer Optional hold-and-release for regulatory cooling-off periods Fee Engine Calculates and routes trading, protocol, and brokerage fees"},{"location":"application-layer/arda-trading/settlement/#settlement-lifecycle","title":"Settlement Lifecycle","text":"<ol> <li>Trade Matched \u2013 Orderbook or RFQ engine produces matched trade</li> <li>Instruction Queued \u2013 Trade passed to Arda Clear</li> <li>Compliance Evaluation \u2013 TransferRule, JurisdictionProfile, AuditLog checks</li> <li>Asset + Fund Escrow \u2013 If needed, assets locked prior to settlement</li> <li>Finalization \u2013 Tokens and payments atomically swapped and recorded</li> </ol>"},{"location":"application-layer/arda-trading/settlement/#settlement-modes","title":"Settlement Modes","text":"Mode Description Use Case Real-Time Finalizes instantly after trade match Spot trading, high-liquidity assets Delayed Holds instruction for defined window Jurisdictional cooling-off periods Net Settlement Batches trades across multiple matches Syndication, custody transfer Escrow-Based Multi-party approval before release Institutional sales, brokered deals"},{"location":"application-layer/arda-trading/settlement/#fee-routing-example","title":"Fee Routing Example","text":"<pre><code>{\n  \"instructionId\": \"TX-031\",\n  \"tokenId\": \"AssetToken-014\",\n  \"buyer\": \"0xAAA\",\n  \"seller\": \"0xBBB\",\n  \"price\": 125000,\n  \"fees\": {\n    \"protocol\": 750,\n    \"broker\": 500\n  },\n  \"status\": \"FINALIZED\"\n}\n</code></pre>"},{"location":"application-layer/arda-trading/settlement/#integration-points","title":"Integration Points","text":"<ul> <li>Clear: Executes and records all instructions</li> <li>Vault: References off-chain proof or escrow triggers</li> <li>Compliance Engine: Blocks unauthorized settlements</li> <li>Wallet / Identity: Applies tier logic for volume thresholds</li> </ul>"},{"location":"arda-core/","title":"Overview","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"arda-core/#arda-core","title":"Arda Core","text":"<p>Arda Core is the foundational infrastructure layer and global coordination hub of the Arda protocol, acting as its \"semantic and compliance operating system.\" It defines global primitives, compliance logic, and identity structures, providing shared infrastructure and semantic coherence across sovereign ArdaOS chains. This enables standardized semantics, secure data access, token lifecycle control, and cross-chain interoperability to support programmable real estate and private capital markets at scale.</p> <p>Arda Core is jurisdiction-agnostic and interacts with sovereign ArdaOS chains through deterministic APIs, providing global coordination and consistency without enforcing a monolithic execution model.</p>"},{"location":"arda-core/#key-modules-in-arda-core","title":"Key Modules in Arda Core","text":"<ul> <li>Taxonomy \u2014 A universal classification system for assets, rights, entities, and legal structures across the entire Arda ecosystem.</li> <li>Vault \u2014 Privacy-preserving data layer with FHE/MPC-enabled encrypted storage for sensitive property and legal data.</li> <li>Wallet \u2014 Governs user and institutional access with KYC tier enforcement, custody configurations, and compliance integration.</li> <li>Onboarding \u2014 Handles user, entity, and real-world asset registration with automated and manual verification workflows.</li> <li>Compliance \u2014 Dynamic compliance engine with KYC/AML, TransferRules, JurisdictionProfiles, and audit logging.</li> <li>Arda Foundry \u2014 Protocol-native legal entity and structure creation system for SPVs, trusts, and other legal wrappers.</li> <li>Token Factory \u2014 Generates token types like AssetToken, DebtToken, TrancheToken with full compliance bindings and lifecycle management.</li> <li>Clear \u2014 Settlement engine for asset transfers, capital netting, and cross-chain clearing with escrow support.</li> <li>Network-as-a-Service (NaaS) \u2014 Framework for deploying regional chains with sovereign control and compliance alignment.</li> <li>Identity \u2014 Core entity structures like Entity, WalletGroup, KYC Tiers, and attestation-backed identity management.</li> </ul>"},{"location":"arda-core/#1-arda-taxonomy","title":"1. Arda Taxonomy","text":"<ul> <li>A shared data model for describing assets, rights, entities, and relationships.</li> <li>Supports on-chain enforceability of legal, financial, and regulatory semantics.</li> <li>Includes:<ul> <li>Asset classes, rights types, unit standards</li> <li>Structured tagging and metadata schemas</li> <li>Governance via Arda Improvement Proposals (AIPs)</li> </ul> </li> </ul>"},{"location":"arda-core/#2-arda-vault","title":"2. Arda Vault","text":"<ul> <li>Privacy-preserving data layer for sensitive documents (e.g. deeds, SPV docs, valuations).</li> <li>Supports:<ul> <li>FHE/MPC-encrypted access control</li> <li>Document anchoring</li> <li>Queryable zero-knowledge proofs</li> </ul> </li> </ul>"},{"location":"arda-core/#3-arda-compliance","title":"3. Arda Compliance","text":"<ul> <li>Dynamic compliance engine and registry.</li> <li>Includes:<ul> <li>KYC / AML Engine</li> <li>JurisdictionProfile</li> <li>TransferRule</li> <li>AuditLog</li> </ul> </li> <li>Governs all cross-chain, cross-border activity.</li> </ul>"},{"location":"arda-core/#4-arda-governance","title":"4. Arda Governance","text":"<ul> <li>Upgrades and rule changes are driven via decentralized governance.</li> <li>AIPs define schema evolution, protocol parameters, and jurisdictional rules.</li> </ul>"},{"location":"arda-core/#5-arda-clear","title":"5. Arda Clear","text":"<ul> <li>Global clearing and net settlement engine.</li> <li>Supports:<ul> <li>Cross-chain transaction routing</li> <li>Delayed or escrowed settlement</li> <li>Fiat settlement anchoring</li> </ul> </li> </ul>"},{"location":"arda-core/#architecture-summary","title":"Architecture Summary","text":"<p>Arda Core is not a smart contract or monolithic chain \u2014 it is a protocol specification and set of modules, implemented as:</p> <ul> <li>Deterministic SDK primitives used by regional chains.</li> <li>Enforced compliance policies at transfer and onboarding layers.</li> <li>A global coordination standard for syncing state across sovereign Arda chains.</li> </ul> <p>Each sovereign ArdaOS instance imports Core definitions for compliance, taxonomy, and identity but can override execution rules locally to match jurisdictional law.</p>"},{"location":"arda-core/#integration-overview","title":"Integration Overview","text":"Module Consumes / Emits External Systems Token Factory AssetToken SDK, Compliance Engine Vault Encrypted Blobs FHE/MPC Services Identity KYC Tiers Custody APIs, Verifiers Clear Transfers/Settles Global bridges, NaaS"},{"location":"arda-core/#coordination-responsibilities","title":"Coordination Responsibilities","text":"<ul> <li>Manages global registry of:<ul> <li>Wallet Groups and Entities</li> <li>Assets and SPVs</li> <li>Taxonomies and jurisdictions</li> </ul> </li> <li>Synchronizes permissioning across sovereign ArdaOS chains</li> <li>Orchestrates liquidity flows and bridges across regions</li> </ul>"},{"location":"arda-core/#security-and-permissions","title":"Security and Permissions","text":"<ul> <li>Validators are permissioned per region but coordinated globally.</li> <li>Vault access controlled by on-chain attestations and role-specific keys.</li> <li>Compliance checks are enforced before execution\u2014not post hoc.</li> </ul>"},{"location":"arda-core/arda-foundry/","title":"Arda Foundry","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"arda-core/arda-foundry/#arda-foundry","title":"Arda Foundry","text":"<p>Arda Foundry is the protocol-native legal entity and structure creation system. It automates the instantiation of SPVs, trusts, funds, and other wrappers to provide legal enforceability and investor protections for real-world asset tokenization.</p> <p>Foundry is essential for bridging the on-chain logic of Arda with the off-chain legal frameworks that govern real estate, credit, and structured products.</p>"},{"location":"arda-core/arda-foundry/#core-capabilities","title":"Core Capabilities","text":""},{"location":"arda-core/arda-foundry/#spv-creation","title":"SPV Creation","text":"<ul> <li>Instantiates special-purpose vehicles in supported jurisdictions.</li> <li>Supported structures:<ul> <li>LLC (Delaware, DIFC, etc.)</li> <li>RAK ICC</li> <li>UAE Free Zone Entities</li> <li>Cayman Trusts</li> </ul> </li> </ul>"},{"location":"arda-core/arda-foundry/#legal-wrapper-binding","title":"Legal Wrapper Binding","text":"<ul> <li>Links SPVs to AssetTokens or DebtTokens.</li> <li>Enables enforceability of:<ul> <li>Ownership</li> <li>Liens</li> <li>Payment rights</li> </ul> </li> <li>Anchored via document hashes in Arda Vault.</li> </ul>"},{"location":"arda-core/arda-foundry/#lifecycle-integration","title":"Lifecycle Integration","text":"<p>Foundry-issued entities can:</p> <ul> <li>Track cap table via Arda Ledger</li> <li>Issue or revoke tokens based on legal status</li> <li>Receive treasury flows (rent, fees, repayments)</li> </ul>"},{"location":"arda-core/arda-foundry/#investor-board-management","title":"Investor &amp; Board Management","text":"<ul> <li>Permissions for entity-level roles:<ul> <li>Directors</li> <li>Auditors</li> <li>Beneficiaries</li> </ul> </li> <li>Changes to governance encoded via on-chain proposals or verified docs</li> </ul>"},{"location":"arda-core/arda-foundry/#template-library","title":"Template Library","text":"<p>Reusable legal and operational templates for:</p> <ul> <li>Equity-only SPVs</li> <li>Tranche-based debt facilities</li> <li>Property co-ownership schemes</li> </ul>"},{"location":"arda-core/arda-foundry/#digital-twin-creation","title":"Digital Twin Creation","text":"<p>Generate a compliant, enforceable digital representation of any asset.</p>"},{"location":"arda-core/arda-foundry/#automated-governance","title":"Automated Governance","text":"<p>Embed rules for transfer, reporting, and lifecycle events directly into the asset.</p>"},{"location":"arda-core/arda-foundry/#compliance-validity","title":"Compliance &amp; Validity","text":"<ul> <li>Document notarization or regulator-issued filings can be anchored in Vault</li> <li>Vault entries link document + metadata + hash + jurisdiction</li> <li>KYC/KYB required for directors and founding entities</li> <li>Expiry, modification, or revocation updates status across protocol</li> </ul>"},{"location":"arda-core/arda-foundry/#example-flow","title":"Example Flow","text":"<ol> <li>Developer creates a Dubai SPV to hold a commercial building</li> <li>Files Articles of Association + title deed to Arda Vault</li> <li>Mints AssetToken and links it to the SPV via Foundry</li> <li>Investors participate in PermissionedPool governed by that SPV</li> <li>Monthly rent routed to SPV, then to TrancheToken holders</li> </ol>"},{"location":"arda-core/clear/","title":"Clear","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"arda-core/clear/#arda-clear","title":"Arda Clear","text":"<p>Arda Clear is the clearing and settlement module within Arda Core. It is responsible for resolving asset and capital flows across participants, pools, and chains. Arda Clear enables near-instant, compliance-aware settlement of transactions including primary issuance, secondary trading, syndicated capital allocation, and loan repayment.</p> <p>It ensures that all transfers respect jurisdictional rules, netting configurations, escrow conditions, and time-based maturity logic.</p>"},{"location":"arda-core/clear/#core-capabilities","title":"Core Capabilities","text":"Function Description Netting Engine Aggregates bilateral and multilateral obligations across trades Escrow System Supports conditional settlement with hold-and-release logic Settlement Queue Prioritizes instructions based on maturity, compliance, and funding status Fee Engine Deducts fees, interest, and administrative charges per rule set Cross-Chain Bridge Hooks Finalizes settlement across sovereign ArdaOS chains"},{"location":"arda-core/clear/#settlement-lifecycle","title":"Settlement Lifecycle","text":"<ol> <li>Instruction Submitted \u2013 Via Arda Trading, Capital, or Token Factory.</li> <li>Compliance Check \u2013 JurisdictionProfile and TransferRule evaluated.</li> <li>Escrow Hold (if applicable) \u2013 Funds or tokens placed in escrow.</li> <li>Netting &amp; Matching \u2013 Debits and credits resolved across parties.</li> <li>Finalization \u2013 Tokens and/or funds are transferred, state is committed.</li> <li>Audit Log Update \u2013 Result logged for traceability.</li> </ol>"},{"location":"arda-core/clear/#integration-points","title":"Integration Points","text":"<ul> <li>Token Factory \u2013 Executes post-lifecycle settlement events (e.g., principal return, yield).</li> <li>Syndication Engine \u2013 Allocates proceeds across TrancheTokens.</li> <li>Vault \u2013 Verifies off-chain conditions and legal triggers.</li> <li>Interop Layer \u2013 Allows settlement finality across regions via bridge confirmations.</li> <li>Compliance Engine \u2013 Filters non-permitted instructions before execution.</li> </ul>"},{"location":"arda-core/clear/#use-cases","title":"Use Cases","text":"<ul> <li>Trade Finality: Ensures fast and irreversible asset exchange post-match.</li> <li>Loan Repayment: Handles repayment + interest burn logic for DebtTokens.</li> <li>Syndication Allocation: Allocates investor funds or returns via predefined waterfall.</li> <li>Fee Deduction: Implements configurable admin and protocol fee rules.</li> <li>Cross-Chain Settlement: Bridges assets or obligations between regional chains.</li> </ul>"},{"location":"arda-core/clear/#example","title":"Example","text":"<pre><code>{\n  \"instructionId\": \"SET-0021\",\n  \"source\": \"arda-capital\",\n  \"token\": \"DebtToken-0xabc\",\n  \"amount\": 500000,\n  \"recipient\": \"Wallet-0x123\",\n  \"escrowed\": true,\n  \"fees\": {\n    \"protocol\": 500,\n    \"admin\": 1000\n  },\n  \"status\": \"QUEUED\"\n}\n</code></pre>"},{"location":"arda-core/compliance/","title":"Compliance","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"arda-core/compliance/#arda-compliance-engine","title":"Arda Compliance Engine","text":"<p>The Arda Compliance Engine is the foundational policy enforcement layer that governs identity, asset, and transaction behavior across the Arda ecosystem. It acts as the runtime permission system for the protocol, ensuring all activity aligns with regional regulations, KYC requirements, investor eligibility, and capital controls.</p> <p>Compliance is embedded directly into the protocol's deterministic logic and is enforced at every interaction\u2014from onboarding and token issuance to trading and lending.</p>"},{"location":"arda-core/compliance/#core-components","title":"Core Components","text":""},{"location":"arda-core/compliance/#1-kyc-aml-engine-attestation-registry","title":"1. KYC / AML Engine &amp; Attestation Registry","text":"<p>This component manages identity verification and credentials. It records KYC completion, accreditation status, sanctions screening results, and legal agreements. These attestations are used to dynamically determine user permissions and eligibility across the protocol.</p> <ul> <li>Supports tiered verification levels (e.g. KYC Tier 0\u20133).</li> <li>Includes continuous sanctions screening, risk scoring, and jurisdictional blacklists/whitelists.</li> <li>All attestations are tied to an <code>Entity</code> and <code>WalletGroup</code>.</li> </ul>"},{"location":"arda-core/compliance/#2-transfer-rules","title":"2. Transfer Rules","text":"<p>Transfer Rules define the dynamic logic that determines whether a token transfer is allowed between two parties. They are evaluated before any token movement.</p> Field Description <code>fromKycTier</code> Minimum tier required by sender <code>toKycTier</code> Minimum tier required by receiver <code>jurisdiction</code> Applicable region for the rule <code>tokenType</code> Token class this rule applies to (e.g., AssetToken, DebtToken) <code>restrictions</code> Any conditional logic or flags (e.g., accredited only, investor caps) <p>Example:</p> <pre><code>transfer_rule:\n  tokenType: AssetToken\n  fromKycTier: 2\n  toKycTier: 2\n  jurisdiction: US\n  restrictions:\n    - accredited_investor_required: true\n    - region_blacklist: [\"OFAC\", \"North Korea\"]\n</code></pre>"},{"location":"arda-core/compliance/#3-jurisdiction-profiles","title":"3. Jurisdiction Profiles","text":"<p>Jurisdiction Profiles encode regulatory policies and schemas for specific regions, allowing the protocol to adapt its behavior based on an asset's or user's location.</p> <p>Profiles include:</p> <ul> <li>Approved currencies</li> <li>Maximum LTVs for lending</li> <li>Permitted legal asset types</li> <li>Holding period constraints</li> <li>Local tax and reporting hooks</li> </ul> Region Enforcement Scope Examples UAE Property law, AML, Dirham controls US SEC Reg D/Reg S, investor accreditation EU GDPR, MiFID II, cross-border disclosure"},{"location":"arda-core/compliance/#4-audit-logs","title":"4. Audit Logs","text":"<p>The engine maintains an immutable, on-chain registry of all compliance-relevant actions, including onboarding events, token transfer approvals and denials, attestations, and revocations. For sensitive data, logs are anchored on-chain with secure off-chain storage in Arda Vault, supporting audit trails for regulators and institutional users.</p>"},{"location":"arda-core/compliance/#enforcement","title":"Enforcement","text":""},{"location":"arda-core/compliance/#invocation-points","title":"Invocation Points","text":"<p>Compliance checks are invoked at critical points in the transaction lifecycle:</p> <ul> <li>Token Transfer: Validates both sender and receiver against the applicable <code>TransferRule</code> and <code>JurisdictionProfile</code>.</li> <li>Module Interaction: Blocks access to protocol modules (e.g., creating a facility, joining a pool) if identity or jurisdiction restrictions are unmet.</li> <li>KYC Tier Sync: Reflects changes in a user's verification tier dynamically across all associated wallets and entities.</li> <li>Attestation Matching: Validates a user's on-chain proofs before enabling sensitive actions like investing or governance voting.</li> </ul>"},{"location":"arda-core/compliance/#enforcement-modes","title":"Enforcement Modes","text":"<p>The engine operates in multiple modes to provide flexible and robust enforcement:</p> <ul> <li>Preventative: Disallows non-compliant actions before execution (e.g., rejecting a transfer).</li> <li>Reactive: Flags suspicious behavior for review or requires additional approvals (e.g., for unusual transaction volumes).</li> <li>Adaptive: Dynamically adapts to regulatory updates or new token rules via governance or validator instructions.</li> </ul>"},{"location":"arda-core/compliance/#integration-points","title":"Integration Points","text":"<ul> <li>All token transfers must pass validation by a <code>TransferRule</code>.</li> <li>SPV creation and capital participation in facilities are constrained by <code>JurisdictionProfile</code>.</li> <li>Oracle updates and on-chain risk events (e.g., a breach of a collateral coverage ratio) can trigger compliance flags or actions.</li> <li>Governance can propose updates to <code>JurisdictionProfiles</code> or global rules via Arda Improvement Proposals (AIPs).</li> </ul>"},{"location":"arda-core/compliance/#use-cases","title":"Use Cases","text":"<ul> <li>Trading Gatekeeping: Ensuring only whitelisted jurisdictions can trade high-risk asset classes.</li> <li>Investor Qualification: Restricting offerings to accredited or professional investors based on their verified attestations.</li> <li>Cross-Border Controls: Blocking specific transfers or requiring additional documentation for international capital movement.</li> <li>Lifecycle Enforcement: Applying different rules at each stage of an asset's lifecycle (e.g., primary issuance vs. secondary trading).</li> <li>Real-time Hooks: Disallowing market participation if a user's required license or tax ID has expired.</li> </ul>"},{"location":"arda-core/compliance/#developer-notes","title":"Developer Notes","text":"<ul> <li>Validators run compliance checks in deterministic protocol logic, not at the application layer.</li> <li>The Arda SDK provides methods to simulate compliance outcomes for a given transaction before submission.</li> <li><code>EventLogs</code> can be queried by external regulators or auditors with permissioned access via Arda Vault.</li> </ul>"},{"location":"arda-core/identity/","title":"Identity","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"arda-core/identity/#arda-identity","title":"Arda Identity","text":"<p>The Arda Identity module provides the foundational structures for defining and enforcing participant roles in the Arda ecosystem. It models entities, wallets, KYC tiers, and attestations \u2014 enabling secure, compliant, and programmable identity enforcement across all protocol modules.</p> <p>Identity in Arda is persistent, privacy-aware, and supports role-based permissioning at both the wallet and entity level.</p>"},{"location":"arda-core/identity/#core-concepts","title":"Core Concepts","text":"Component Description <code>Entity</code> A legal person (individual or organization) represented by one or more wallets <code>WalletGroup</code> A collection of wallets associated with an Entity for custody, execution, or accounting <code>KycTier</code> Numeric level (0\u20133) reflecting user verification and access permissions <code>Attestation</code> On-chain signed statement verifying identity attributes or credentials <code>RoleBinding</code> Assignment of protocol-level capabilities (e.g., asset issuer, syndicate agent) to an Entity"},{"location":"arda-core/identity/#identity-lifecycle","title":"Identity Lifecycle","text":"<ol> <li>Initialization \u2014 A wallet or group of wallets registers or is linked to an Entity.</li> <li>Verification \u2014 One or more KYC providers issue attestations for that Entity or WalletGroup.</li> <li>Tier Assignment \u2014 KYC Tier is set based on aggregated attestations and jurisdictional logic.</li> <li>Role Configuration \u2014 Optional binding to a Role (e.g., Underwriter, Custodian, Asset Originator).</li> <li>Interaction \u2014 Entity uses its wallets to transact, access modules, or represent tokenized rights.</li> <li>Revocation / Re-attestation \u2014 Credentials may be revoked or re-issued over time as needed.</li> </ol>"},{"location":"arda-core/identity/#kyc-tier-permissions","title":"KYC Tier Permissions","text":"Tier Description Permissions 0 Anonymous or unverified View-only, no protocol access 1 Light KYC Limited trade, read access 2 Verified retail user Full protocol access, moderate size limits 3 Institutional or regulated entity Unlimited size, issuer and governance roles"},{"location":"arda-core/identity/#attestation-model","title":"Attestation Model","text":"<p>Attestations are signed by trusted verifiers and stored on-chain or in encrypted form (via Vault) with hashes anchored to identity profiles.</p>"},{"location":"arda-core/identity/#example-attestation","title":"Example Attestation","text":"<pre><code>{\n  \"entityId\": \"ENTITY-001\",\n  \"attestor\": \"KYCProvider-X\",\n  \"attributes\": {\n    \"country\": \"SG\",\n    \"accredited\": true,\n    \"entityType\": \"LLC\"\n  },\n  \"signature\": \"0xabc...\"\n}\n</code></pre> <p>Attestations may cover jurisdictional eligibility, investor status, or role qualifications.</p>"},{"location":"arda-core/identity/#use-cases","title":"Use Cases","text":"<ul> <li>Permissioned Pools: Restrict pool access to certain KYC tiers or jurisdictions.</li> <li>Cross-Module Sync: Identity tier reflected in Trading, Capital, and Compliance modules.</li> <li>Custom Roles: Assign capabilities to agents (e.g., Monitoring Agent, Risk Assessor).</li> <li>Revocation/Resync: Real-time revocation and refresh of user permissions via attestation updates.</li> </ul>"},{"location":"arda-core/naas/","title":"Network-as-a-Service","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"arda-core/naas/#arda-network-as-a-service-naas","title":"Arda Network-as-a-Service (NaaS)","text":"<p>Arda Network-as-a-Service (NaaS) is the deployment layer that enables sovereign regions to operate independent ArdaOS chains with full compliance alignment and infrastructure control. It supports both permissioned and semi-public deployments tailored to local performance, regulatory, and data residency requirements.</p> <p>Arda NaaS abstracts infrastructure complexity, offering pre-configured environments with pluggable compliance modules and SDK compatibility.</p>"},{"location":"arda-core/naas/#key-capabilities","title":"Key Capabilities","text":"Feature Description Sovereign Deployment Chains launched under control of local regulators or authorities Regional Compliance Profiles Automatically scoped TransferRules, identity tiers, and restrictions Managed Validator Setup Supports POA, ZK rollups, or hybrid validator architectures Hosted Infrastructure Optional managed deployments in AWS, Azure, GCP, or sovereign cloud Bridge Gateway Integration Out-of-the-box support for inter-region and inter-chain bridging"},{"location":"arda-core/naas/#deployment-modes","title":"Deployment Modes","text":"Mode Description Example Use Case <code>Public-ZK-Rollup</code> Open state, public verification, ZK-proof rollup on Celestia Singapore national land registry <code>POA-Private</code> Validator-governed chain with KYC-gated access UAE real estate compliance network <code>Hybrid</code> Partially public, part permissioned with attestation filters US Reg D private markets"},{"location":"arda-core/naas/#deployment-flow","title":"Deployment Flow","text":"<ol> <li>Region Onboarding \u2013 Define jurisdiction profile, entity types, validator criteria.</li> <li>Compliance Scope Setup \u2013 Load TransferRules, KYC tiers, tax and data rules.</li> <li>Validator Bootstrapping \u2013 Launch with 3\u20135 initial trusted validators.</li> <li>Chain Initialization \u2013 Deploy base ArdaOS chain with Arda Core modules.</li> <li>Bridge Configuration \u2013 Link to Arda Core and other ArdaOS regions via SDK.</li> </ol>"},{"location":"arda-core/naas/#interop-global-coordination","title":"Interop &amp; Global Coordination","text":"<p>Arda NaaS chains are sovereign but interoperable via:</p> <ul> <li>Bridge Contracts: Secure message-passing across ArdaOS instances.</li> <li>Global SDK Registry: Tracks region endpoints, validator anchors, compliance schemas.</li> <li>Shared Asset Identifiers: Global registry maps asset tokens across regions.</li> </ul>"},{"location":"arda-core/naas/#use-cases","title":"Use Cases","text":"<ul> <li>GovTech Infrastructure: Digitized land, licensing, or public asset systems.</li> <li>Private Markets: Regionally bounded capital formation or tokenized finance platforms.</li> <li>Sandbox Environments: Custom testnets for partners or regulators to simulate jurisdictional logic.</li> </ul>"},{"location":"arda-core/onboarding/","title":"Onboarding","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"arda-core/onboarding/#arda-onboarding","title":"Arda Onboarding","text":"<p>Arda Onboarding is the module responsible for registering new users, entities, and real-world assets into the Arda ecosystem. It ensures that all participants meet jurisdictional compliance standards and that off-chain real estate assets are accurately and verifiably linked to their on-chain representations.</p> <p>This module supports integration with land registries, legal verification providers, and identity attestations, offering both API-based and manual fallback workflows for onboarding in digitized and non-digitized jurisdictions.</p>"},{"location":"arda-core/onboarding/#core-functions","title":"Core Functions","text":"<ul> <li>User Onboarding: Guides individuals and institutions through KYC/AML checks, assigning identity and wallet permissions.</li> <li>Entity Creation: Registers legal entities (SPVs, trusts, funds) and binds wallet groups and roles to them.</li> <li>Asset Registration: Links tokenized properties or rights to verified ownership documents and metadata.</li> <li>Jurisdiction-Specific Flows: Adapts onboarding workflows based on local regulatory requirements.</li> <li>Fallback Verification: Enables manual onboarding through notaries, certified providers, or legal agents.</li> </ul>"},{"location":"arda-core/onboarding/#workflow-overview","title":"Workflow Overview","text":"<pre><code>flowchart TD\n    A[User] --&gt; B[Identity Submission]\n    B --&gt; C[KYC Engine]\n    C --&gt; D[Entity Review]\n    D --&gt; E[Asset Registration]\n    E --&gt; F[On-chain Confirmation]\n</code></pre>"},{"location":"arda-core/onboarding/#integration-points","title":"Integration Points","text":"<ul> <li>Land Registry APIs: Automated property record validation (where available).</li> <li>Legal Notary Gateways: Certified document and signature verification.</li> <li>Compliance Engine: Syncs KYC tier and jurisdictional logic upon onboarding.</li> <li>Vault: Secure storage of documents and audit trails linked to onboarding events.</li> </ul>"},{"location":"arda-core/onboarding/#roles-involved","title":"Roles Involved","text":"Role Description Applicant User or organization initiating onboarding Verifier Compliance service validating identity or asset Notary Trusted manual fallback verifier Registrar Smart contract issuing asset token and metadata Auditor Monitors and logs onboarding events for compliance review"},{"location":"arda-core/onboarding/#compliance-considerations","title":"Compliance Considerations","text":"<ul> <li>Dynamic Jurisdiction Flow: Forms, checks, and disclosures vary per region.</li> <li>Attestation Registry: All verifications are immutably logged for later proof.</li> <li>Revocation Support: Identity or asset claims can be revoked and re-onboarded if disputed or stale.</li> </ul>"},{"location":"arda-core/taxonomy/","title":"Taxonomy","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"arda-core/taxonomy/#arda-taxonomy","title":"Arda Taxonomy","text":"<p>The Arda Taxonomy module defines a universal classification framework for assets, rights, entities, and legal structures across the entire Arda ecosystem. It serves as the semantic backbone of Arda Core, ensuring interoperability, consistent compliance enforcement, and intelligent behavior across sovereign regions and capital products.</p> <p>Every on-chain asset or transaction references taxonomy categories to define its legal meaning, economic function, and permissible use cases. The taxonomy is extensible via Arda Improvement Proposals (AIPs) and evolves through governance.</p>"},{"location":"arda-core/taxonomy/#structure","title":"Structure","text":"<p>The taxonomy is structured hierarchically with top-level categories, subtypes, and attributes. Examples include:</p>"},{"location":"arda-core/taxonomy/#asset-classes","title":"Asset Classes","text":"<ul> <li>Real Estate<ul> <li>Residential / Commercial / Industrial / Hospitality</li> </ul> </li> <li>Debt Instruments<ul> <li>Mortgage / Bridge Loan / Convertible Note</li> </ul> </li> <li>Equity Instruments<ul> <li>LP Interests / SPV Shares / REIT Units</li> </ul> </li> <li>Derivatives<ul> <li>Perpetual Swap / Interest Rate Option</li> </ul> </li> </ul>"},{"location":"arda-core/taxonomy/#rights-and-roles","title":"Rights and Roles","text":"<ul> <li>Use Rights: Right of abode, leasing rights, timeshare access</li> <li>Economic Rights: Yield entitlement, profit sharing, rent collection</li> <li>Governance Rights: Voting weight, proposal rights</li> <li>Service Roles: Custodian, Auditor, Manager, Verifier</li> </ul>"},{"location":"arda-core/taxonomy/#entities","title":"Entities","text":"<ul> <li>Natural Person (individual investors or residents)</li> <li>Legal Entity (SPVs, REITs, custodians, etc.)</li> <li>Regulator (state or national compliance authority)</li> <li>Agent (e.g. Connect Agent, Monitoring Agent)</li> </ul>"},{"location":"arda-core/taxonomy/#metadata-schema","title":"Metadata Schema","text":"<p>Each taxonomy object includes:</p> Field Type Description <code>id</code> String Unique taxonomy identifier <code>name</code> String Human-readable label <code>type</code> Enum Asset / Right / Entity / Role <code>jurisdiction</code> String Optional scope of applicability <code>attributes</code> Map Custom traits (e.g. LTV caps, expiration)"},{"location":"arda-core/taxonomy/#governance-aip-process","title":"Governance &amp; AIP Process","text":"<p>Taxonomy changes follow the Arda Improvement Proposal (AIP) governance flow:</p> <ol> <li>Proposal: Anyone may submit a draft AIP defining new taxonomy entries or changes.</li> <li>Review: Core team and compliance council review for consistency and regulatory soundness.</li> <li>Vote: AIP is voted on by eligible tokenholders or appointed stewards.</li> <li>Activation: Accepted entries are published to the on-chain taxonomy registry.</li> </ol>"},{"location":"arda-core/taxonomy/#usage-across-arda","title":"Usage Across Arda","text":"<ul> <li>Token Factory: Uses taxonomy entries to define token rights and restrictions.</li> <li>Onboarding: Maps real-world property or documents into a recognized category.</li> <li>Compliance Engine: Applies different rules depending on taxonomy-derived type.</li> <li>Analytics: Risk analytics and benchmarks segment portfolios by taxonomy labels.</li> </ul>"},{"location":"arda-core/token-factory/","title":"Token Factory","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"arda-core/token-factory/#arda-token-factory","title":"Arda Token Factory","text":"<p>The Arda Token Factory is responsible for issuing all tokenized representations of real-world assets and financial rights within the Arda ecosystem. It encodes jurisdiction-specific compliance logic directly into token definitions and supports modular issuance workflows for AssetTokens, DebtTokens, TrancheTokens, and YieldTokens.</p> <p>This module ensures that every token on Arda conforms to a shared taxonomy, enforces permissions on transfer and use, and is traceable throughout its lifecycle.</p>"},{"location":"arda-core/token-factory/#supported-token-types","title":"Supported Token Types","text":"Token Type Purpose Key Features <code>AssetToken</code> Real estate ownership/fractional rights KYC-gated, regional transfer logic, royalty support <code>DebtToken</code> Borrower obligations, loan representations Interest accrual, repay/burn lifecycle, callable <code>YieldToken</code> Participation in revenue/yield rights Streaming payments, claim periods, waterfalls <code>TrancheToken</code> Securitized risk layer in pooled capital Fixed/variable tranche logic, maturity flags"},{"location":"arda-core/token-factory/#lifecycle-stages","title":"Lifecycle Stages","text":"<p>Each token is managed across multiple states via embedded hooks and compliance enforcement:</p> <ol> <li>Creation \u2013 Issuer mints token with metadata, restrictions, and jurisdiction config.</li> <li>Offering \u2013 Token is made available for purchase or syndication (with gating).</li> <li>Transfer \u2013 On secondary markets or P2P, checked via <code>TransferRule</code>.</li> <li>Maturity \u2013 Token reaches defined endpoint (e.g., loan repaid, asset sold).</li> <li>Settlement \u2013 Assets and/or proceeds distributed via Arda Clear.</li> <li>Burn \u2013 Token optionally destroyed to finalize lifecycle.</li> </ol>"},{"location":"arda-core/token-factory/#compliance-integration","title":"Compliance Integration","text":"<p>All tokens issued by the Token Factory automatically link to:</p> <ul> <li>TransferRules: Jurisdictional + KYC enforcement at transfer level.</li> <li>AttestationRegistry: Identity-based rights assignment.</li> <li>Vault: Metadata and legal proofs anchoring token claims.</li> <li>JurisdictionProfiles: Dynamic interpretation of legal scopes.</li> </ul>"},{"location":"arda-core/token-factory/#metadata-schema","title":"Metadata Schema","text":"<pre><code>{\n  \"tokenId\": \"0x...\",\n  \"type\": \"AssetToken\",\n  \"jurisdiction\": \"UAE\",\n  \"linkedEntity\": \"SPV-123\",\n  \"rights\": [\"ownership\", \"rental_income\"],\n  \"restrictions\": {\n    \"kycTier\": 2,\n    \"regionWhitelist\": [\"UAE\", \"EU\"]\n  },\n  \"lifecycleHooks\": {\n    \"onTransfer\": \"checkTransferRules\",\n    \"onMaturity\": \"notifySettlement\"\n  }\n}\n</code></pre>"},{"location":"arda-core/token-factory/#token-templates","title":"Token Templates","text":"<p>Issuers may use pre-approved templates for rapid issuance, e.g.:</p> <ul> <li>Residential Freehold (UAE)</li> <li>Fractional REIT Unit (US Reg D)</li> <li>Construction Bridge Loan (Multi-tranche)</li> <li>Rental Yield Participation (Tokenized cashflow rights)</li> </ul> <p>These templates enforce type-specific behavior and ease validation for secondary markets and custodians.</p>"},{"location":"arda-core/vault/","title":"Vault","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"arda-core/vault/#arda-vault","title":"Arda Vault","text":"<p>Arda Vault is the privacy-preserving data layer of the Arda protocol. It enables secure storage and controlled access to sensitive real estate, financial, and identity-related information. The Vault combines on-chain anchoring with off-chain encrypted storage, supporting real-time compliance and due diligence while maintaining strict privacy guarantees.</p> <p>It is a critical component of Arda Core, enabling institutional-grade security, selective disclosure, and cryptographic verifiability for all asset and entity records.</p>"},{"location":"arda-core/vault/#key-features","title":"Key Features","text":"<ul> <li>Fully Homomorphic Encryption (FHE): Enables computation on encrypted data (e.g., verifying LTV or ownership thresholds).</li> <li>Multi-Party Computation (MPC): Allows secure query execution without exposing raw data.</li> <li>Hybrid Storage Model: Off-chain encrypted documents with on-chain integrity proofs.</li> <li>Permissioned Access: Granular access control for verifiers, inspectors, investors, and regulators.</li> <li>Rich Media Support: Supports structured documents, images, 3D plans, videos, and inspection metadata.</li> </ul>"},{"location":"arda-core/vault/#supported-data-types","title":"Supported Data Types","text":"Category Examples Title &amp; Ownership Deeds, land registry entries, SPV documents Financial Appraisals, rent rolls, audit reports, drawdown schedules Legal Trust documents, regulatory filings, tax forms Operational Maintenance logs, inspection footage, building plans Identity KYC data, attestation proofs, account-level metadata"},{"location":"arda-core/vault/#access-query-model","title":"Access &amp; Query Model","text":"<p>Arda Vault does not expose raw data by default. All access is governed through permissioned keys and audit trails:</p> <ul> <li>Verifiable Computation: Queries can be answered with cryptographic proofs (e.g. \"is owner verified\" or \"does valuation exceed threshold\") without revealing sensitive inputs.</li> <li>Dynamic Access Controls: Permissions can be granted/revoked at runtime based on user roles or compliance context.</li> <li>Audit Logs: Every access event is immutably recorded on-chain for regulatory traceability.</li> </ul>"},{"location":"arda-core/vault/#architecture","title":"Architecture","text":"<pre><code>flowchart TD\n    A[User / App] --&gt; B[Vault Gateway]\n    B --&gt; C[Off-chain Encrypted Storage]\n    B --&gt; D[On-chain Access Token + Proof]\n    C --&gt; E[FHE/MPC Engine]\n    E --&gt; F[Query Result]\n    F --&gt; A\n</code></pre>"},{"location":"arda-core/vault/#compliance-use-cases","title":"Compliance Use Cases","text":"<ul> <li>Proof of Asset: FHE-based attestation that tokenized assets reflect valid off-chain ownership.</li> <li>Cross-border Compliance: Enables selective disclosure for regulators in different jurisdictions.</li> <li>Regulated Identity Workflows: Used by KYC/AML engines to securely access identity proofs.</li> </ul>"},{"location":"arda-core/wallet/","title":"Wallet","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"arda-core/wallet/#arda-wallet","title":"Arda Wallet","text":"<p>The Arda Wallet module governs user and institutional access to tokenized real estate and capital markets infrastructure. It enforces compliance policies through KYC tiers, permissions, and custody configurations, supporting both Web3-native users and regulated financial institutions.</p> <p>Arda Wallet is designed for flexibility and security, enabling non-custodial key management, institutional custody integration, and real-time enforcement of access controls across jurisdictions.</p>"},{"location":"arda-core/wallet/#key-features","title":"Key Features","text":"<ul> <li>KYC Tier Enforcement: Every wallet is assigned a KYC Tier, determining its permissions and transfer eligibility.</li> <li>Wallet Groups: Multiple wallets can be grouped under a single entity to represent institutional portfolios or legal entities.</li> <li>Custody-Aware Design: Supports integration with third-party custodians, multi-sig wallets, or self-custody configurations.</li> <li>Compliance-Embedded: Wallet actions are gated by jurisdictional rules defined in the Compliance Engine.</li> <li>Auditability: All transfers and permissions are logged on-chain for traceability.</li> </ul>"},{"location":"arda-core/wallet/#wallet-types","title":"Wallet Types","text":"Type Description Use Case <code>SelfCustody</code> Non-custodial, managed by the user Retail investors, developers <code>InstitutionalCustody</code> Managed by an approved custodian Funds, REITs, family offices <code>WalletGroup</code> Collection of wallets tied to one legal Entity Multi-account firms <code>AgentWallet</code> Designated wallets with elevated execution roles Connect/Risk/Monitoring agents"},{"location":"arda-core/wallet/#kyc-tiers","title":"KYC Tiers","text":"Tier Capabilities Intended Users Tier 0 View-only, no transfers Anonymous browsers Tier 1 Basic interactions, limited volume Low-risk jurisdictions Tier 2 Full asset access, most protocols Verified retail users Tier 3 Institutional-grade, high limits Funds, banks, corporates <p>KYC tiers are enforced via <code>TransferRule</code> and <code>JurisdictionProfile</code> hooks during every asset transfer or contract interaction.</p>"},{"location":"arda-core/wallet/#wallet-lifecycle","title":"Wallet Lifecycle","text":"<ol> <li>Creation \u2014 User initializes or links a wallet.</li> <li>KYC Assignment \u2014 Identity attestation assigns tier level.</li> <li>Binding \u2014 Wallets can be grouped or associated with an Entity.</li> <li>Permission Sync \u2014 Wallet permissions reflect latest compliance rules.</li> <li>Activity \u2014 Users interact with the Arda platform via permitted functions.</li> <li>Audit &amp; Review \u2014 All actions are logged for compliance oversight.</li> </ol>"},{"location":"arda-core/wallet/#compliance-integrations","title":"Compliance Integrations","text":"<ul> <li>TransferRules: Wallet transfer requests are checked against jurisdictional rules.</li> <li>JurisdictionProfiles: Limits wallet activity based on geographic regulatory mappings.</li> <li>AuditLogs: Chain-level record of every wallet action and permission update.</li> </ul>"},{"location":"ardaos/ardaos/","title":"Overview","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"ardaos/ardaos/#ardaos","title":"ArdaOS","text":"<p>ArdaOS is the sovereign execution layer for individual jurisdictions within the Arda ecosystem. It enables each region\u2014such as the UAE, United States, or Singapore\u2014to run a dedicated rollup with its own compliance, settlement, and performance rules, while still conforming to the global Arda Core standard.</p> <p>Each ArdaOS instance is a zk-augmented rollup (or optionally a POA appchain) designed to enforce jurisdiction-specific regulatory constraints, enable low-latency execution, and interoperate with the global coordination layer via the Arda SDK.</p> <p>ArdaOS is the regional execution environment layer within the Arda architecture. Each ArdaOS instance operates as a sovereign, compliant, high-performance blockchain tailored to the needs of a specific jurisdiction. These chains integrate with Arda Core to ensure shared semantics, compliance rules, and interoperability.</p> <p>The goal of ArdaOS is for individual regions to be able to launch a standardized chain so that independent regions can be easily interoperable. Using technologies like namespaced Merkle Trees to allow for the optionality of easily interacting and being discoverable on a DA network like Celestia.</p>"},{"location":"ardaos/ardaos/#key-characteristics","title":"Key Characteristics","text":"<ul> <li>Sovereignty: Local regulators or authorities govern validator sets and upgrade policies.</li> <li>Compliance-first Execution: Integrates real-time enforcement of KYC, AML, and asset-transfer restrictions at the protocol level.</li> <li>Rollup-enabled: Uses ZK Rollups, POA chains, or hybrid architectures based on local deployment requirements.</li> <li>Bridge Compatibility: Works with Celestia IPC, Hyperlane, and native light clients for cross-chain operations.</li> <li>Upgradeable Runtime: Modular SDK enables safe evolution of regional logic over time.</li> <li>Sovereign by Default: Each region controls validators, compliance schema, and data residency.</li> <li>Vertically Integrated: Includes execution logic, compliance checks, treasury flows, and event triggers natively.</li> <li>Coordination-Enabled: Synchronizes with Arda Core for cross-region functionality and shared identity.</li> </ul>"},{"location":"ardaos/ardaos/#poa-rollup-architecture","title":"POA / Rollup Architecture","text":"<ul> <li>Supported as sovereign Proof-of-Authority chains or zk-enabled rollups.</li> <li>Optimized for &lt;100ms latency and regional scalability.</li> </ul>"},{"location":"ardaos/ardaos/#localized-compliance-layer","title":"Localized Compliance Layer","text":"<ul> <li>KYC/AML, jurisdiction rules, investor limits, and transaction gating enforced on-chain.</li> <li>Built on the same primitives as Arda Core but scoped to local legal frameworks.</li> </ul>"},{"location":"ardaos/ardaos/#validator-coordination","title":"Validator Coordination","text":"<ul> <li>3\u20137 regionally approved validators per chain.</li> <li>Includes notaries, registrars, public agencies, or approved financial institutions.</li> </ul>"},{"location":"ardaos/ardaos/#native-asset-support","title":"Native Asset Support","text":"<ul> <li>Region-specific MoneyTokens, AssetTokens, DebtTokens, and YieldTokens.</li> <li>Customizable bridge wrappers and token templates.</li> </ul>"},{"location":"ardaos/ardaos/#shared-security-compliance","title":"Shared Security &amp; Compliance","text":"<ul> <li>Inherit global compliance rules and validator security from Arda Core.</li> </ul>"},{"location":"ardaos/ardaos/#low-cost-high-throughput","title":"Low-Cost, High-Throughput","text":"<ul> <li>Optimized for enterprise-grade workloads without the high fees of public mainnets.</li> </ul>"},{"location":"ardaos/ardaos/#components","title":"Components","text":"<ul> <li>Execution Engine: Region-specific smart contract or native logic for assets, tokens, and workflows.</li> <li>Validator Set: Typically 3\u20135 approved validators per region, often anchored in government or trusted institutions.</li> <li>Compliance Hooks: Tightly integrated with Arda Core's TransferRule, JurisdictionProfile, and KYC Tier enforcement modules.</li> <li>Data Availability (Optional): Built-in support for Celestia DA layer or local data anchoring strategies.</li> <li>Bridge Gateway: Manages cross-region or cross-chain transfers using verifiable proofs or consensus snapshots.</li> </ul>"},{"location":"ardaos/ardaos/#cross-chain-coordination","title":"Cross-Chain Coordination","text":"<ul> <li>Cross-region transactions routed through Arda Clear.</li> <li>ArdaOS instances interact via:<ul> <li>Message relays (ZK, TEE, multisig)</li> <li>Validator signatures</li> <li>State snapshot proofs</li> </ul> </li> </ul>"},{"location":"ardaos/ardaos/#sdk-interface","title":"SDK Interface","text":"<p>Each ArdaOS deployment includes a reference SDK interface that:</p> <ul> <li>Implements all Arda Core modules</li> <li>Exposes cross-chain callable methods (<code>xcall</code>)</li> <li>Maps global asset IDs to local chain representations</li> <li>Routes compliance requests to Arda Core's attestation layer</li> </ul>"},{"location":"ardaos/modules/","title":"Modules","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"ardaos/modules/#protocol-modules","title":"Protocol Modules","text":"<p>Protocol modules in Arda are reusable, self-contained logic units that implement the behavior of tokens, pools, agents, settlements, or compliance enforcement. Each module can be deployed across ArdaOS regions, imported by SDKs, and extended by agents or DAOs to fit local requirements.</p> <p>Modules encapsulate state machines, lifecycle hooks, and external integrations to drive Arda's programmable infrastructure.</p>"},{"location":"ardaos/modules/#key-module-types","title":"Key Module Types","text":"Module Purpose Token Module Defines lifecycle and permissions for AssetToken, DebtToken, etc. Pool Module Manages capital commitment, risk filters, tranching, and redemption Compliance Module Enforces TransferRules, attestation gates, and audit logs Agent Module Encodes role permissions, agent activity, slashing logic Treasury Module Handles sweep, fee routing, float distribution Governance Module Proposals, voting, role binding, approval logic"},{"location":"ardaos/modules/#module-schema","title":"Module Schema","text":"<pre><code>{\n  \"moduleId\": \"MOD-019\",\n  \"type\": \"Token\",\n  \"region\": \"UAE\",\n  \"version\": \"1.1\",\n  \"status\": \"active\",\n  \"integrations\": [\"Vault\", \"Clear\", \"Compliance\"]\n}\n</code></pre>"},{"location":"ardaos/modules/#lifecycle-hooks","title":"Lifecycle Hooks","text":"<p>Each module supports standardized lifecycle stages:</p> <ul> <li><code>onCreate</code></li> <li><code>onActivate</code></li> <li><code>onTransfer</code></li> <li><code>onMature</code></li> <li><code>onSettle</code></li> <li><code>onRevoke</code></li> </ul> <p>These hooks trigger internal logic and external coordination (e.g. with Arda Clear or Vault).</p>"},{"location":"ardaos/modules/#composability-deployment","title":"Composability &amp; Deployment","text":"<ul> <li>Modules are imported via SDK and initialized on-chain</li> <li>Deployment can be scoped to global (Arda Core) or regional (ArdaOS)</li> <li>DAO or council-approved proposals may update module logic</li> <li>Modules are versioned and audit-logged on update</li> </ul>"},{"location":"ardaos/modules/#integration-points","title":"Integration Points","text":"<ul> <li>Token Factory: Loads and applies token modules</li> <li>Syndication Engine: Applies pool module logic for risk and tranching</li> <li>Clear: Executes lifecycle hooks and disbursement logic</li> <li>Interop: Verifies module compatibility across chains</li> </ul>"},{"location":"ardaos/refund-protocol/","title":"Arda: Refund Protocol Integration Architecture","text":""},{"location":"ardaos/refund-protocol/#objective","title":"Objective","text":"<p>Integrate a non-custodial, programmable refund mechanism for stablecoin payments within the Arda ecosystem to increase transaction trust, support high-value cross-border deals, and enable dispute resolution without centralization.</p>"},{"location":"ardaos/refund-protocol/#core-design-principles","title":"Core Design Principles","text":"<ul> <li>Non-Custodial by Default: All funds remain under protocol-controlled state with deterministic execution logic.</li> <li>Composable Arbitration: Dispute resolution integrates third-party or platform-curated arbiters with no unilateral power over funds.</li> <li>Trust-Minimized UX: Designed for retail and institutional users to reduce counterparty risk and increase real estate transaction confidence.</li> </ul>"},{"location":"ardaos/refund-protocol/#architecture-components","title":"Architecture Components","text":""},{"location":"ardaos/refund-protocol/#1-protocol-embedded-escrow-module","title":"1. Protocol-Embedded Escrow Module","text":"<ul> <li>Holds stablecoin (e.g., USDC) in protocol-controlled escrow state until:<ul> <li>Timelock expires</li> <li>Both parties sign a release</li> <li>Arbiter triggers a refund</li> </ul> </li> <li>Emits events for off-chain indexing (e.g., \"RefundInitiated\", \"FundsReleased\")</li> </ul>"},{"location":"ardaos/refund-protocol/#2-arbiter-registry-module","title":"2. Arbiter Registry Module","text":"<ul> <li>Maintains a whitelisted registry of arbiters</li> <li>Encodes rules:<ul> <li>Max decision timeframe</li> <li>Resolution thresholds</li> <li>Auditable dispute logs</li> </ul> </li> </ul>"},{"location":"ardaos/refund-protocol/#3-refund-resolution-engine-off-chain-service","title":"3. Refund Resolution Engine (off-chain service)","text":"<ul> <li>Runs workflows:<ul> <li>Off-chain consent handling</li> <li>Dispute evidence submission</li> <li>Notifies arbiter + tracks timeouts</li> </ul> </li> <li>May leverage zk-verified attestations for decision logs</li> </ul>"},{"location":"ardaos/refund-protocol/#4-wallet-abstraction-layer","title":"4. Wallet Abstraction Layer","text":"<ul> <li>Supports EIP-1271 for contract/custodial wallets</li> <li>Optional signature relaying for Web2-style UX</li> </ul>"},{"location":"ardaos/refund-protocol/#5-yield-vault-adapter-optional","title":"5. Yield Vault Adapter (optional)","text":"<ul> <li>Temporarily deposits escrowed stablecoins into yield-bearing protocols</li> <li>Funds remain withdrawable on resolution</li> <li>Shared yield model (Arda, Arbiter, or end-user split)</li> </ul>"},{"location":"ardaos/refund-protocol/#refund-flow-overview","title":"Refund Flow Overview","text":"<pre><code>sequenceDiagram\n    participant Buyer\n    participant Seller\n    participant EscrowModule\n    participant Arbiter\n    participant RefundEngine\n\n    Buyer-&gt;&gt;EscrowModule: Deposit USDC\n    EscrowModule-&gt;&gt;Seller: Notify of pending funds\n    Seller-&gt;&gt;Buyer: Deliver service/asset\n    Buyer-&gt;&gt;EscrowModule: No refund requested (timeout expires)\n    EscrowModule--&gt;&gt;Seller: Release funds\n    Note over RefundEngine,EscrowModule: OR... Buyer disputes before timeout\n    Buyer-&gt;&gt;RefundEngine: Initiate refund request\n    RefundEngine-&gt;&gt;Arbiter: Present dispute\n    Arbiter-&gt;&gt;EscrowModule: Trigger refund decision\n    EscrowModule--&gt;&gt;Buyer: Refund sent\n</code></pre>"},{"location":"ardaos/refund-protocol/#compliance-auditability","title":"Compliance &amp; Auditability","text":"<ul> <li>Immutable logs: All actions (submit, respond, resolve) emitted by the protocol</li> <li>Configurable jurisdictional rules: Protocol enforces region-specific arbitration laws if needed</li> <li>Audit trail: zk-attestation or IPFS-linked evidence optional</li> </ul>"},{"location":"ardaos/refund-protocol/#developer-sdk-hooks","title":"Developer SDK Hooks","text":"<ul> <li><code>createEscrow(entityId, amount, arbiterId)</code></li> <li><code>initiateRefund(escrowId, evidenceRef)</code></li> <li><code>releaseFunds(escrowId)</code></li> <li><code>resolveDispute(escrowId, resolution)</code></li> </ul>"},{"location":"ardaos/refund-protocol/#monetization-hooks","title":"Monetization Hooks","text":"<ul> <li>Arbitration fees (flat or percent-based)</li> <li>Early withdrawal premium</li> <li>Yield capture on locked funds</li> <li>API subscription for RefundEngine access</li> </ul>"},{"location":"ardaos/state-reconciliation/","title":"Arda State Reconciliation &amp; Snapshot Architecture","text":"<p>Date: 2025-06-25 Prepared for: Arda Protocol Engineering Team Purpose: Design specification for implementing deterministic, auditable, and efficient state reconciliation in Arda</p>"},{"location":"ardaos/state-reconciliation/#context-motivation","title":"\ud83d\udccc Context &amp; Motivation","text":"<p>Arda aims to serve as the global operating system for programmable private capital. As part of this mission, it must provide a robust, transparent, and scalable mechanism to maintain the integrity of on-chain financial state and ensure efficient compliance, analytics, and settlement workflows.</p> <p>One challenge in modern blockchain architectures is the overhead required to reconstruct full state or verify past balances through full transaction replay. Arda is exploring a native reconciliation architecture that allows for:</p> <ul> <li>Periodic state snapshotting</li> <li>Audit-ready reporting</li> <li>Reduced memory and query load</li> <li>Programmatic compliance monitoring</li> <li>AI and agentic data access</li> </ul>"},{"location":"ardaos/state-reconciliation/#functional-objectives","title":"\ud83e\udde9 Functional Objectives","text":"<ul> <li>Persist deterministic state snapshots of Arda\u2019s financial primitives (wallets, entities, token balances, facilities)</li> <li>Enable fast, auditable queries over historical state</li> <li>Allow structured tracking of state changes and compliance-relevant transitions</li> <li>Support jurisdictional scoping and auditability</li> </ul>"},{"location":"ardaos/state-reconciliation/#architecture-components","title":"\ud83d\udd27 Architecture Components","text":""},{"location":"ardaos/state-reconciliation/#1-state-snapshot-module","title":"1. State Snapshot Module","text":"<ul> <li>Periodically traverses the full key-value state</li> <li>Serializes the canonical state of entities, wallets, and contracts</li> <li>Persists snapshots in versioned, on-disk or IPFS-compatible formats</li> <li>Commits the Merkle root of each snapshot on-chain:</li> </ul> <pre><code>{\n  \"event\": \"StateSnapshotCommitted\",\n  \"root_hash\": \"abc123...\",\n  \"block_height\": 345600,\n  \"timestamp\": \"2025-06-25T00:00:00Z\"\n}\n</code></pre>"},{"location":"ardaos/state-reconciliation/#2-snapshot-query-interface","title":"2. Snapshot Query Interface","text":"<ul> <li>Supports time-based and block-based queries:<ul> <li>\"What was wallet 0xABC\u2019s balance on 2025-06-01?\"</li> </ul> </li> <li>Integrates with <code>FacilityRegistry</code>, <code>WalletGroup</code>, and <code>AuditLog</code> modules</li> </ul>"},{"location":"ardaos/state-reconciliation/#3-structured-append-only-logs","title":"3. Structured Append-Only Logs","text":"<ul> <li>All state transitions emit machine-readable events</li> <li>Indexed by <code>EntityID</code>, <code>JurisdictionID</code>, <code>TokenID</code></li> <li>Enables forensic reconstruction and regulatory inspection</li> </ul>"},{"location":"ardaos/state-reconciliation/#4-event-triggered-reconciliation","title":"4. Event-Triggered Reconciliation","text":"<ul> <li>Triggers include:<ul> <li>Threshold crossings</li> <li>Facility status transitions</li> <li>Manual snapshot request</li> </ul> </li> <li>Can reconcile per-region, per-token, or globally</li> </ul>"},{"location":"ardaos/state-reconciliation/#5-compliance-aware-design","title":"5. Compliance-Aware Design","text":"<ul> <li>Snapshots are scoped per <code>JurisdictionProfile</code></li> <li>Stored in region-specific data stores for compliance (e.g., UAE-local S3)</li> <li>Supports regulator attestations and proofs of reconciliation</li> </ul>"},{"location":"ardaos/state-reconciliation/#benefits-for-arda","title":"\ud83d\udca1 Benefits for Arda","text":"Category Benefit Compliance Fast auditability and regulator-facing proofs Performance Reduced need for in-memory state retention Automation Agents can rely on consistent, point-in-time data Security Immutable proof of past system states Analytics Enables structured, AI-friendly state feeds"},{"location":"ardaos/state-reconciliation/#integration-targets","title":"\ud83d\udee0\ufe0f Integration Targets","text":"<ul> <li><code>Vault</code>, <code>TokenFactory</code>, <code>Drawdown</code>, <code>WalletGroup</code></li> <li><code>AuditLog</code>, <code>EventHooks</code>, <code>SettlementQueue</code>, <code>JurisdictionProfile</code></li> </ul>"},{"location":"ardaos/state-reconciliation/#developer-interface-sdk-hooks","title":"\ud83d\udce6 Developer Interface (SDK Hooks)","text":"<pre><code>commitSnapshot(entityGroupId?: string): Promise&lt;SnapshotHash&gt;\ngetSnapshotAt(entityId: string, date: string): Promise&lt;EntityState&gt;\nlistSnapshots(entityId: string): Promise&lt;SnapshotMeta[]&gt;\n</code></pre>"},{"location":"ardaos/state-reconciliation/#next-steps","title":"\ud83d\ude80 Next Steps","text":"<ol> <li>Finalize <code>ReconciledStateModule</code> schema</li> <li>Implement snapshot commit/verify logic</li> <li>Design SDK + UI integrations for query and inspection</li> <li>Configure scheduled and event-based snapshot triggers</li> <li>Pilot with select jurisdictions (e.g., UAE)</li> </ol>"},{"location":"ardaos/zktees/","title":"ZK TEEs","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"ardaos/zktees/#zk-and-tee-primitives","title":"ZK and TEE Primitives","text":"<p>Arda supports zero-knowledge (ZK) and trusted execution environment (TEE) primitives for enforcing privacy, integrity, and selective disclosure across its protocol stack. These cryptographic mechanisms enable users and agents to verify data or behavior without revealing the underlying values \u2014 essential for compliance, privacy law alignment, and regulated institutional usage.</p> <p>ZK/TEE primitives are used in identity, vault, risk evaluation, deal execution, and settlement logic.</p>"},{"location":"ardaos/zktees/#key-mechanisms","title":"Key Mechanisms","text":"Type Description ZK Proof Proves something is true without revealing the input (e.g. \"user is accredited\") MPC Splits computation across multiple parties without any one party seeing all inputs FHE Allows arithmetic directly on encrypted data (e.g. for interest checks or audits) TEE Executes sensitive logic inside a hardware-secured enclave with remote attestation"},{"location":"ardaos/zktees/#example-accredited-investor-check-zk","title":"Example: Accredited Investor Check (ZK)","text":"<pre><code>{\n  \"proofId\": \"ZK-INV-2201\",\n  \"claim\": \"isAccreditedInvestor\",\n  \"attestor\": \"KYCProvider-X\",\n  \"valid\": true,\n  \"proofHash\": \"0xabc...\",\n  \"linkedWallet\": \"0x123...\"\n}\n</code></pre>"},{"location":"ardaos/zktees/#use-cases","title":"Use Cases","text":"<ul> <li>KYC Tier validation without leaking raw identity data</li> <li>Risk scoring of loan without disclosing underlying metrics</li> <li>Token sale eligibility checks at execution time</li> <li>Secure custody bridge: TEE-based execution in cross-chain swaps</li> <li>Institutional analytics and on-chain data masking for audit</li> </ul>"},{"location":"ardaos/zktees/#integration-points","title":"Integration Points","text":"<ul> <li>Vault: FHE/MPC used for storing and querying sensitive documents</li> <li>Compliance Engine: Accepts ZK attestations for TransferRule decisions</li> <li>Clear: Uses proof-of-compliance before asset or fund movement</li> <li>Interop: Bridges may rely on ZK or TEE attestations for cross-chain validation</li> <li>Agent Layer: Monitoring Agents can issue ZK alerts for defaults or fraud triggers</li> </ul>"},{"location":"ardaos/zktees/#design-considerations","title":"Design Considerations","text":"<ul> <li>ZK circuits are audited and governed through upgrade proposals</li> <li>TEEs must publish attestation keys and are whitelisted via Agent Registry</li> <li>All proofs are hash-linked to AuditLog entries for traceability</li> </ul>"},{"location":"ardaos/primitives/accounting/","title":"Accounting","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"ardaos/primitives/accounting/#accounting-primitives","title":"Accounting Primitives","text":"<p>Arda's accounting primitives define the fundamental mechanisms for calculating, accruing, distributing, and reconciling financial flows across the protocol. These primitives support everything from interest accrual on loans to fee allocation, treasury sweeping, and escrow disbursement.</p> <p>They are core to the Treasury, Clear, Tranche, and Yield systems and operate deterministically across ArdaOS chains.</p>"},{"location":"ardaos/primitives/accounting/#key-primitives","title":"Key Primitives","text":"Primitive Description InterestAccrual Calculates interest over time based on principal, rate, duration Drawdown Reduces available capital on disbursement and logs event Burn/Repay Updates repayment balance and destroys DebtToken accordingly FeeEngine Applies configurable fees to issuance, trading, or settlement SweepInstruction Routes funds or tokens between modules based on triggers InterestSplitRule Divides earnings among investors, agents, and treasury"},{"location":"ardaos/primitives/accounting/#example-interest-accrual","title":"Example: Interest Accrual","text":"<pre><code>{\n  \"principal\": 1000000,\n  \"rate\": 0.08,\n  \"periodDays\": 90,\n  \"accruedInterest\": 19726.03\n}\n</code></pre>"},{"location":"ardaos/primitives/accounting/#example-sweep-instruction","title":"Example: Sweep Instruction","text":"<pre><code>{\n  \"instructionId\": \"SWP-221\",\n  \"from\": \"Pool-01\",\n  \"to\": \"TreasurySink\",\n  \"trigger\": \"onInterestPayment\",\n  \"jurisdiction\": \"SG\"\n}\n</code></pre>"},{"location":"ardaos/primitives/accounting/#lifecycle-hooks","title":"Lifecycle Hooks","text":"<p>Each primitive can bind to on-chain event triggers such as:</p> <ul> <li>InterestPaymentReceived</li> <li>LoanDrawdownInitiated</li> <li>DebtFullyRepaid</li> <li>TokenMaturityReached</li> </ul> <p>These hooks trigger Vault logging, AuditLog updates, and state transitions in Token or Tranche lifecycles.</p>"},{"location":"ardaos/primitives/accounting/#compliance-links","title":"Compliance Links","text":"<ul> <li>Sweep and Fee primitives are subject to TransferRules</li> <li>Drawdown and Burn can enforce escrow verification</li> <li>Interest splits validate recipient eligibility against JurisdictionProfile</li> </ul>"},{"location":"ardaos/primitives/asset-primitives/","title":"Asset Primitives","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"ardaos/primitives/asset-primitives/#asset-primitives","title":"Asset Primitives","text":"<p>Asset Primitives in Arda define how physical, legal, and economic characteristics of real-world assets are modeled on-chain. These primitives serve as the foundation for tokenizing and interacting with real estate, infrastructure, commodities, and their associated rights.</p> <p>Each asset primitive is tied to compliance metadata, valuation logic, and lifecycle status\u2014making them programmable, composable, and enforceable.</p> <p>This document outlines the key primitives that define assets on Arda. For a broader overview of Arda's core data structures, see the Core Primitives documentation.</p>"},{"location":"ardaos/primitives/asset-primitives/#core-asset-types","title":"Core Asset Types","text":""},{"location":"ardaos/primitives/asset-primitives/#1-assettoken","title":"1. AssetToken","text":"<ul> <li>Tokenized representation of a physical or legal asset.</li> <li>Includes:<ul> <li>Ownership structure (e.g. fractional, collective)</li> <li>Metadata (valuation, square footage, usage rights)</li> <li>Jurisdictional tag</li> </ul> </li> </ul>"},{"location":"ardaos/primitives/asset-primitives/#2-usageright","title":"2. UsageRight","text":"<ul> <li>Encodes non-ownership entitlements such as:<ul> <li>Rental use</li> <li>Time-share access</li> <li>Right of abode or commercial operation</li> </ul> </li> </ul>"},{"location":"ardaos/primitives/asset-primitives/#3-developmentright","title":"3. DevelopmentRight","text":"<ul> <li>Represents forward-looking rights:<ul> <li>Air rights</li> <li>Zoning approvals</li> <li>Construction licenses</li> </ul> </li> <li>May convert into full ownership upon event or milestone completion</li> </ul>"},{"location":"ardaos/primitives/asset-primitives/#4-registryrecord","title":"4. RegistryRecord","text":"<ul> <li>Anchors asset in a recognized registry (e.g. land department).</li> <li>Links Vault entry (e.g. deed or title document hash) to AssetToken.</li> <li>Used to assert enforceability and legitimacy of claims.</li> </ul>"},{"location":"ardaos/primitives/asset-primitives/#metadata-schema","title":"Metadata Schema","text":"<p>Each asset has a standardized schema:</p> <pre><code>{\n  \"asset_id\": \"AST-00X\",\n  \"type\": \"residential\",\n  \"location\": \"Dubai Marina, UAE\",\n  \"size_sqft\": 2800,\n  \"valuation_usd\": 1500000,\n  \"jurisdiction\": \"UAE\",\n  \"governing_spv\": \"SPV-XYZ\",\n  \"rights\": [\"ownership\", \"rental\"],\n  \"registry_ref\": \"vault://deed-dxb-2024\"\n}\n</code></pre>"},{"location":"ardaos/primitives/asset-primitives/#lifecycle-hooks","title":"Lifecycle Hooks","text":"<p>Assets can evolve through:</p> <ul> <li>Renovation or revaluation (metadata update)</li> <li>Transfer of ownership (compliance-validated)</li> <li>Burn or conversion (e.g. fractional token consolidation)</li> <li>Triggered updates via <code>EventHook</code></li> </ul>"},{"location":"ardaos/primitives/asset-primitives/#compliance-permissions","title":"Compliance &amp; Permissions","text":"<ul> <li>Ownership transfers require:<ul> <li>KYC Tier match</li> <li>Jurisdiction compliance</li> <li>Valid registry entry or override</li> </ul> </li> <li>Assets may have restricted transferability or use based on legal constraints</li> </ul>"},{"location":"ardaos/primitives/compliance/","title":"Compliance","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"ardaos/primitives/compliance/#compliance-primitives","title":"Compliance Primitives","text":"<p>The compliance primitives in Arda define the standardized, protocol-level enforcement rules for identity, jurisdiction, and transaction eligibility. These components are embedded across token issuance, trading, settlement, lending, and governance workflows.</p> <p>They ensure every interaction adheres to KYC, AML, investor protection, and cross-border regulatory frameworks.</p>"},{"location":"ardaos/primitives/compliance/#key-compliance-objects","title":"Key Compliance Objects","text":"Object Description TransferRule Governs if a token transfer is permitted JurisdictionProfile Defines regional-specific policy constraints AttestationRegistry Validates user credentials and qualifications AuditLog Immutable record of protocol actions KycTier User access tier derived from identity verification level"},{"location":"ardaos/primitives/compliance/#transferrule-fields","title":"TransferRule Fields","text":"<pre><code>{\n  \"tokenType\": \"DebtToken\",\n  \"fromKycTier\": 2,\n  \"toKycTier\": 2,\n  \"jurisdiction\": \"US\",\n  \"restrictions\": {\n    \"accredited_only\": true,\n    \"blacklistedRegions\": [\"OFAC\"]\n  }\n}\n</code></pre>"},{"location":"ardaos/primitives/compliance/#jurisdictionprofile-use","title":"JurisdictionProfile Use","text":"<p>Each ArdaOS chain or pool applies a scoped profile:</p> <ul> <li>Transaction Limits: Size, asset type, daily thresholds</li> <li>Investor Class: Retail, Accredited, Institutional</li> <li>Regulatory Hooks: Compliance with SEC, MiFID, MAS, etc.</li> <li>Tax Logic: Optional modules for withholding or VAT</li> </ul>"},{"location":"ardaos/primitives/compliance/#compliance-lifecycle-hooks","title":"Compliance Lifecycle Hooks","text":"<ul> <li>Pre-transfer enforcement</li> <li>Pre-wrap / bridge evaluation</li> <li>Pool entry / order submission filtering</li> <li>Settlement hold or rejection</li> <li>Logging for later audit or appeal</li> </ul>"},{"location":"ardaos/primitives/compliance/#shared-enforcement-logic","title":"Shared Enforcement Logic","text":"<p>These primitives are imported by:</p> <ul> <li>TokenFactory (token gating)</li> <li>Wallet (tier validation)</li> <li>Clear (settlement rejection)</li> <li>Syndication Engine (pool filtering)</li> <li>Trading Engine (order rejection)</li> <li>Agents (access and permissions)</li> </ul>"},{"location":"ardaos/primitives/core-primitives/","title":"Core Primitives","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"ardaos/primitives/core-primitives/#core-protocol-primitives","title":"Core Protocol Primitives","text":"<p>Arda's protocol is built on a set of well-defined primitives that model real-world legal, financial, and operational structures as composable on-chain objects. These primitives define the semantics, permissions, and behaviors of all entities and assets within the Arda ecosystem.</p> <p>They are deterministic, auditable, and designed to enable secure automation, compliance enforcement, and modular expansion.</p>"},{"location":"ardaos/primitives/core-primitives/#core-entities","title":"Core Entities","text":""},{"location":"ardaos/primitives/core-primitives/#1-entity","title":"1. Entity","text":"<p>Represents a person, organization, or legal wrapper (e.g. SPV, Trust).</p> <ul> <li>Fields: <code>entity_id</code>, <code>jurisdiction</code>, <code>type</code>, <code>kyc_status</code>, <code>linked_wallets</code></li> <li>Behaviors: Create, update, verify, associate with roles or mandates</li> </ul>"},{"location":"ardaos/primitives/core-primitives/#2-wallet-group","title":"2. Wallet Group","text":"<p>Logical grouping of wallets tied to a single Entity.</p> <ul> <li>Used for role separation (e.g. trader vs controller), compliance, and audit.</li> </ul>"},{"location":"ardaos/primitives/core-primitives/#3-kyc-tier","title":"3. KYC Tier","text":"<p>Permissioning schema for identity verification.</p> <ul> <li>Tiers define transaction limits, asset access, and compliance scope.</li> </ul>"},{"location":"ardaos/primitives/core-primitives/#token-primitives","title":"Token Primitives","text":""},{"location":"ardaos/primitives/core-primitives/#4-moneytoken","title":"4. MoneyToken","text":"<p>Fungible tokens used for payments, stablecoins, or fiat representations.</p> <ul> <li>Example: <code>USD.ae</code>, <code>AED.regulated</code>, <code>USDC.wrapped</code></li> </ul>"},{"location":"ardaos/primitives/core-primitives/#5-assettoken","title":"5. AssetToken","text":"<p>Represents a property right (e.g. deed, lease, title) or fractional ownership.</p> <ul> <li>Supports metadata (valuation, zoning, unit economics)</li> </ul>"},{"location":"ardaos/primitives/core-primitives/#6-debttoken","title":"6. DebtToken","text":"<p>Represents a claim against future cash flows (e.g. mortgage, bond, credit facility).</p> <ul> <li>Lifecycle: Drawdown \u2192 Accrual \u2192 Repayment \u2192 Closure</li> </ul>"},{"location":"ardaos/primitives/core-primitives/#7-yieldtoken","title":"7. YieldToken","text":"<p>Derived from cash flow streams (e.g. interest strip, rent share).</p> <ul> <li>Can be sliced and recombined for structured products.</li> </ul>"},{"location":"ardaos/primitives/core-primitives/#8-tranchetoken","title":"8. TrancheToken","text":"<p>Represents structured risk exposure within a facility (senior, mezzanine, equity).</p> <ul> <li>Tied to waterfalls and allocation logic.</li> </ul>"},{"location":"ardaos/primitives/core-primitives/#9-permissionedpool","title":"9. PermissionedPool","text":"<p>Smart container for capital constrained by compliance rules.</p> <ul> <li>Used in syndication, lending, and primary offerings.</li> </ul>"},{"location":"ardaos/primitives/core-primitives/#legal-operational-structures","title":"Legal &amp; Operational Structures","text":""},{"location":"ardaos/primitives/core-primitives/#10-spv","title":"10. SPV","text":"<p>Special-purpose vehicle tied to one or more assets and/or investors.</p> <ul> <li>Legal anchor for enforceability and rights flow.</li> </ul>"},{"location":"ardaos/primitives/core-primitives/#11-mandate","title":"11. Mandate","text":"<p>Defines operational intent for a facility, portfolio, or investment.</p> <ul> <li>Example: \"Lend to SMEs in UAE with &lt;65% LTV\"</li> </ul>"},{"location":"ardaos/primitives/core-primitives/#12-custodyrelationship","title":"12. CustodyRelationship","text":"<p>Models asset custodianship, e.g. when a bank or trust holds tokens or off-chain property.</p>"},{"location":"ardaos/primitives/core-primitives/#financial-logic","title":"Financial Logic","text":""},{"location":"ardaos/primitives/core-primitives/#13-drawdown","title":"13. Drawdown","text":"<p>Represents an authorized capital disbursement in a facility.</p>"},{"location":"ardaos/primitives/core-primitives/#14-repay-burn","title":"14. Repay / Burn","text":"<p>Tracks repayment events and token deflation.</p>"},{"location":"ardaos/primitives/core-primitives/#15-interestaccrual","title":"15. InterestAccrual","text":"<p>Rules and rates for interest calculation (e.g. daily, compounding, fixed/floating).</p>"},{"location":"ardaos/primitives/core-primitives/#16-feeengine","title":"16. FeeEngine","text":"<p>Manages originator, servicer, platform, and regulatory fees.</p>"},{"location":"ardaos/primitives/core-primitives/#treasury-capital-flow","title":"Treasury &amp; Capital Flow","text":""},{"location":"ardaos/primitives/core-primitives/#17-sweepinstruction","title":"17. SweepInstruction","text":"<p>Automated treasury actions for cash flows (e.g. daily sweep to issuer).</p>"},{"location":"ardaos/primitives/core-primitives/#18-interestsplitrule","title":"18. InterestSplitRule","text":"<p>Allocation logic for accrued interest.</p>"},{"location":"ardaos/primitives/core-primitives/#19-oracleupdate","title":"19. OracleUpdate","text":"<p>Permissioned price or valuation input.</p>"},{"location":"ardaos/primitives/core-primitives/#syndication-structuring","title":"Syndication &amp; Structuring","text":""},{"location":"ardaos/primitives/core-primitives/#20-orderbook","title":"20. OrderBook","text":"<p>Used in primary issuance or lending syndication.</p>"},{"location":"ardaos/primitives/core-primitives/#21-bid","title":"21. Bid","text":"<p>Investor offer in a facility or issuance.</p>"},{"location":"ardaos/primitives/core-primitives/#22-allocationengine","title":"22. AllocationEngine","text":"<p>Logic for clearing price, winner selection, and over-subscription.</p>"},{"location":"ardaos/primitives/core-primitives/#23-waterfall","title":"23. Waterfall","text":"<p>Defines payment priority for a pool or facility.</p>"},{"location":"ardaos/primitives/core-primitives/#compliance-permissioning","title":"Compliance &amp; Permissioning","text":""},{"location":"ardaos/primitives/core-primitives/#24-transferrule","title":"24. TransferRule","text":"<p>Enforces allowable transfers between participants or regions.</p>"},{"location":"ardaos/primitives/core-primitives/#25-jurisdictionprofile","title":"25. JurisdictionProfile","text":"<p>Bundle of rules governing behavior within a region.</p>"},{"location":"ardaos/primitives/core-primitives/#26-auditlog","title":"26. AuditLog","text":"<p>Immutable record of all compliance-relevant protocol events.</p>"},{"location":"ardaos/primitives/core-primitives/#lifecycle-execution","title":"Lifecycle &amp; Execution","text":""},{"location":"ardaos/primitives/core-primitives/#27-facilitystatus","title":"27. FacilityStatus","text":"<p>Tracks lifecycle stages of an issuance or facility.</p>"},{"location":"ardaos/primitives/core-primitives/#28-paymentschedule","title":"28. PaymentSchedule","text":"<p>Enforces disbursement, repayment, or vesting flows.</p>"},{"location":"ardaos/primitives/core-primitives/#29-eventhook","title":"29. EventHook","text":"<p>Triggers logic based on time, status, or oracle condition.</p>"},{"location":"ardaos/primitives/core-primitives/#settlement","title":"Settlement","text":""},{"location":"ardaos/primitives/core-primitives/#30-settlementqueue","title":"30. SettlementQueue","text":"<p>Tracks pending state changes requiring confirmation.</p>"},{"location":"ardaos/primitives/core-primitives/#31-feesink","title":"31. FeeSink","text":"<p>Receives fees and distributes per protocol logic.</p>"},{"location":"ardaos/primitives/core-primitives/#32-nettingengine","title":"32. NettingEngine","text":"<p>Performs multi-party netting and finalizes token movements.</p>"},{"location":"ardaos/primitives/financial-primitives/","title":"Financial Primitives","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"ardaos/primitives/financial-primitives/#financial-primitives","title":"Financial Primitives","text":"<p>Financial primitives in Arda define the contract-level representations of capital, debt, yield, and structured risk. These standardized components enable composable financial engineering while maintaining compliance and lifecycle guarantees.</p> <p>They serve as the foundation for Arda Capital, Arda Trading, and Arda Clear flows, and are fully compatible with legal wrappers and governance layers.</p>"},{"location":"ardaos/primitives/financial-primitives/#primary-primitives","title":"Primary Primitives","text":""},{"location":"ardaos/primitives/financial-primitives/#1-debttoken","title":"1. DebtToken","text":"<ul> <li>Represents a borrower's obligation to repay a lender or syndicate.</li> <li>Attributes:<ul> <li>Principal</li> <li>Interest rate (fixed/floating)</li> <li>Term, maturity date</li> <li>Collateral reference</li> </ul> </li> </ul>"},{"location":"ardaos/primitives/financial-primitives/#2-yieldtoken","title":"2. YieldToken","text":"<ul> <li>Tracks entitlement to income generated by assets (e.g. rent, interest).</li> <li>May be linked to:<ul> <li>A facility (pro-rata)</li> <li>A tranche (risk-tiered)</li> <li>A pool of assets (e.g. REIT-like structure)</li> </ul> </li> </ul>"},{"location":"ardaos/primitives/financial-primitives/#3-tranchetoken","title":"3. TrancheToken","text":"<ul> <li>Represents a risk layer within a structured facility.</li> <li>Tied to a <code>Waterfall</code> that dictates payment priority.</li> <li>Types:<ul> <li>Senior</li> <li>Mezzanine</li> <li>Equity</li> </ul> </li> </ul>"},{"location":"ardaos/primitives/financial-primitives/#4-permissionedpool","title":"4. PermissionedPool","text":"<ul> <li>Constrained capital pool enforcing:<ul> <li>KYC tiers</li> <li>Jurisdictional limits</li> <li>Ticket size rules</li> </ul> </li> <li>Used for:<ul> <li>Syndicated lending</li> <li>Primary issuance</li> <li>Token sale allocations</li> </ul> </li> </ul>"},{"location":"ardaos/primitives/financial-primitives/#supporting-logic","title":"Supporting Logic","text":""},{"location":"ardaos/primitives/financial-primitives/#5-drawdown","title":"5. Drawdown","text":"<ul> <li>Event triggered when funds are disbursed from a facility.</li> <li>Instantiates or updates a DebtToken.</li> </ul>"},{"location":"ardaos/primitives/financial-primitives/#6-interestaccrual","title":"6. InterestAccrual","text":"<ul> <li>Defines how and when interest is added to outstanding principal.</li> <li>May use oracle input for variable rates.</li> </ul>"},{"location":"ardaos/primitives/financial-primitives/#7-repayment-burn","title":"7. Repayment / Burn","text":"<ul> <li>Used to:<ul> <li>Reduce principal</li> <li>Trigger maturity</li> <li>Finalize facility or tranche</li> </ul> </li> </ul>"},{"location":"ardaos/primitives/financial-primitives/#structuring-monitoring","title":"Structuring &amp; Monitoring","text":""},{"location":"ardaos/primitives/financial-primitives/#8-waterfall","title":"8. Waterfall","text":"<ul> <li>Defines how cash flows are distributed across TrancheTokens.</li> <li>Supports:<ul> <li>Min/max return thresholds</li> <li>Cumulative loss absorption</li> <li>Reset or ratchet logic</li> </ul> </li> </ul>"},{"location":"ardaos/primitives/financial-primitives/#9-paymentschedule","title":"9. PaymentSchedule","text":"<ul> <li>Enforces recurring or event-based cash flow.</li> <li>Includes:<ul> <li>Frequency</li> <li>Penalty tiers</li> <li>Grace periods</li> </ul> </li> </ul>"},{"location":"ardaos/primitives/financial-primitives/#derived-instruments","title":"Derived Instruments","text":"<p>Arda supports higher-order instruments via combinations of primitives:</p> <ul> <li>Tokenized REITs</li> <li>Programmatic SPVs</li> <li>Insurance-linked tranches</li> <li>Credit-enhanced yield strategies</li> </ul>"},{"location":"ardaos/primitives/governance/","title":"Governance","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"ardaos/primitives/governance/#governance-primitives","title":"Governance Primitives","text":"<p>Arda's governance primitives define how roles, rights, and protocol upgrades are managed in a modular, jurisdiction-aware, and compliance-first fashion. Governance spans asset configuration, pool rules, agent registration, and protocol module evolution.</p> <p>All governance actions are tracked and scoped via identity, attestation, and jurisdictional logic \u2014 ensuring region-specific control where needed while enabling global coordination.</p>"},{"location":"ardaos/primitives/governance/#core-primitives","title":"Core Primitives","text":"Primitive Description RoleBinding Maps wallet or entity to governance or operational capability Proposal Defines a change request to a protocol configuration or state VoteWeight Determines influence in a vote (based on tokens, role, or identity) ApprovalThreshold Defines quorum and majority logic per scope Delegation Enables proxy participation by approved agents or entities"},{"location":"ardaos/primitives/governance/#example-rolebinding","title":"Example: RoleBinding","text":"<pre><code>{\n  \"role\": \"ProtocolUpgrader\",\n  \"entityId\": \"ENTITY-101\",\n  \"wallet\": \"0xabc\",\n  \"jurisdiction\": \"SG\",\n  \"expires\": \"2026-01-01\"\n}\n</code></pre>"},{"location":"ardaos/primitives/governance/#proposal-lifecycle","title":"Proposal Lifecycle","text":"<ol> <li>Draft \u2014 Created by eligible proposer</li> <li>Review \u2014 Shared with compliance or DAO council (if applicable)</li> <li>Vote \u2014 Executed by eligible tokenholders or role-bound voters</li> <li>Execution \u2014 Triggered on-chain via function call or module update</li> <li>Log \u2014 Captured in AuditLog for traceability</li> </ol>"},{"location":"ardaos/primitives/governance/#governance-scopes","title":"Governance Scopes","text":"Scope Participants Use Case Global Tokenholders + Council Core module upgrades Regional Jurisdiction-bound actors Asset rules, pool configs Pool-Level LPs, Managers Allocation and payout settings Agent-Level Protocol Ops Registration and slashing"},{"location":"ardaos/primitives/governance/#compliance-alignment","title":"Compliance Alignment","text":"<ul> <li>AttestationRegistry: Confirms voter or delegate eligibility</li> <li>JurisdictionProfile: Filters proposal scope or access</li> <li>AuditLog: Tracks proposal status, outcome, and signers</li> </ul>"},{"location":"ardaos/primitives/governance/#integration","title":"Integration","text":"<ul> <li>Token Factory \u2014 Role gating for issuer and metadata updaters</li> <li>Agent Registry \u2014 Role assignment and revocation</li> <li>Vault \u2014 Anchored policies and decision history</li> <li>Interop \u2014 Optional global config propagation across ArdaOS chains</li> </ul>"},{"location":"getting-started/fiat-onramp/","title":"Fiat Onramp","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"getting-started/fiat-onramp/#fiat-onramps","title":"Fiat Onramps","text":"<p>Fiat onramps in Arda allow users to convert local currency into compliant, programmable MoneyTokens for use across ArdaOS chains. These integrations bridge banking infrastructure with blockchain execution while preserving KYC, auditability, and jurisdictional scope.</p>"},{"location":"getting-started/fiat-onramp/#supported-models","title":"Supported Models","text":""},{"location":"getting-started/fiat-onramp/#1-bank-transfer-via-trusted-partner","title":"1. Bank Transfer via Trusted Partner","text":"<ul> <li>ACH / SEPA / SWIFT transfers</li> <li>User wires funds to a designated collection account</li> <li>Platform mints corresponding <code>MoneyToken</code> (e.g. <code>USD.ae</code>) after settlement</li> </ul>"},{"location":"getting-started/fiat-onramp/#2-bank-issued-stablecoin-minting","title":"2. Bank-Issued Stablecoin Minting","text":"<ul> <li>Regulated banks mint tokens (e.g. Dirham Stablecoin)</li> <li>Arda integrates token registry and TransferRules</li> <li>Token backed 1:1 in licensed custody</li> </ul>"},{"location":"getting-started/fiat-onramp/#3-licensed-payment-gateway","title":"3. Licensed Payment Gateway","text":"<ul> <li>Integration with:<ul> <li>Checkout.com</li> <li>Stripe (crypto API)</li> <li>Adyen</li> </ul> </li> <li>Card payments \u2192 Token issuance after KYC and fraud checks</li> </ul>"},{"location":"getting-started/fiat-onramp/#compliance-controls","title":"Compliance Controls","text":"<ul> <li>KYC enforced before token issuance</li> <li>TransferRules encode:<ul> <li>Spending limits</li> <li>Jurisdiction boundaries</li> <li>Flow tracking</li> </ul> </li> <li>Every fiat \u2192 MoneyToken mint logged in AuditLog and Vault</li> </ul>"},{"location":"getting-started/fiat-onramp/#fiat-conversion-workflow","title":"Fiat Conversion Workflow","text":"<ol> <li>User completes KYC and links wallet</li> <li>Transfers $10,000 to Arda partner account</li> <li>Payment verified by Oracles or manual attestation</li> <li><code>mintMoneyToken()</code> triggered for wallet</li> <li>Tokens usable across Arda Capital, Trading, and Clear</li> </ol>"},{"location":"getting-started/fiat-onramp/#custody-settlement","title":"Custody &amp; Settlement","text":"<ul> <li>All fiat held in segregated accounts or trust vehicles</li> <li>Proof of Reserves published periodically</li> <li>Token redemptions handled via <code>burnMoneyToken()</code> and off-chain settlement request</li> </ul>"},{"location":"getting-started/fiat-onramp/#developer-notes","title":"Developer Notes","text":"<ul> <li>SDK includes:<ul> <li><code>initiateFiatOnramp()</code>, <code>mintMoneyToken()</code>, <code>burnMoneyToken()</code></li> </ul> </li> <li>Oracle feeds verify off-chain payment status</li> <li>Integrated with Arda Vault for regulatory audit trail</li> </ul>"},{"location":"getting-started/interop/","title":"Interop","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"getting-started/interop/#arda-interop","title":"Arda Interop","text":""},{"location":"getting-started/interop/#overview","title":"Overview","text":"<p>Arda Interop is the cross-region and cross-chain interoperability layer for the Arda ecosystem. It allows assets, identities, and transaction intents to flow between sovereign ArdaOS chains while preserving compliance, consistency, and settlement guarantees.</p> <p>Interop ensures that regional chains can operate autonomously without fragmenting liquidity, identity verification, or compliance standards.</p>"},{"location":"getting-started/interop/#core-components","title":"Core Components","text":"Component Description <code>Bridge Gateway</code> Secure message-passing between ArdaOS regions and/or external chains <code>Global Asset Registry</code> Maps token IDs and asset metadata across regions for consistency <code>SDK Router</code> Abstracts away destination region and handles endpoint resolution <code>xCall API</code> Unified interface for initiating cross-region function calls <code>Proof Sync Engine</code> Verifies foreign state roots or bridge attestations (ZK, MPC, or multisig)"},{"location":"getting-started/interop/#cross-region-use-cases","title":"Cross-Region Use Cases","text":"<ul> <li>Asset Migration: Move an <code>AssetToken</code> from Arda UAE to Arda US while maintaining KYC and rights.</li> <li>Investor Access: Let a verified investor from one jurisdiction access deals in another (if permitted).</li> <li>Syndication Pooling: Aggregate commitments from multiple regions into a shared capital pool.</li> <li>Global Order Routing: Trade tokens issued in one region via marketplaces in another.</li> <li>Audit &amp; Compliance Sync: Share transaction logs and attestations across regions.</li> </ul>"},{"location":"getting-started/interop/#architecture","title":"Architecture","text":"<pre><code>graph LR\n    A[Arda UAE] --&gt;|Bridge| B[Arda US]\n    B --&gt;|State Root| C[Arda Core]\n    C --&gt; D[Global Registry]\n    D --&gt; E[SDK Router]\n</code></pre> <p>Each ArdaOS chain maintains its own consensus but interoperates via authenticated message-passing and SDK-coordinated function calls.</p>"},{"location":"getting-started/interop/#bridge-types-supported","title":"Bridge Types Supported","text":"Type Description Celestia IPC Light client-based with ZK enhancements Hyperlane Modular security + fast message relaying Native Bridge Chain-specific bridge contracts with attestation validation Off-chain Oracle For fallback use, centralized attestor with time delay"},{"location":"getting-started/interop/#security-finality","title":"Security &amp; Finality","text":"<p>All interop operations require:</p> <ul> <li>Origin Chain Finality \u2014 Confirmed state on sender chain (e.g. block inclusion + finalization).</li> <li>Verification \u2014 Proof-of-state or proof-of-event matched by receiver chain.</li> <li>Compliance Re-evaluation \u2014 Receiving chain enforces local rules before accepting execution.</li> <li>Fallbacks \u2014 Timeouts, dispute periods, and circuit breakers to prevent fraud or mismatch.</li> </ul>"},{"location":"getting-started/mvp-testnet-flow/","title":"MVP Testnet Flow","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"getting-started/mvp-testnet-flow/#arda-mvp-testnet-flow","title":"Arda MVP Testnet Flow","text":""},{"location":"getting-started/mvp-testnet-flow/#overview","title":"Overview","text":"<p>This example outlines a Minimum Viable Product (MVP) flow for testing tokenized real estate functionality in a regional ArdaOS testnet. It includes onboarding, asset registration, token issuance, compliance enforcement, and secondary trading\u2014all under test conditions.</p>"},{"location":"getting-started/mvp-testnet-flow/#scenario-summary","title":"Scenario Summary","text":"<p>A developer launches a testnet instance for a fictional city (e.g. Testburg) and simulates the lifecycle of a fractionalized residential property:</p> <ul> <li>Owner tokenizes a property</li> <li>Investors KYC and contribute funds</li> <li>AssetToken issued and traded</li> <li>Compliance and settlement validated</li> </ul>"},{"location":"getting-started/mvp-testnet-flow/#step-by-step-flow","title":"Step-by-Step Flow","text":""},{"location":"getting-started/mvp-testnet-flow/#1-create-region-testnet","title":"1. Create Region Testnet","text":"<ul> <li>Launch ArdaOS using <code>testburg-genesis.json</code></li> <li>Deploy KYC engine with local T1/T2 schema</li> <li>Register <code>TEST.USD</code> MoneyToken and connect Arda Vault node</li> </ul>"},{"location":"getting-started/mvp-testnet-flow/#2-register-spv-and-upload-deed","title":"2. Register SPV and Upload Deed","text":"<ul> <li>Call <code>createEntity()</code> \u2192 SPV owner onboarded</li> <li>Use Arda Vault to register property deed with metadata:<ul> <li>Location: \"123 Test Street\"</li> <li>Valuation: $500,000</li> <li>Document: <code>deed-testburg.pdf</code></li> </ul> </li> </ul>"},{"location":"getting-started/mvp-testnet-flow/#3-issue-assettoken","title":"3. Issue AssetToken","text":"<ul> <li>Call <code>createAssetToken()</code> and link to Vault doc hash</li> <li>Mint 10,000 fractional tokens</li> <li>Lock into PermissionedPool scoped to KYC Tier 2+</li> </ul>"},{"location":"getting-started/mvp-testnet-flow/#4-investor-onboarding","title":"4. Investor Onboarding","text":"<ul> <li>3 investors complete simulated KYC (Tiers 1\u20133)</li> <li>Tier 2 investor contributes $50,000 via testnet <code>TEST.USD</code></li> </ul>"},{"location":"getting-started/mvp-testnet-flow/#5-transfer-and-compliance-enforcement","title":"5. Transfer and Compliance Enforcement","text":"<ul> <li>KYC Tier 1 investor attempts transfer \u2192 rejected</li> <li>Tier 2 transfer \u2192 passes compliance and transfer rule</li> <li>Event logs recorded in AuditLog</li> </ul>"},{"location":"getting-started/mvp-testnet-flow/#6-secondary-trading","title":"6. Secondary Trading","text":"<ul> <li>Tier 2 investor lists 1,000 tokens via Arda Trading RFQ</li> <li>Tier 3 investor accepts \u2192 Arda Clear finalizes cross-account settlement</li> </ul>"},{"location":"getting-started/mvp-testnet-flow/#deployment-checklist","title":"Deployment Checklist","text":"<ul> <li>[ ] ArdaOS testnet running</li> <li>[ ] KYC module deployed and configured</li> <li>[ ] Vault storage and event anchoring enabled</li> <li>[ ] Arda Trading and Arda Clear modules live</li> <li>[ ] Compliance rules scoped to TEST jurisdiction</li> </ul>"},{"location":"getting-started/mvp-testnet-flow/#developer-notes","title":"Developer Notes","text":"<ul> <li>All SDK calls tested using Arda CLI and Postman collection</li> <li>Events can be queried via <code>queryAuditLog()</code> or testnet explorer</li> <li>Tracing support via OpenTelemetry plugin</li> </ul>"},{"location":"getting-started/observability/","title":"Observability","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"getting-started/observability/#observability","title":"Observability","text":"<p>Arda's observability stack provides unified logging, metrics, tracing, and alerting across sovereign ArdaOS chains and Arda Core coordination logic.</p>"},{"location":"getting-started/observability/#overview","title":"Overview","text":"<p>Observability in Arda ensures operational integrity, regulatory traceability, and developer visibility across all deployed chains, agents, and vaults. It includes metrics, logging, tracing, and alerting across sovereign ArdaOS chains and Arda Core coordination logic.</p> <p>Arda's observability layer is modular, privacy-aware, and compatible with enterprise security standards.</p>"},{"location":"getting-started/observability/#key-components","title":"Key Components","text":""},{"location":"getting-started/observability/#1-metrics-monitoring","title":"1. Metrics &amp; Monitoring","text":"<ul> <li>Collected from:<ul> <li>Validators</li> <li>Arda Vaults</li> <li>SettlementQueue</li> <li>SDK clients</li> </ul> </li> <li>Exported to:<ul> <li>Prometheus</li> <li>Grafana</li> <li>Cloud-native dashboards (e.g. AWS CloudWatch)</li> </ul> </li> </ul>"},{"location":"getting-started/observability/#2-logs","title":"2. Logs","text":"<ul> <li>Categories:<ul> <li>Transaction logs</li> <li>Compliance events (KYC, transfer rejections)</li> <li>Governance proposals</li> <li>Lifecycle transitions (drawdown, default, repayment)</li> </ul> </li> <li>Persisted with timestamp and hash for auditability</li> <li>Anchored to AuditLog</li> </ul>"},{"location":"getting-started/observability/#3-tracing","title":"3. Tracing","text":"<ul> <li>Cross-service tracing via OpenTelemetry</li> <li>Transaction ID and wallet-based correlation</li> <li>Used to diagnose stuck flows, slashing triggers, or performance bottlenecks</li> </ul>"},{"location":"getting-started/observability/#4-alerting","title":"4. Alerting","text":"<ul> <li> <p>Rule-based triggers for:</p> <ul> <li>Missed validator heartbeats</li> <li>Slashed agent actions</li> <li>Bridge latency anomalies</li> <li>Jurisdictional rule drift</li> </ul> </li> <li> <p>Alert channels:</p> <ul> <li>Email/SMS/webhook</li> <li>Slack, Discord bots</li> <li>Regulator dashboards</li> </ul> </li> </ul>"},{"location":"getting-started/observability/#data-privacy","title":"Data Privacy","text":"<ul> <li>Logs can be scoped by:<ul> <li>Jurisdiction</li> <li>Role (regulator, investor, validator)</li> </ul> </li> <li>PII redacted unless access key approved via Arda Vault</li> </ul>"},{"location":"getting-started/observability/#developer-notes","title":"Developer Notes","text":"<ul> <li>ArdaOS and Core export metrics via <code>/metrics</code> and log JSON files</li> <li>SDK includes:<ul> <li><code>subscribeLogs()</code>, <code>queryMetrics()</code>, <code>reportIssue()</code></li> </ul> </li> <li>Agent telemetry is opt-in with staking-backed incentives for uptime</li> <li>Bridges and relayers provide transaction-level logs</li> <li>Vault nodes log access control and encryption/decryption events</li> </ul>"},{"location":"getting-started/observability/#data-sources","title":"Data Sources","text":"<ul> <li>ArdaOS and Core export metrics via <code>/metrics</code> and log JSON files</li> <li>Bridges and relayers provide transaction-level logs</li> <li>Vault nodes log access control and encryption/decryption events</li> </ul>"},{"location":"getting-started/programmable-loan/","title":"Programmable Loan","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"getting-started/programmable-loan/#programmable-loan-example","title":"Programmable Loan Example","text":""},{"location":"getting-started/programmable-loan/#overview","title":"Overview","text":"<p>This example demonstrates how to structure and deploy a programmable loan using Arda Capital. It covers facility creation, drawdown logic, interest accrual, repayment schedules, and event-triggered transitions\u2014all under embedded compliance and risk monitoring.</p>"},{"location":"getting-started/programmable-loan/#scenario-summary","title":"Scenario Summary","text":"<p>A developer sets up a $2M construction loan facility for a residential project using a programmable SPV and automated milestone-based drawdowns. Yield and tranche structuring logic is included.</p>"},{"location":"getting-started/programmable-loan/#step-by-step-flow","title":"Step-by-Step Flow","text":""},{"location":"getting-started/programmable-loan/#1-create-spv-and-facility","title":"1. Create SPV and Facility","text":"<ul> <li>SPV entity initialized with <code>createEntity()</code></li> <li>Legal documents uploaded via Arda Vault</li> <li>Call <code>createFacility()</code> with:<ul> <li>Max principal: $2M</li> <li>Term: 24 months</li> <li>Interest: 6% fixed</li> <li>Jurisdiction: UAE</li> <li>Repayment type: Bullet</li> </ul> </li> </ul>"},{"location":"getting-started/programmable-loan/#2-define-drawdown-milestones","title":"2. Define Drawdown Milestones","text":"<ul> <li>Register PaymentSchedule:<ul> <li>Tranche 1: $500k upon permitting</li> <li>Tranche 2: $700k upon foundation</li> <li>Tranche 3: $800k upon roofing</li> </ul> </li> <li>Milestones tracked by Monitoring Agent</li> </ul>"},{"location":"getting-started/programmable-loan/#3-deploy-compliance-rules","title":"3. Deploy Compliance Rules","text":"<ul> <li>KYC Tier 2 minimum</li> <li>JurisdictionProfile = UAE</li> <li>PermissionedPool scoped to investors in GCC only</li> </ul>"},{"location":"getting-started/programmable-loan/#4-raise-capital","title":"4. Raise Capital","text":"<ul> <li>PermissionedPool receives $2M across 5 investors</li> <li>Auto-allocate pro-rata TrancheTokens</li> </ul>"},{"location":"getting-started/programmable-loan/#5-disburse-and-accrue","title":"5. Disburse and Accrue","text":"<ul> <li>Milestone 1 completed \u2192 Monitoring Agent submits attestation</li> <li><code>drawdown()</code> releases $500k to borrower</li> <li><code>accrueInterest()</code> starts for TrancheToken holders</li> </ul>"},{"location":"getting-started/programmable-loan/#6-repayment-and-finalization","title":"6. Repayment and Finalization","text":"<ul> <li>At maturity, borrower sends $2.24M (principal + interest)</li> <li><code>repay()</code> splits to TrancheToken holders via InterestSplitRule</li> <li><code>burnDebtToken()</code> finalizes loan lifecycle</li> </ul>"},{"location":"getting-started/programmable-loan/#event-hooks-used","title":"Event Hooks Used","text":"<ul> <li><code>onMilestoneCompleted()</code> \u2192 triggers drawdown</li> <li><code>onLatePayment()</code> \u2192 apply penalty and alert agent</li> <li><code>onRepaymentComplete()</code> \u2192 auto-close facility and update AuditLog</li> </ul>"},{"location":"getting-started/programmable-loan/#developer-notes","title":"Developer Notes","text":"<ul> <li>SDK used:<ul> <li><code>createFacility()</code>, <code>registerSchedule()</code>, <code>drawdown()</code>, <code>repay()</code></li> </ul> </li> <li>Milestone status queryable via Monitoring Agent output</li> <li>Tranche data viewable in <code>TrancheIndex</code></li> </ul>"},{"location":"getting-started/regional-deployment/","title":"Regional Setup","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"getting-started/regional-deployment/#regional-deployment","title":"Regional Deployment","text":""},{"location":"getting-started/regional-deployment/#overview","title":"Overview","text":"<p>Regional deployment is the process of launching and configuring an ArdaOS instance for a specific jurisdiction. This enables compliance with local regulations, data residency mandates, and infrastructure control, while maintaining global interoperability through Arda Core.</p> <p>Each deployment is modular, sovereign, and optimized for local needs.</p>"},{"location":"getting-started/regional-deployment/#deployment-architecture","title":"Deployment Architecture","text":""},{"location":"getting-started/regional-deployment/#1-sovereign-chain-instance","title":"1. Sovereign Chain Instance","text":"<ul> <li>Rollkit / Cosmos SDK-based rollup or POA chain</li> <li>Anchored to Celestia, EigenDA, or local DA layer</li> <li>Validator set controlled by regional stakeholders</li> </ul>"},{"location":"getting-started/regional-deployment/#2-cloud-or-on-prem-infrastructure","title":"2. Cloud or On-Prem Infrastructure","text":"<ul> <li>Common environments:<ul> <li>AWS Region (e.g. UAE, Singapore)</li> <li>Azure Government Cloud</li> <li>Local Ministry Datacenters</li> </ul> </li> </ul>"},{"location":"getting-started/regional-deployment/#3-chain-configuration","title":"3. Chain Configuration","text":"<ul> <li>Governance parameters</li> <li>Local stablecoin support</li> <li>Compliance module registry</li> <li>Asset classification mapping (from Arda Taxonomy)</li> </ul>"},{"location":"getting-started/regional-deployment/#integration-with-arda-core","title":"Integration with Arda Core","text":"<ul> <li>All regional chains register:<ul> <li>Chain ID</li> <li>Supported token types</li> <li>KYC schemas</li> <li>Validator identities</li> </ul> </li> <li>Synced via Arda Core messaging or snapshot state export</li> </ul>"},{"location":"getting-started/regional-deployment/#legal-regulatory-considerations","title":"Legal &amp; Regulatory Considerations","text":"<ul> <li>Requires MOU or legal agreement with:<ul> <li>Land registry</li> <li>Financial regulator</li> <li>KYC providers</li> </ul> </li> <li>SPV registration and legal wrappers often deployed in parallel (via Foundry)</li> </ul>"},{"location":"getting-started/regional-deployment/#developer-notes","title":"Developer Notes","text":"<ul> <li>Deployment SDK available for scripted config and validator launch</li> <li>Initial setup includes:<ul> <li>Genesis file creation</li> <li>Validator keygen and rotation</li> <li>Compliance rule upload</li> </ul> </li> <li>Monitored by observability tools via Arda Core</li> </ul>"},{"location":"getting-started/trading-rfq-example/","title":"Trading RFQ Example","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"getting-started/trading-rfq-example/#trading-rfq-example","title":"Trading RFQ Example","text":""},{"location":"getting-started/trading-rfq-example/#overview","title":"Overview","text":"<p>This example demonstrates how to execute a compliant off-chain negotiated trade using Arda Trading's Request-for-Quote (RFQ) engine. It simulates a fractional real estate token being offered and acquired through an RFQ flow, with embedded eligibility checks and escrowed settlement.</p>"},{"location":"getting-started/trading-rfq-example/#scenario-summary","title":"Scenario Summary","text":"<p>A Tier 3 investor negotiates to acquire a 5% stake in a Dubai residential building via an RFQ exchange with a Tier 2 seller. Settlement is delayed until regulatory approval and escrow validation.</p>"},{"location":"getting-started/trading-rfq-example/#step-by-step-flow","title":"Step-by-Step Flow","text":""},{"location":"getting-started/trading-rfq-example/#1-list-rfq-offer","title":"1. List RFQ Offer","text":"<ul> <li>Seller calls <code>createRFQ()</code> via SDK:<ul> <li>Token: <code>AssetToken.009</code></li> <li>Quantity: 5,000 (5% stake)</li> <li>Ask price: $50,000</li> <li>Valid for: 72 hours</li> <li>Conditions: UAE KYC Tier 2+ buyer only</li> </ul> </li> </ul>"},{"location":"getting-started/trading-rfq-example/#2-buyer-discovery-and-validation","title":"2. Buyer Discovery and Validation","text":"<ul> <li>RFQ listed in Arda Trading portal</li> <li>Buyer (Tier 3, accredited) initiates <code>respondToRFQ()</code></li> <li>Compliance engine runs:<ul> <li>Jurisdictional match \u2192 \u2705</li> <li>KYC Tier match \u2192 \u2705</li> <li>Holding limit \u2192 \u2705</li> </ul> </li> </ul>"},{"location":"getting-started/trading-rfq-example/#3-escrow-setup","title":"3. Escrow Setup","text":"<ul> <li>Buyer deposits $50,000 in <code>TEST.USD</code> via PermissionedPool</li> <li>Seller pre-commits 5,000 tokens to escrow contract</li> <li>Both parties sign execution intent</li> </ul>"},{"location":"getting-started/trading-rfq-example/#4-arda-clear-settlement","title":"4. Arda Clear Settlement","text":"<ul> <li>SettlementQueue entry created</li> <li>Compliance re-check executed before final swap</li> <li>Delay buffer: 24h for optional regulator review</li> <li>Final token transfer and fund release triggered by <code>finalizeRFQTrade()</code></li> </ul>"},{"location":"getting-started/trading-rfq-example/#hooks-and-logs","title":"Hooks and Logs","text":"<ul> <li><code>onEscrowReady()</code> \u2192 triggers buffer countdown</li> <li><code>onEscrowExpired()</code> \u2192 triggers rollback</li> <li><code>onSettlementComplete()</code> \u2192 triggers AuditLog entry</li> </ul>"},{"location":"getting-started/trading-rfq-example/#developer-notes","title":"Developer Notes","text":"<ul> <li>SDK:<ul> <li><code>createRFQ()</code>, <code>respondToRFQ()</code>, <code>finalizeRFQTrade()</code></li> </ul> </li> <li>All trades visible via <code>queryRFQBook()</code> and <code>SettlementQueue</code></li> <li>AuditLog indexed by jurisdiction and token ID</li> </ul>"},{"location":"getting-started/validator-setup/","title":"Validator Setup","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"getting-started/validator-setup/#validator-setup","title":"Validator Setup","text":"<p>Validators are responsible for block production, compliance enforcement, and cross-chain message signing within each ArdaOS region. This guide outlines the setup process, role permissions, and operational requirements for regional validator nodes.</p>"},{"location":"getting-started/validator-setup/#validator-roles","title":"Validator Roles","text":""},{"location":"getting-started/validator-setup/#1-block-producer","title":"1. Block Producer","text":"<ul> <li>Participates in consensus (POA or rollup sequencer)</li> <li>Signs blocks, orders transactions</li> </ul>"},{"location":"getting-started/validator-setup/#2-compliance-executor","title":"2. Compliance Executor","text":"<ul> <li>Applies TransferRules and JurisdictionProfiles</li> <li>Ensures pre-trade and post-trade validation</li> </ul>"},{"location":"getting-started/validator-setup/#3-bridge-attestor","title":"3. Bridge Attestor","text":"<ul> <li>Signs outbound cross-chain messages for Arda Clear</li> <li>Provides proofs for external bridge validation (ZK, multisig, etc.)</li> </ul>"},{"location":"getting-started/validator-setup/#setup-requirements","title":"Setup Requirements","text":"<ul> <li>Hardware:<ul> <li>4\u20138 vCPUs, 16\u201332 GB RAM, SSD storage</li> <li>Redundant network interface</li> </ul> </li> <li>Hosting:<ul> <li>Regional cloud infra (AWS, Azure) or approved sovereign data center</li> </ul> </li> <li>Software:<ul> <li>Arda Node binary (Rollkit/Cosmos SDK variant)</li> <li>Validator keygen utility</li> <li>Access to compliance module</li> </ul> </li> </ul>"},{"location":"getting-started/validator-setup/#key-management","title":"Key Management","text":"<ul> <li>Validator keys are generated per chain ID</li> <li>Stored securely using:<ul> <li>HSM modules (for government deployments)</li> <li>Encrypted local or cloud KMS</li> </ul> </li> <li>Supports hot or cold key rotation</li> </ul>"},{"location":"getting-started/validator-setup/#lifecycle-operations","title":"Lifecycle Operations","text":"<ul> <li>Join validator set via governance or allowlist</li> <li>Run observability and heartbeats</li> <li>Rotate keys or stake via SDK or CLI</li> <li>Auto-pause if offline or in breach of protocol (via slashing logic)</li> </ul>"},{"location":"getting-started/validator-setup/#developer-notes","title":"Developer Notes","text":"<ul> <li>SDK methods:<ul> <li><code>registerValidator()</code>, <code>rotateKeys()</code>, <code>submitProof()</code></li> </ul> </li> <li>Validators can be assigned compliance zones</li> <li>Alerting via Prometheus or Arda observability plugin</li> </ul>"},{"location":"getting-started/sdk/arda-vault/","title":"Vault","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"getting-started/sdk/arda-vault/#arda-vault","title":"Arda Vault","text":""},{"location":"getting-started/sdk/arda-vault/#overview","title":"Overview","text":"<p>Arda Vault is the privacy-preserving data layer for sensitive legal, financial, and identity-related documents and metadata. It ensures compliance with data residency laws, preserves confidentiality, and enables cryptographic verification of off-chain documents tied to on-chain state.</p> <p>Arda Vault is foundational for asset legitimacy, compliance, auditability, and regulator access.</p>"},{"location":"getting-started/sdk/arda-vault/#core-capabilities","title":"Core Capabilities","text":""},{"location":"getting-started/sdk/arda-vault/#1-secure-document-storage","title":"1. Secure Document Storage","text":"<ul> <li>Documents stored off-chain with hash anchoring on-chain.</li> <li>Storage backends may include:<ul> <li>Encrypted cloud storage (jurisdictional)</li> <li>Distributed storage (IPFS/Filecoin)</li> <li>Government/private APIs</li> </ul> </li> </ul>"},{"location":"getting-started/sdk/arda-vault/#2-encryption-and-access-control","title":"2. Encryption and Access Control","text":"<ul> <li>Uses:<ul> <li>Fully Homomorphic Encryption (FHE)</li> <li>Multi-Party Computation (MPC)</li> <li>Attribute-Based Encryption (ABE)</li> </ul> </li> <li>Access scoped by:<ul> <li>Role (auditor, investor, agent)</li> <li>Jurisdiction</li> <li>Time window or event</li> </ul> </li> </ul>"},{"location":"getting-started/sdk/arda-vault/#3-document-types-supported","title":"3. Document Types Supported","text":"<ul> <li>Title deeds, shareholder agreements, ID/KYC docs</li> <li>Valuation reports, inspection certificates</li> <li>Legal filings, tax forms</li> <li>Structuring memos, regulatory filings</li> </ul>"},{"location":"getting-started/sdk/arda-vault/#4-vault-anchors","title":"4. Vault Anchors","text":"<ul> <li>Every entry includes:<ul> <li>Hash (SHA-256 or Poseidon for ZK use)</li> <li>Document type</li> <li>Jurisdictional tag</li> <li>Expiry or version number</li> <li>Optional tags or doc linkage</li> </ul> </li> </ul>"},{"location":"getting-started/sdk/arda-vault/#compliance-applications","title":"Compliance Applications","text":"<ul> <li>KYC documents stored with attestation link to Wallet Group</li> <li>Real estate registry anchors linked to AssetTokens</li> <li>Automated expiry enforcement via EventHook</li> <li>Notary signatures or government validation may be hashed into Vault entries</li> </ul>"},{"location":"getting-started/sdk/arda-vault/#query-and-compute","title":"Query and Compute","text":"<ul> <li>MPC or FHE allows:<ul> <li>\"Yes/No\" compliance proofs without revealing data</li> <li>Statistical summaries (e.g. investor demographics)</li> <li>Verification of document state without decrypting content</li> </ul> </li> </ul>"},{"location":"getting-started/sdk/arda-vault/#developer-notes","title":"Developer Notes","text":"<ul> <li>Vault API includes:<ul> <li><code>registerDoc()</code>, <code>getHash()</code>, <code>verifyAccess()</code></li> </ul> </li> <li>Access granted via key attestations or agent permissions</li> <li>Frontends can reference Vault docs by hash ID, not content</li> </ul>"},{"location":"getting-started/sdk/cross-chain/","title":"Cross-Chain Infra","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"getting-started/sdk/cross-chain/#cross-chain-interoperability","title":"Cross-Chain Interoperability","text":"<p>Arda's cross-chain architecture enables secure interoperability between sovereign ArdaOS chains, Arda Core, and external blockchains. It ensures that assets, users, and rights can move across jurisdictions without fragmenting compliance, state, or governance.</p> <p>Arda achieves this via a layered bridging and message-passing infrastructure anchored in Arda Clear.</p>"},{"location":"getting-started/sdk/cross-chain/#key-interaction-models","title":"Key Interaction Models","text":""},{"location":"getting-started/sdk/cross-chain/#1-ardaos-ardaos","title":"1. ArdaOS \u2194 ArdaOS","text":"<ul> <li>Message passing via:<ul> <li>Validator signatures</li> <li>zkBridge (ZK light client)</li> <li>TEE-based notarization</li> </ul> </li> <li>Used for:<ul> <li>Asset transfer across regions</li> <li>Compliance rule propagation</li> <li>Liquidity migration</li> </ul> </li> </ul>"},{"location":"getting-started/sdk/cross-chain/#2-ardaos-arda-core","title":"2. ArdaOS \u2194 Arda Core","text":"<ul> <li>Trusted coordination layer with global registry and event syncing</li> <li>Used for:<ul> <li>Wallet and entity mapping</li> <li>Jurisdiction rule synchronization</li> <li>Token indexing</li> </ul> </li> </ul>"},{"location":"getting-started/sdk/cross-chain/#3-arda-external-blockchains","title":"3. Arda \u2194 External Blockchains","text":"<ul> <li>Supported via:<ul> <li>ERC-20 / ERC-721 wrappers</li> <li>Cosmos IBC-compatible relays</li> <li>Hyperlane / LayerZero plug-ins</li> </ul> </li> <li>Allows tokens and messages to move to EVMs, rollups, and Cosmos zones</li> </ul>"},{"location":"getting-started/sdk/cross-chain/#arda-clear-bridge-layer","title":"Arda Clear Bridge Layer","text":"<p>Arda Clear includes:</p> <ul> <li>SettlementQueue for managing pending finality</li> <li>Validator attestation registry for outbound messages</li> <li>Wrapped token registry for mirrored representations</li> <li>Fee handler for cross-chain gas abstraction</li> </ul>"},{"location":"getting-started/sdk/cross-chain/#compliance-enforcement","title":"Compliance Enforcement","text":"<ul> <li>Transfers are only finalized if:<ul> <li>TransferRules pass on both sides</li> <li>KYC and jurisdiction alignment is validated</li> <li>Wrapped token metadata matches asset origin</li> </ul> </li> </ul>"},{"location":"getting-started/sdk/cross-chain/#interop-security-design","title":"Interop Security Design","text":"<ul> <li> <p>All bridge messages are:</p> <ul> <li>Signed by quorum of regional validators</li> <li>Optionally proven via ZK light client</li> <li>Anchored to Arda AuditLog</li> </ul> </li> <li> <p>Messages can be:</p> <ul> <li>Immediate</li> <li>Buffered (e.g. 24h delay)</li> <li>Escrowed pending external confirmation (e.g. fiat or legal filing)</li> </ul> </li> </ul>"},{"location":"getting-started/sdk/cross-chain/#developer-notes","title":"Developer Notes","text":"<ul> <li>SDK includes:<ul> <li><code>wrapToken()</code>, <code>transferToRegion()</code>, <code>queryBridgeProof()</code></li> </ul> </li> <li>Bridged assets maintain link to Vault and SPV for traceability</li> <li>Chain state synchronization monitored via Arda Core indexers</li> </ul>"},{"location":"getting-started/sdk/governance/","title":"Governance","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"getting-started/sdk/governance/#governance","title":"Governance","text":""},{"location":"getting-started/sdk/governance/#overview","title":"Overview","text":"<p>Arda Governance enables decentralized, structured decision-making across the Arda ecosystem. It governs protocol upgrades, taxonomy changes, jurisdictional policy updates, and ecosystem funding allocations. Governance is enforced both on-chain and via cryptographic attestations.</p> <p>It is designed for flexibility across sovereign regions, while retaining coherent global coordination.</p>"},{"location":"getting-started/sdk/governance/#core-components","title":"Core Components","text":""},{"location":"getting-started/sdk/governance/#1-arda-improvement-proposals-aips","title":"1. Arda Improvement Proposals (AIPs)","text":"<ul> <li>Proposal format for:<ul> <li>Taxonomy extensions</li> <li>Token model upgrades</li> <li>Compliance rule changes</li> <li>Infrastructure or treasury proposals</li> </ul> </li> <li>Includes rationale, impact, region scope, and executable logic</li> </ul>"},{"location":"getting-started/sdk/governance/#2-governance-registry","title":"2. Governance Registry","text":"<ul> <li>Tracks:<ul> <li>Active proposals</li> <li>Region, scope, and eligibility</li> <li>Vote results and execution status</li> </ul> </li> </ul>"},{"location":"getting-started/sdk/governance/#3-voting-engine","title":"3. Voting Engine","text":"<ul> <li>Modular architecture:<ul> <li>Token-weighted (e.g. VOTE, GOV)</li> <li>Role-weighted (e.g. regional validator veto)</li> <li>Reputation-weighted (future roadmap)</li> </ul> </li> <li>Supports quadratic or delegated voting</li> </ul>"},{"location":"getting-started/sdk/governance/#4-execution-engine","title":"4. Execution Engine","text":"<ul> <li>Executes approved AIPs on:<ul> <li>Token config</li> <li>Transfer rules</li> <li>Fee sinks</li> <li>Vault permission schemas</li> </ul> </li> </ul>"},{"location":"getting-started/sdk/governance/#5-governance-token-model","title":"5. Governance Token Model","text":"<ul> <li>Optional native governance token: <code>GOV</code></li> <li>Utility:<ul> <li>Proposal rights</li> <li>Voting power</li> <li>Slashing for malicious behavior</li> </ul> </li> <li>Earned via contribution, staking, and reputation</li> </ul>"},{"location":"getting-started/sdk/governance/#regional-autonomy","title":"Regional Autonomy","text":"<ul> <li>Jurisdictions may define:<ul> <li>Local policies</li> <li>Whitelisted assets</li> <li>Custom voting quorums or emergency controls</li> </ul> </li> <li>All local policies must be interoperable with Arda Core</li> </ul>"},{"location":"getting-started/sdk/governance/#role-and-identity-controls","title":"Role and Identity Controls","text":"<ul> <li>Voting and proposals gated by:<ul> <li>Entity registration</li> <li>KYC Tier</li> <li>Stake or delegated role (e.g. auditor, notary)</li> </ul> </li> <li>Agent proposals allowed if agent is staked + attributed</li> </ul>"},{"location":"getting-started/sdk/governance/#developer-notes","title":"Developer Notes","text":"<ul> <li>SDK methods:<ul> <li><code>submitAIP()</code>, <code>vote()</code>, <code>executeProposal()</code>, <code>queryPolicy()</code></li> </ul> </li> <li>Governance execution is auditable and logged to Arda AuditLog</li> <li>Proposal templates are available for standard policy types</li> </ul>"},{"location":"getting-started/sdk/sdk/","title":"SDK","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"getting-started/sdk/sdk/#arda-sdk","title":"Arda SDK","text":""},{"location":"getting-started/sdk/sdk/#overview","title":"Overview","text":"<p>The Arda SDK provides a developer-facing interface to interact with the Arda protocol stack. It abstracts core functionality across sovereign chains, the Arda Core coordination layer, compliance enforcement, token lifecycles, and agentic logic.</p> <p>It is the primary toolkit for building applications, integrations, agents, and dashboards on Arda.</p>"},{"location":"getting-started/sdk/sdk/#key-modules","title":"Key Modules","text":""},{"location":"getting-started/sdk/sdk/#1-identity-access","title":"1. Identity &amp; Access","text":"<ul> <li>Methods:<ul> <li><code>registerEntity()</code>, <code>verifyKYC()</code>, <code>linkWalletGroup()</code></li> </ul> </li> <li>Used to onboard users, investors, originators, and regulators</li> </ul>"},{"location":"getting-started/sdk/sdk/#2-token-operations","title":"2. Token Operations","text":"<ul> <li>Methods:<ul> <li><code>createAssetToken()</code>, <code>mintDebtToken()</code>, <code>splitTrancheToken()</code></li> <li><code>transferWithComplianceCheck()</code>, <code>burnToken()</code></li> </ul> </li> <li>Tokens scoped to region, asset type, compliance class</li> </ul>"},{"location":"getting-started/sdk/sdk/#3-facility-capital-logic","title":"3. Facility &amp; Capital Logic","text":"<ul> <li>Methods:<ul> <li><code>createFacility()</code>, <code>drawdown()</code>, <code>repay()</code></li> <li><code>registerWaterfall()</code>, <code>distributeYield()</code></li> </ul> </li> </ul>"},{"location":"getting-started/sdk/sdk/#4-vault-integration","title":"4. Vault Integration","text":"<ul> <li>Methods:<ul> <li><code>registerDoc()</code>, <code>linkToToken()</code>, <code>verifyAccess()</code></li> </ul> </li> </ul>"},{"location":"getting-started/sdk/sdk/#5-compliance","title":"5. Compliance","text":"<ul> <li>Methods:<ul> <li><code>simulateTransfer()</code>, <code>checkTransferRule()</code>, <code>getJurisdictionProfile()</code></li> </ul> </li> </ul>"},{"location":"getting-started/sdk/sdk/#6-agent-framework","title":"6. Agent Framework","text":"<ul> <li>Methods:<ul> <li><code>registerAgent()</code>, <code>publishTemplate()</code>, <code>triggerEventHook()</code></li> <li>Agent roles include Connect, Risk, Structuring, Monitoring</li> </ul> </li> </ul>"},{"location":"getting-started/sdk/sdk/#7-settlement-treasury","title":"7. Settlement &amp; Treasury","text":"<ul> <li>Methods:<ul> <li><code>enqueueSettlement()</code>, <code>settleBatch()</code>, <code>createSweepInstruction()</code></li> </ul> </li> </ul>"},{"location":"getting-started/sdk/sdk/#8-governance","title":"8. Governance","text":"<ul> <li>Methods:<ul> <li><code>submitAIP()</code>, <code>castVote()</code>, <code>queryPolicy()</code></li> </ul> </li> </ul>"},{"location":"getting-started/sdk/sdk/#chain-abstraction-layer","title":"Chain Abstraction Layer","text":"<ul> <li>The SDK handles routing and message encoding across:<ul> <li>ArdaOS regional chains (via RPC or message bus)</li> <li>Arda Core coordination logic</li> <li>External chains via Arda Clear bridge adapters</li> </ul> </li> </ul>"},{"location":"getting-started/sdk/sdk/#permissions-role-control","title":"Permissions &amp; Role Control","text":"<ul> <li>SDK actions restricted by:<ul> <li>WalletGroup affiliation</li> <li>KYC tier</li> <li>Jurisdiction and role scope</li> </ul> </li> <li>Session tokens, agent keys, and signature wrapping are supported</li> </ul>"},{"location":"getting-started/sdk/sdk/#example-usage","title":"Example Usage","text":"<pre><code>const investor = await sdk.registerEntity(\"Investor\", KYC_TIER_2)\nconst token = await sdk.createAssetToken(propertyMetadata)\nawait sdk.transferWithComplianceCheck(token.id, investor.wallet, 100)\n</code></pre>"},{"location":"introduction/architecture-overview/","title":"Architecture Overview","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"introduction/architecture-overview/#arda-architecture-overview","title":"Arda Architecture Overview","text":"<p>Arda's architecture is a vertically integrated, modular system for enabling real-world assets to be tokenized, traded, financed, and governed across jurisdictions. It is organized across 4 primary layers, each serving a specific role in delivering trust, compliance, and composability in private markets.</p>"},{"location":"introduction/architecture-overview/#architecture-layers","title":"Architecture Layers","text":""},{"location":"introduction/architecture-overview/#ardaos","title":"ArdaOS","text":"<p>Regional execution environments tailored to sovereign compliance, privacy, and legal constraints.</p> <ul> <li>Defines Arda's primitives: tokens (Asset, Money, Debt, Yield), identity (Entities, KYC), compliance rules, and lifecycle logic (Drawdown, Settlement).</li> <li>Encoded in a deterministic, no-VM logic format for auditability and control.</li> <li>Regionally deployed sovereign rollups or chains.</li> <li>Enforce local compliance, residency, and performance requirements.</li> <li>Tailored to government and institutional needs (e.g. Dubai, NY, Singapore).</li> </ul>"},{"location":"introduction/architecture-overview/#arda-core","title":"Arda Core","text":"<p>The foundational infrastructure supporting the Arda ecosystem.</p> <ul> <li>Shared services layer across sovereign chains.</li> <li>Responsible for identity registry, compliance rule sets, governance, liquidity routing, and global semantics (e.g. rights classification).</li> <li>Includes the Arda Vault (privacy-preserving data layer) and Arda Clear (settlement engine).</li> </ul>"},{"location":"introduction/architecture-overview/#semantic-intelligence-layer","title":"Semantic Intelligence Layer","text":"<p>A standardized data model that turns fragmented deal data into machine-readable intelligence.</p> <ul> <li>Modular software agents (e.g. Risk Agent, Monitoring Agent, Structuring Agent) automate workflows.</li> <li>Agents perform underwriting, flagging, benchmarking, investment memo generation, and deal monitoring.</li> <li>Semantic data model standardizes how assets, deals, and rights are represented.</li> <li>Supports real-time analytics, AI augmentation, and structured reporting.</li> <li>Powers the Intelligence Protocol and programmable filters for capital matching.</li> </ul>"},{"location":"introduction/architecture-overview/#application-layer","title":"Application Layer","text":"<p>Capital formation, trading, asset management, marketplace tools.</p> <ul> <li>Composed of products like:<ul> <li>Arda Capital: lending, issuance, capital formation</li> <li>Arda Trading: secondary markets, RFQs, exchanges</li> </ul> </li> <li>Exposed via SDKs and platform APIs.</li> </ul>"},{"location":"introduction/architecture-overview/#diagram","title":"Diagram","text":"<pre><code>[ Application Layer: Capital | Trading ]\n        \u2191\n[ Semantic Data &amp; Intelligence Layer ]\n      \u2191\n[ Arda Core ]\n    \u2191\n[ ArdaOS ]\n</code></pre>"},{"location":"introduction/design-principles/","title":"Design Principles","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"introduction/design-principles/#arda-design-principles","title":"Arda Design Principles","text":"<p>Arda is architected from first principles to serve as a compliant, programmable, and modular operating system for private capital markets and real-world assets. These guiding principles inform every design decision across protocol, infrastructure, and ecosystem layers.</p>"},{"location":"introduction/design-principles/#regional-global-execution-separation","title":"Regional &amp; Global Execution Separation","text":"<p>One of the reasons private markets are so fragmented is because every jurisdiction has different regulatory requirements. This means that execution needs to happen regionally.</p>"},{"location":"introduction/design-principles/#sovereign-interoperable-chains","title":"Sovereign, Interoperable Chains","text":"<ul> <li>Principle: Global liquidity and local compliance are not mutually exclusive.</li> <li>Implementation: Regional chains (ArdaOS) comply with local regulations, while Arda Core coordinates identity, registry, and liquidity routing globally.</li> <li>This allows Arda to scale across jurisdictions without compromising legal enforceability.</li> </ul>"},{"location":"introduction/design-principles/#on-chain-vs-off-chain","title":"On-Chain vs Off-Chain","text":"<p>Private markets deal with a lot of sensitive financial data. This requires a careful balance of on-chain versus off-chain transaction and data handling to provide both transparency and privacy.</p>"},{"location":"introduction/design-principles/#privacy-security-compliance","title":"Privacy, Security, Compliance","text":"<p>Privacy, security, and compliance are core design principles for Arda to ensure that the right solution is built day one, and is not a future promise.</p>"},{"location":"introduction/design-principles/#compliance-by-design","title":"Compliance by Design","text":"<ul> <li>Compliance is embedded into the protocol\u2014not bolted on.</li> <li>Every transaction, transfer, and agent interaction respects KYC/AML, sanctions, tax rules, and jurisdictional restrictions.</li> <li>Enforcement logic is deterministic and tamper-proof.</li> </ul>"},{"location":"introduction/design-principles/#deterministic-execution-with-institutional-guarantees","title":"Deterministic Execution with Institutional Guarantees","text":"<ul> <li>Arda avoids unpredictable smart contract execution by embedding deterministic rules into the protocol.</li> <li>Legal structures (SPVs, mandates) and financial logic (drawdowns, tranching) are modeled as verifiable state transitions.</li> <li>All state is auditable, permissioned, and jurisdiction-aware.</li> </ul>"},{"location":"introduction/design-principles/#best-in-class-tooling","title":"Best-in-class tooling","text":"<p>Arda is committed to providing best-in-class tooling for application developers and ecosystem projects.</p>"},{"location":"introduction/design-principles/#ecosystem-interoperability","title":"Ecosystem Interoperability","text":"<ul> <li>Arda is designed to interoperate with traditional systems (land registries, banks, custodians) and emerging ones (zkRollups, Cosmos IBC, L2 bridges).</li> <li>Support for ISO, SWIFT, ISIN, and global financial standards ensures institutional readiness.</li> <li>Cross-chain liquidity and composability are achieved through Arda Clear.</li> </ul>"},{"location":"introduction/design-principles/#ecosystem-value-accrual","title":"Ecosystem Value Accrual","text":"<p>Arda is designed to incentivize and reward all ecosystem participants\u2014from data providers to application developers to users.</p>"},{"location":"introduction/design-principles/#data-driven-and-agent-native","title":"Data-Driven and Agent-Native","text":"<ul> <li>Data is treated as a first-class asset.</li> <li>All assets, actors, and events are mapped to a shared semantic model enabling analytics, risk evaluation, and AI-native workflows.</li> <li>Agentic coordination is used to automate structuring, diligence, and monitoring of capital flows.</li> </ul>"},{"location":"introduction/design-principles/#stakeholder-flexibility","title":"Stakeholder Flexibility","text":"<p>Variety of node types and mediums of integration to enable read, write, or read and write functionality into Arda depending on stakeholder (e.g. regulator).</p>"},{"location":"introduction/design-principles/#modular-and-extensible","title":"Modular and Extensible","text":"<ul> <li>Arda is a vertically integrated stack, but each layer is modular and independently upgradeable.</li> <li>From SDKs and agent logic to on-chain governance and asset tokenization standards, developers can plug into the protocol with minimal friction.</li> </ul>"},{"location":"introduction/design-principles/#developer-takeaways","title":"Developer Takeaways","text":"<ul> <li>No global VM: Execution occurs locally with minimal trusted coordination.</li> <li>Agents are first-class: Workflows and deal logic can be modeled using programmable agent modules.</li> <li>Vertical but open: Full-stack product architecture, but extensible via SDKs, APIs, and permissioned modules.</li> </ul>"},{"location":"introduction/tokenomics/","title":"Tokenomics","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"introduction/tokenomics/#tokenomics","title":"Tokenomics","text":"<p>Arda\u2019s programmable capital platform is underpinned by a dual-token model and a compliance-first token factory architecture. This page outlines the foundational token types in the Arda ecosystem, their roles, and future expansion plans.</p>"},{"location":"introduction/tokenomics/#core-tokens","title":"Core Tokens","text":""},{"location":"introduction/tokenomics/#arda-native-protocol-token","title":"ARDA (Native Protocol Token)","text":"<p>The ARDA token is the native coin of the Arda network and serves as the foundational economic and governance instrument.</p> <p>Functions:</p> <ul> <li>Pay protocol-level transaction and service fees</li> <li>Stake for protocol governance and network security</li> <li>Participate in governance decisions (protocol upgrades, treasury allocation)</li> <li>Earn rewards via staking and protocol contributions</li> </ul> <p>Supply:</p> <ul> <li>1,000,000,000 ARDA</li> <li>100% of ARDA supply is minted at genesis</li> <li>Unlock and distribution schedule TBD</li> </ul> <p>Example Mechanics:</p> <ul> <li>Portion of protocol fees are sent to an on chain insurance fund that can buy ARDA back from the market. This fund could be used to seed new ArdaOS regions.</li> </ul>"},{"location":"introduction/tokenomics/#arda-stablecoin-region-specific","title":"Arda Stablecoin (Region-Specific)","text":"<p>Arda chains may issue a compliant, fiat-backed or regulated stablecoin that reflects local currency value (e.g., ArdaUSD, ArdaAED).</p> <p>Functions:</p> <ul> <li>Serve as the unit of account for real estate and capital transactions</li> <li>Enable compliance-first settlement with integrated KYC/AML enforcement</li> <li>Plug into escrow, waterfall, and loan repayment modules</li> </ul>"},{"location":"introduction/tokenomics/#token-factory","title":"Token Factory","text":"<p>The Arda Token Factory module enables compliant issuance of custom, on-chain financial representations. These tokens are modular and programmable, supporting transfer restrictions, vesting logic, and lifecycle automation.</p>"},{"location":"introduction/tokenomics/#categories-of-factory-issued-tokens","title":"Categories of Factory-Issued Tokens","text":""},{"location":"introduction/tokenomics/#ownership-tokens","title":"Ownership Tokens","text":"<ul> <li>Represent direct or fractional ownership of real-world properties or entities (e.g., SPVs)</li> <li>Linked to legal wrappers (e.g., Delaware LLCs, Dubai SPVs)</li> <li>Subject to jurisdictional transfer restrictions</li> </ul>"},{"location":"introduction/tokenomics/#representative-tokens","title":"Representative Tokens","text":"<ul> <li>Mirror the ownership tokens but are optimized for trading or use as collateral</li> <li>Can be wrapped or reissued versions of core asset tokens</li> <li>Useful in liquidity pools, cross-chain transfer, or synthetic index creation</li> </ul>"},{"location":"introduction/tokenomics/#loan-tokens","title":"Loan Tokens","text":"<ul> <li>Represent on-chain obligations like mortgages, bridge loans, or structured notes</li> <li>Contain payment schedule metadata, interest terms, and amortization logic</li> <li>Traded or syndicated via Arda\u2019s programmable capital markets</li> </ul>"},{"location":"introduction/tokenomics/#equity-tokens","title":"Equity Tokens","text":"<ul> <li>Track the residual or preferred value of an underlying asset (e.g., mezzanine tranches)</li> <li>Integrate with Waterfall distribution contracts</li> <li>Potentially tied to governance rights or dividend flows</li> </ul>"},{"location":"introduction/tokenomics/#governance-incentives","title":"Governance &amp; Incentives","text":"<p>Arda\u2019s governance structure enables token-weighted participation, reputation gating, and compliance-enforced roles.</p> <p>Mechanisms:</p> <ul> <li>On-chain DAO voting via ARDA token</li> <li>Reputation boosts for verified contributors (agents, data providers, liquidity suppliers)</li> <li>Treasury incentives for onboarding strategic assets or participants</li> </ul> <p>Incentive Recipients:</p> <ul> <li>Agents (structuring, risk, monitoring)</li> <li>Originators and asset onboarders</li> <li>Data providers and oracle publishers</li> <li>Investors staking capital into programmable pools</li> </ul>"},{"location":"introduction/tokenomics/#general-lifecycle-flow","title":"General Lifecycle Flow","text":"<p>Typical lifecycle phases (varies by object):</p> <ol> <li>Initialized \u2013 Object created (SPV, Facility, AssetToken, DebtToken)</li> <li>Activated \u2013 Meets minimum compliance/config requirements</li> <li>Issuance / Drawdown \u2013 Capital deployed or token minted</li> <li>Active \u2013 Ongoing financial and/or compliance state</li> <li>Repayment / Exit \u2013 Principal or equity returned</li> <li>Closed / Finalized \u2013 Object settled, closed, or burned</li> </ol>"},{"location":"introduction/tokenomics/#lifecycle-objects","title":"Lifecycle Objects","text":""},{"location":"introduction/tokenomics/#1-facilitystatus","title":"1. FacilityStatus","text":"<p>Tracks the current stage of a financing or issuance process.</p> <ul> <li>Phases: <code>Draft</code>, <code>Open</code>, <code>Subscribed</code>, <code>Funded</code>, <code>In Repayment</code>, <code>Closed</code></li> <li>Used for: debt issuances, equity raises, structured pools</li> </ul>"},{"location":"introduction/tokenomics/#2-drawdown","title":"2. Drawdown","text":"<p>Represents capital released from a facility.</p> <ul> <li>Triggered by: investor subscription, milestone completion, disbursement logic</li> <li>May create or mint a DebtToken</li> <li>Includes: timestamp, amount, purpose, oracle snapshot</li> </ul>"},{"location":"introduction/tokenomics/#3-interestaccrual","title":"3. InterestAccrual","text":"<p>Defines how interest is accumulated.</p> <ul> <li>Types: fixed, floating, step-up, hybrid</li> <li>Frequency: daily, monthly, annual</li> <li>Integrated with fee and yield flows</li> </ul>"},{"location":"introduction/tokenomics/#4-repay-burn-events","title":"4. Repay / Burn Events","text":"<ul> <li>Tracks repayment or voluntary cancellation of debt or assets</li> <li>Tokens are updated or burned to reflect reduction in obligation</li> </ul>"},{"location":"introduction/tokenomics/#5-paymentschedule","title":"5. PaymentSchedule","text":"<p>Defines planned disbursement and repayment dates</p> <ul> <li>Example: construction loan may include 6 milestone-linked disbursements, then quarterly interest</li> <li>Can include grace periods, prepayment windows, and penalties</li> </ul>"},{"location":"introduction/tokenomics/#6-eventhook","title":"6. EventHook","text":"<p>Automated trigger for lifecycle transitions</p> <ul> <li>Can be time-based, oracle-based, or dependent on compliance state</li> <li>Examples:<ul> <li>Convert a development right token to an ownership token upon milestone completion</li> <li>Auto-freeze transfers if tax documentation expires</li> </ul> </li> </ul>"},{"location":"introduction/tokenomics/#future-token-concepts","title":"Future Token Concepts","text":"<ul> <li>Yield Tokens: Stream future cashflows from property rent, escrow interest, or waterfall tranches.</li> <li>Tranche Tokens: Represent senior/mezz/junior risk profiles in syndicated loans or real estate projects.</li> <li>Permissioned Pool Shares: Tokenized shares in capital pools gated by investor KYC tier and strategy mandate.</li> </ul>"},{"location":"introduction/tokenomics/#compliance-by-design","title":"Compliance by Design","text":"<p>All tokens issued in Arda adhere to a \u201ccompliance-by-default\u201d design:</p> <ul> <li>Whitelist-based transfer enforcement</li> <li>Region-aware permissioning logic</li> <li>Lifecycle event logging for audit and transparency</li> <li>Optional zk-based attestations for private transfer proofs</li> <li>All lifecycle transitions are gated by <code>TransferRule</code>, <code>JurisdictionProfile</code>, or <code>KYC Tier</code>.</li> <li>Lifecycle logs are added to <code>AuditLog</code> for traceability.</li> <li>Status transitions can only be triggered if permissions, risk, and documentation requirements are satisfied.</li> </ul>"},{"location":"introduction/tokenomics/#reusability-and-composition","title":"Reusability and Composition","text":"<ul> <li>Multiple lifecycle objects can be linked:<ul> <li>One PaymentSchedule may cover several TrancheTokens</li> <li>One EventHook may update both FacilityStatus and FeeEngine</li> </ul> </li> <li>Lifecycle definitions can be cloned and reused across deal templates (via SDK)</li> </ul>"},{"location":"introduction/tokenomics/#summary","title":"Summary","text":"<p>Arda\u2019s token architecture is modular, jurisdiction-aware, and future-proof. The native ARDA token and stablecoin form the backbone of protocol activity and compliance-enabled settlement. Around them, the Token Factory supports programmable real-world finance across ownership, credit, and liquidity domains.</p>"},{"location":"resources/bridges/","title":"Bridges","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"resources/bridges/#bridges","title":"Bridges","text":""},{"location":"resources/bridges/#overview","title":"Overview","text":"<p>Bridges are the infrastructure Arda uses to transfer assets, identities, and proofs across chains \u2014 both between sovereign ArdaOS regions and to/from external ecosystems like Ethereum, Celestia, or Hyperlane. Bridges preserve compliance guarantees and execution integrity while facilitating liquidity and interoperability.</p> <p>Each bridge protocol integrates with the Arda Core Interop module and supports programmable compliance enforcement.</p>"},{"location":"resources/bridges/#supported-bridge-types","title":"Supported Bridge Types","text":"Bridge Description Celestia IPC ZK-enhanced light client-based interop for ArdaOS sovereign chains Hyperlane General-purpose messaging protocol with modular security models Native Arda Bridge Specialized channel between ArdaOS chains with KYC-aware flow Oracle Bridge Institutional validator or attestor-based fallback for lower-speed sync"},{"location":"resources/bridges/#key-properties","title":"Key Properties","text":"Property Description Finality Model BFT, ZK, or multisig-confirmed based on bridge type Compliance Hooks KYC Tier, JurisdictionProfile, TransferRules applied per instruction Settlement Engine All bridge actions finalize via Arda Clear Metadata Anchoring Vault-based hashes ensure token and attestation consistency Retry / Rollback Fallback logic enabled in Oracle and Native modes"},{"location":"resources/bridges/#message-lifecycle","title":"Message Lifecycle","text":"<pre><code>sequenceDiagram\n    participant A as Arda UAE\n    participant B as Bridge Layer\n    participant C as Arda Core\n    participant D as Arda US\n\n    A-&gt;&gt;B: Bridge Message + Proof\n    B-&gt;&gt;C: Validate + Route\n    C-&gt;&gt;D: Compliance + Finalization\n</code></pre>"},{"location":"resources/bridges/#use-cases","title":"Use Cases","text":"<ul> <li>Cross-jurisdiction token transfers</li> <li>Investor migration across regional liquidity pools</li> <li>RFQ clearing with cross-chain participants</li> <li>Real estate asset bridging for global investor access</li> </ul>"},{"location":"resources/bridges/#integration-points","title":"Integration Points","text":"<ul> <li>Interop Module \u2014 Dispatches and receives bridge messages</li> <li>Vault \u2014 Anchors metadata and bridge contract details</li> <li>Clear \u2014 Executes final asset movements</li> <li>Compliance Engine \u2014 Blocks unauthorized cross-chain events</li> </ul>"},{"location":"resources/erc20-wrapping/","title":"ERC20 Wrapping","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"resources/erc20-wrapping/#erc-20-wrapping-and-token-compatibility","title":"ERC-20 Wrapping and Token Compatibility","text":""},{"location":"resources/erc20-wrapping/#overview","title":"Overview","text":"<p>To ensure composability with the broader DeFi ecosystem, Arda supports wrapping its native token types (e.g. AssetToken, DebtToken, TrancheToken) into ERC-20-compatible formats. This allows tokens issued on ArdaOS chains to be traded, staked, or used in applications on EVM-compatible chains like Ethereum, Arbitrum, or Base.</p> <p>Wrapping is permissioned and governed by the Compliance Engine to ensure only authorized users can wrap and unwrap tokens for use externally.</p>"},{"location":"resources/erc20-wrapping/#supported-token-types","title":"Supported Token Types","text":"Arda Token Wrapped ERC-20 Use Case AssetToken WrappedAssetToken Secondary trading on Ethereum DebtToken WrappedDebtToken Collateral in DeFi or fixed-income products TrancheToken WrappedTrancheToken Risk-layered investment vehicles YieldToken WrappedYieldToken Streaming yield protocols or vaults"},{"location":"resources/erc20-wrapping/#wrapping-flow","title":"Wrapping Flow","text":"<pre><code>sequenceDiagram\n    participant A as Arda Wallet\n    participant B as Bridge Contract\n    participant C as EVM Wrapper\n    participant D as External Wallet\n\n    A-&gt;&gt;B: Lock Token (e.g. AssetToken)\n    B-&gt;&gt;C: Mint Wrapped ERC-20\n    C-&gt;&gt;D: Transfer to user on Ethereum\n</code></pre> <p>Unwrapping reverses the flow: tokens are burned on the EVM side and unlocked in Arda.</p>"},{"location":"resources/erc20-wrapping/#compliance-enforcement","title":"Compliance Enforcement","text":"<ul> <li>KYC Tier Check \u2014 Only Tier 2+ users may wrap/unwrap tokens</li> <li>JurisdictionProfile \u2014 Applies export restrictions</li> <li>Wrapped Metadata \u2014 Preserves original token ID, rights, and provenance</li> <li>AuditLog \u2014 Tracks all wrap and unwrap events on-chain</li> </ul>"},{"location":"resources/erc20-wrapping/#metadata-mapping","title":"Metadata Mapping","text":"<p>Each wrapped token preserves metadata from its Arda-native counterpart:</p> <pre><code>{\n  \"wrappedToken\": \"WrappedAssetToken\",\n  \"originalTokenId\": \"AssetToken-004\",\n  \"jurisdiction\": \"SG\",\n  \"kycTier\": 2,\n  \"rights\": [\"ownership\", \"rental_income\"]\n}\n</code></pre>"},{"location":"resources/erc20-wrapping/#use-cases","title":"Use Cases","text":"<ul> <li>Access to DeFi liquidity for tokenized real estate</li> <li>Inclusion in portfolio rebalancing strategies or stablecoin vaults</li> <li>FX hedging via synthetic pairs between Arda and external assets</li> <li>De-risked lending pools using tokenized, wrapped Arda tranches</li> </ul>"},{"location":"resources/erc20-wrapping/#integration","title":"Integration","text":"<ul> <li>Interop / Bridge \u2014 Handles cross-chain locking and minting</li> <li>Clear \u2014 Updates token status and release logs</li> <li>Compliance Engine \u2014 Evaluates wrapping conditions</li> <li>Vault \u2014 Anchors original metadata and token schema</li> </ul>"},{"location":"resources/glossary/","title":"Glossary","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"resources/glossary/#glossary","title":"Glossary","text":""},{"location":"resources/glossary/#overview","title":"Overview","text":"<p>This glossary defines the key concepts, roles, and primitives used throughout the Arda ecosystem. It is intended as a quick-reference index for protocol developers, integrators, and stakeholders.</p>"},{"location":"resources/glossary/#key-terms","title":"Key Terms","text":""},{"location":"resources/glossary/#aip-arda-improvement-proposal","title":"AIP (Arda Improvement Proposal)","text":"<p>Governance proposal format used to upgrade standards, taxonomies, and rules across Arda.</p>"},{"location":"resources/glossary/#agent","title":"Agent","text":"<p>A programmable protocol actor (e.g. Risk Agent, Connect Agent) that performs automated tasks like matching, monitoring, and structuring.</p>"},{"location":"resources/glossary/#assettoken","title":"AssetToken","text":"<p>Token representing legal or beneficial ownership of a real-world asset (e.g. real estate, infrastructure).</p>"},{"location":"resources/glossary/#auditlog","title":"AuditLog","text":"<p>Immutable on-chain event log for tracking compliance-relevant actions across the protocol.</p>"},{"location":"resources/glossary/#compliance-engine","title":"Compliance Engine","text":"<p>Protocol subsystem enforcing rules around KYC, jurisdiction, TransferRules, and role-permissioning.</p>"},{"location":"resources/glossary/#debttoken","title":"DebtToken","text":"<p>Token representing a borrower's obligation under a facility or credit agreement.</p>"},{"location":"resources/glossary/#drawdown","title":"Drawdown","text":"<p>Capital disbursement from a facility, triggering DebtToken issuance and repayment scheduling.</p>"},{"location":"resources/glossary/#entity","title":"Entity","text":"<p>A verified participant in the protocol (person, company, government, etc.), represented in the identity registry.</p>"},{"location":"resources/glossary/#eventhook","title":"EventHook","text":"<p>Programmable trigger tied to a condition (e.g. milestone reached, date passed, breach occurred).</p>"},{"location":"resources/glossary/#facility","title":"Facility","text":"<p>Structured capital issuance (loan, fund, bond) governed by lifecycle rules and repayment logic.</p>"},{"location":"resources/glossary/#jurisdictionprofile","title":"JurisdictionProfile","text":"<p>Defines rules applicable to a geographic or legal region (e.g. tax handling, KYC level, asset scope).</p>"},{"location":"resources/glossary/#kyc-tier","title":"KYC Tier","text":"<p>Hierarchical level of identity verification assigned to a user or entity, controlling access and permissions.</p>"},{"location":"resources/glossary/#monitoring-agent","title":"Monitoring Agent","text":"<p>Automated role that observes facility behavior and triggers events like covenant breaches or milestone completions.</p>"},{"location":"resources/glossary/#permissionedpool","title":"PermissionedPool","text":"<p>Capital pool constrained by compliance rules, investor criteria, and deal scope.</p>"},{"location":"resources/glossary/#settlementqueue","title":"SettlementQueue","text":"<p>Queue of pending settlement instructions processed by Arda Clear, including cross-chain and fiat operations.</p>"},{"location":"resources/glossary/#spv-special-purpose-vehicle","title":"SPV (Special Purpose Vehicle)","text":"<p>Legal wrapper used to anchor asset ownership or capital formation on-chain.</p>"},{"location":"resources/glossary/#token-models","title":"Token Models","text":"<p>Standardized representations for various financial instruments (AssetToken, DebtToken, TrancheToken, etc.).</p>"},{"location":"resources/glossary/#tranchetoken","title":"TrancheToken","text":"<p>Risk-segmented share in a capital structure, defined by position in the waterfall.</p>"},{"location":"resources/glossary/#vault","title":"Vault","text":"<p>Encrypted, jurisdiction-aware off-chain storage layer used for sensitive documents and attestations.</p>"},{"location":"resources/glossary/#asset-tokenization","title":"Asset Tokenization","text":"<p>A digital representation of an asset, which may be a real-world asset (RWA), a digital asset, or a hybrid instrument. See Core Primitives for more details.</p>"},{"location":"resources/glossary/#wallet","title":"Wallet","text":"<p>A user-facing application for managing digital assets and interacting with the Arda network. See Wallet.</p>"},{"location":"resources/references/","title":"References","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"resources/references/#references","title":"References","text":"<p>Status: Stable Last Updated: 2025-06-23 Authors: Arda Protocol Core Team</p>"},{"location":"resources/references/#overview","title":"\ud83e\udded Overview","text":"<p>This document collects all external and internal references used in the design of the Arda Protocol. These include foundational inspirations, technical standards, governance frameworks, and architectural comparisons.</p>"},{"location":"resources/references/#external-protocol-references","title":"\ud83d\udcda External Protocol References","text":"Protocol Source / Reference Use in Arda Ethereum ethereum.org ERC standards, L2 bridging, wallet infra Cosmos SDK cosmos.network Sovereign chain modularity Rollkit rollkit.dev Rollup infrastructure for ArdaOS Celestia celestia.org Data availability for Arda rollups zkSync / ZK Stack zksync.io zk-enabled rollup design Chainlink chain.link Oracles for real-world data feeds Hyperliquid See research docs Dual-block execution, fast matching Fluid Protocol See research docs Smart collateral and debt routing SWIFT swift.com Messaging compatibility with finance ISO 19152 ISO Standard Land administration domain model OpenZeppelin openzeppelin.com Access control and security components"},{"location":"resources/references/#legal-compliance-frameworks","title":"\ud83e\uddf1 Legal &amp; Compliance Frameworks","text":"<ul> <li>OECD FATF Guidelines \u2013 for KYC/AML tiering</li> <li>UAE Digital Asset Framework \u2013 Dubai Land Department integration</li> <li>US SEC Reg D / Reg S / Reg A+ \u2013 compliance design for security tokens</li> <li>MAS (Singapore) Fintech Sandbox \u2013 for APAC regional deployment</li> <li>GDPR / PDPA \u2013 Data privacy controls in Vault and SDK</li> </ul>"},{"location":"resources/references/#conceptual-inspirations","title":"\ud83e\udde0 Conceptual Inspirations","text":"<ul> <li>\"Smart Legal Contracts\" by ISDA</li> <li>MakerDAO's Collateral Types Framework</li> <li>REIT / CMBS structuring workflows</li> <li>Digital registry models from Estonian e-Gov infrastructure</li> <li>RealT and Centrifuge for RWA tokenization models</li> </ul>"},{"location":"resources/references/#internal-artifacts","title":"\ud83d\udee0\ufe0f Internal Artifacts","text":"<ul> <li>Arda Whitepaper v1.3</li> <li>Arda Product Vision (2025 Q1)</li> <li>Arda SDK Spec (v0.5)</li> <li>Arda Vault ZK/FHE Working Draft</li> <li>Novum Protocol: Agent Primitives &amp; Tokenomics Design</li> </ul>"},{"location":"resources/references/#changelog","title":"\ud83e\udded Changelog","text":"Date Change Author 2025-06-23 Initial Draft Arda Team"},{"location":"resources/stablecoins/","title":"Stablecoins","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"resources/stablecoins/#stablecoins-and-fiat-integration","title":"Stablecoins and Fiat Integration","text":""},{"location":"resources/stablecoins/#overview","title":"Overview","text":"<p>Arda integrates fiat-backed and crypto-native stablecoins to enable on-chain settlement of real estate and capital market transactions. Stablecoins serve as the unit of account for pricing, settlement, and collateralization across all protocol layers.</p> <p>Fiat on/off ramps are regionally configured and integrated into the Arda Wallet, Clear, and Treasury modules with optional escrow and compliance enforcement.</p>"},{"location":"resources/stablecoins/#supported-stablecoins","title":"Supported Stablecoins","text":"Token Type Description USDC Fiat-backed Primary stablecoin for USD-denominated transactions D-Dirham Custodial Region-specific AED stablecoin integrated with local banks EUROe Regulated Euro-pegged stablecoin used in EU-compliant pools USDT DeFi-native Optional, used in legacy integrations ArdaUSD Synthetic Cross-chain Arda-native stable unit (future roadmap)"},{"location":"resources/stablecoins/#fiat-integration","title":"Fiat Integration","text":"<ul> <li>Local banking APIs for custody-backed mint/burn (e.g. DLD in UAE)</li> <li>KYC-gated access to stablecoin issuance or redemption</li> <li>Regulated custody required for region-specific fiat tokens</li> <li>Vault-anchored documentation of reserve attestations</li> </ul>"},{"location":"resources/stablecoins/#stablecoin-use-cases","title":"Stablecoin Use Cases","text":"<ul> <li>Capital Pools: All syndicated lending and tranching priced in stablecoins</li> <li>Settlements: Arda Clear finalizes token transfers in stable denomination</li> <li>Yield Distribution: Income streamed to TrancheToken holders</li> <li>Collateral: Used in hybrid real-world/DeFi loan structures</li> <li>Bridge Liquidity: Used in cross-chain FX routing and paired orderbooks</li> </ul>"},{"location":"resources/stablecoins/#compliance-and-safeguards","title":"Compliance and Safeguards","text":"<ul> <li>TransferRules applied to restrict stablecoin flow</li> <li>JurisdictionProfile configures who may mint/redeem</li> <li>FeeEngine may deduct FX, gas buffer, or protocol toll</li> <li>OracleUpdate supports price tracking and peg validation</li> </ul>"},{"location":"resources/stablecoins/#integration-points","title":"Integration Points","text":"<ul> <li>Clear \u2014 Settlement instructions and escrow holding logic</li> <li>Treasury \u2014 Sweep instructions, idle balance buffering</li> <li>Wallet \u2014 Stablecoin approval and mint/redeem authorization</li> <li>Vault \u2014 Anchors reserve proof and issuer documentation</li> </ul>"},{"location":"resources/stablecoins/#example","title":"Example","text":"<pre><code>{\n  \"token\": \"D-Dirham\",\n  \"issuer\": \"ADCB Custody\",\n  \"region\": \"UAE\",\n  \"kycRequired\": true,\n  \"oracle\": \"Dirham-USD FX Feed\",\n  \"attestationDoc\": \"vault://reserves/d-dirham-q1.pdf\"\n}\n</code></pre>"},{"location":"semantic-intelligence-layer/Agentic_Capital_Infrastructure/","title":"Agentic Capital Infrastructure for Arda","text":""},{"location":"semantic-intelligence-layer/Agentic_Capital_Infrastructure/#executive-summary","title":"Executive Summary","text":"<p>Arda seeks to pioneer an on-chain infrastructure layer that enables AI agents to securely hold, manage, and deploy capital across programmable financial systems. This document outlines an initial architecture for a platform that supports \"Agent-as-a-Service\" capabilities, integrating decentralized identity, programmable permissions, compliance-first execution, and multi-chain operability.</p>"},{"location":"semantic-intelligence-layer/Agentic_Capital_Infrastructure/#goals","title":"Goals","text":"<ul> <li>Enable AI agents to function as economic actors.</li> <li>Support secure custody, transaction automation, and compliance.</li> <li>Provide enterprise-ready tooling for auditing and risk management.</li> <li>Establish Arda as the infrastructure provider for agentic capital.</li> </ul>"},{"location":"semantic-intelligence-layer/Agentic_Capital_Infrastructure/#system-overview","title":"System Overview","text":""},{"location":"semantic-intelligence-layer/Agentic_Capital_Infrastructure/#core-components","title":"Core Components","text":""},{"location":"semantic-intelligence-layer/Agentic_Capital_Infrastructure/#1-agent-identity-wallet","title":"1. Agent Identity &amp; Wallet","text":"<ul> <li>Powered by DIDs (Decentralized Identifiers) or Arda-native <code>Entity</code> + <code>WalletGroup</code></li> <li>Linked to KYC tier, access scopes, and action logs</li> </ul>"},{"location":"semantic-intelligence-layer/Agentic_Capital_Infrastructure/#2-agent-wallet-control-layer","title":"2. Agent Wallet Control Layer","text":"<ul> <li>Permissioning logic defined by <code>TransferRules</code>, <code>SpendingLimits</code>, <code>SpendingTriggers</code></li> <li>Modular triggers for automatic payouts, streaming payments, etc.</li> </ul>"},{"location":"semantic-intelligence-layer/Agentic_Capital_Infrastructure/#3-programmable-safeguards","title":"3. Programmable Safeguards","text":"<ul> <li>Multi-sig wallet enforcement</li> <li>Time-locked funds</li> <li>Whitelisted contract destinations</li> <li>Budget caps per operation</li> </ul>"},{"location":"semantic-intelligence-layer/Agentic_Capital_Infrastructure/#4-auditability-governance-hooks","title":"4. Auditability &amp; Governance Hooks","text":"<ul> <li><code>AuditLog</code> for all agent actions</li> <li><code>EventHooks</code> for state transitions (e.g., balance thresholds, external alerts)</li> <li>Optional approval queues for human oversight</li> </ul>"},{"location":"semantic-intelligence-layer/Agentic_Capital_Infrastructure/#5-cross-chain-bridge-support","title":"5. Cross-Chain Bridge Support","text":"<ul> <li>Enable agents to move stablecoins/assets cross-chain</li> <li>ZK/TEE-based attestation for cross-domain identity and state consistency</li> </ul>"},{"location":"semantic-intelligence-layer/Agentic_Capital_Infrastructure/#6-agent-deployment-framework","title":"6. Agent Deployment Framework","text":"<ul> <li>SDK to instantiate new agents</li> <li>Template libraries for common use cases (e.g. licensing bots, trading bots)</li> </ul>"},{"location":"semantic-intelligence-layer/Agentic_Capital_Infrastructure/#7-risk-scoring-engine","title":"7. Risk Scoring Engine","text":"<ul> <li>Score agents on behavior, longevity, audit cleanliness</li> <li>Used to gate capital access, scale privileges, or revoke custody</li> </ul>"},{"location":"semantic-intelligence-layer/Agentic_Capital_Infrastructure/#sample-use-cases","title":"Sample Use Cases","text":"<ul> <li>Micro-Licensing Agent: Autonomously purchases and resells data/image/API licenses.</li> <li>Debt Syndication Bot: Participates in permissioned <code>OrderBook</code> pools based on mandates.</li> <li>Escrow Coordinator: Mediates milestone-based payouts with dispute hooks.</li> </ul>"},{"location":"semantic-intelligence-layer/Agentic_Capital_Infrastructure/#compliance-architecture","title":"Compliance Architecture","text":"<ul> <li>Each agent must be bound to a <code>JurisdictionProfile</code></li> <li>Transaction flows validated through <code>TransferRules</code></li> <li>All agent actions recorded to <code>AuditLog</code> and optionally mirrored to off-chain storage</li> <li>Optional custody relationship with human or org-level <code>Entity</code></li> </ul>"},{"location":"semantic-intelligence-layer/Agentic_Capital_Infrastructure/#infrastructure-layers","title":"Infrastructure Layers","text":"Layer Description Agent Wallet Multi-key, programmable wallet with embedded permissions Compliance Kernel Real-time rule validation at transaction execution layer Agent Registry Maintains agent metadata, risk scores, linked entities SDK &amp; Templates Client dev tools for agent deployment and interaction Analytics Layer Monitors agent activity, anomalies, and external queries"},{"location":"semantic-intelligence-layer/Agentic_Capital_Infrastructure/#design-principles","title":"Design Principles","text":"<ul> <li>Minimally Trusted: Agents operate with constrained autonomy, bounded by explicit rules.</li> <li>Composable: Each agent behavior is modular\u2014financial primitives (e.g. <code>Drawdown</code>, <code>SpendingLimit</code>) are reused across agents.</li> <li>Auditable: Agent state and history is continuously traceable and externally verifiable.</li> <li>Jurisdictional Aware: Regionality and compliance are first-class design inputs.</li> </ul>"},{"location":"semantic-intelligence-layer/Agentic_Capital_Infrastructure/#milestone-plan","title":"Milestone Plan","text":"<ol> <li>MVP Agent SDK</li> <li>Instantiate DID-linked agent</li> <li>Basic spend rule enforcement</li> <li> <p>Event log generation</p> </li> <li> <p>Custodial &amp; Delegated Agent Modes</p> </li> <li>Shared wallet control</li> <li> <p>Manual override layer for institutions</p> </li> <li> <p>Cross-Chain Execution</p> </li> <li>Bridging stablecoins for multi-domain activity</li> <li> <p>Attestation system for agent reputation transfer</p> </li> <li> <p>Risk &amp; Scoring Framework</p> </li> <li>Score-based privilege scaling</li> <li> <p>Circuit breakers for anomalous behavior</p> </li> <li> <p>Enterprise Integration APIs</p> </li> <li>Exportable logs</li> <li>Integration with legacy workflows for hybrid finance</li> </ol>"},{"location":"semantic-intelligence-layer/Agentic_Capital_Infrastructure/#final-thoughts","title":"Final Thoughts","text":"<p>This is not just AI automation\u2014it\u2019s capital infrastructure for a machine-native economy. Arda is positioned to provide the governance substrate, compliance rails, and programmable primitives that will empower AI agents to transact safely and autonomously. This unlocks entirely new capital deployment mechanisms, liquidity models, and operational efficiencies.</p>"},{"location":"semantic-intelligence-layer/agent-primitives/","title":"Agent Primitives","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"semantic-intelligence-layer/agent-primitives/#agent-primitives","title":"Agent Primitives","text":"<p>Agent primitives are modular, programmable actors within Arda that facilitate structured decision-making and execution for credit, compliance, trading, and monitoring. These agents operate within the protocol, follow deterministic rules or AI-augmented logic, and are permissioned by role and jurisdiction.</p> <p>They can be composed into deal flows, delegated to users or institutions, or used as standalone modules in Arda applications.</p>"},{"location":"semantic-intelligence-layer/agent-primitives/#core-agent-types","title":"Core Agent Types","text":""},{"location":"semantic-intelligence-layer/agent-primitives/#1-connect-agent","title":"1. Connect Agent","text":"<ul> <li>Matches originators with investors based on:<ul> <li>Jurisdiction</li> <li>Risk appetite</li> <li>Facility structure</li> </ul> </li> <li>Scores matches using protocol-native data and mandate filters.</li> </ul>"},{"location":"semantic-intelligence-layer/agent-primitives/#2-risk-agent","title":"2. Risk Agent","text":"<ul> <li>Ingests loan tapes, cohort history, market data.</li> <li>Outputs:<ul> <li>PD, LGD, Sharpe, volatility</li> <li>Tagging schemes</li> <li>Red flags</li> </ul> </li> <li>Used in underwriting, pricing, and surveillance.</li> </ul>"},{"location":"semantic-intelligence-layer/agent-primitives/#3-structuring-agent","title":"3. Structuring Agent","text":"<ul> <li>Models deal structures (waterfalls, tranches, schedules).</li> <li>Parameterizes:<ul> <li>Reserve ratios</li> <li>Tranche sizes</li> <li>Coupon terms</li> </ul> </li> <li>Publishes programmable templates or auto-populates deal drafts.</li> </ul>"},{"location":"semantic-intelligence-layer/agent-primitives/#4-monitoring-agent","title":"4. Monitoring Agent","text":"<ul> <li>Tracks post-close performance.</li> <li>Monitors:<ul> <li>Payment behavior</li> <li>Trigger breaches</li> <li>Underperformance or risk migration</li> </ul> </li> <li>Sends alerts or triggers event hooks (e.g. pause disbursement).</li> </ul>"},{"location":"semantic-intelligence-layer/agent-primitives/#5-im-agent-investment-memo-agent","title":"5. IM Agent (Investment Memo Agent)","text":"<ul> <li>Composes a standardized investment memo using:<ul> <li>Facility details</li> <li>Risk tags</li> <li>Structuring outputs</li> </ul> </li> <li>Designed to reduce manual underwriting friction.</li> </ul>"},{"location":"semantic-intelligence-layer/agent-primitives/#agent-registry-permissions","title":"Agent Registry &amp; Permissions","text":"<ul> <li> <p>Each agent is registered with:</p> <ul> <li>Agent ID</li> <li>Creator Entity</li> <li>Staking status</li> <li>Role and jurisdiction scope</li> </ul> </li> <li> <p>Permissioned by:</p> <ul> <li>Asset type</li> <li>Region</li> <li>Risk band</li> </ul> </li> </ul>"},{"location":"semantic-intelligence-layer/agent-primitives/#staking-and-attribution","title":"Staking and Attribution","text":"<ul> <li>Agents may be required to stake tokens to operate.</li> <li>Bad behavior may result in slashing or blacklist.</li> <li>Usage and performance tracked for attribution and rewards.</li> </ul>"},{"location":"semantic-intelligence-layer/data-residency/","title":"Data Residency","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"semantic-intelligence-layer/data-residency/#data-residency","title":"Data Residency","text":"<p>Data residency in Arda ensures that sensitive data\u2014such as personal identity, legal documents, and asset records\u2014remain stored and processed within specific jurisdictions in compliance with local regulations. Arda's architecture separates data layers from consensus to enforce locality while maintaining cryptographic verifiability.</p>"},{"location":"semantic-intelligence-layer/data-residency/#residency-strategies","title":"Residency Strategies","text":""},{"location":"semantic-intelligence-layer/data-residency/#1-jurisdictional-vault-nodes","title":"1. Jurisdictional Vault Nodes","text":"<ul> <li>Arda Vaults can be deployed regionally with:<ul> <li>FHE/MPC key hosting</li> <li>Localized document anchors</li> <li>Regulator access interface</li> </ul> </li> <li>Documents never leave jurisdiction unless explicitly authorized</li> </ul>"},{"location":"semantic-intelligence-layer/data-residency/#2-execution-data-decoupling","title":"2. Execution-Data Decoupling","text":"<ul> <li>ArdaOS executes business logic</li> <li>Documents and metadata resolved off-chain within local vault clusters</li> <li>Hashes, attestations, and ZK proofs shared globally</li> </ul>"},{"location":"semantic-intelligence-layer/data-residency/#3-regulatory-scope-isolation","title":"3. Regulatory Scope Isolation","text":"<ul> <li>Each jurisdiction has:<ul> <li>Unique data control schema</li> <li>Approved KYC/ID providers</li> <li>Vault role-based access control</li> </ul> </li> <li>Regional vaults may include:<ul> <li>Public agency key</li> <li>Notary verification access</li> <li>Legal override privileges</li> </ul> </li> </ul>"},{"location":"semantic-intelligence-layer/data-residency/#use-cases","title":"Use Cases","text":"<ul> <li>UAE DLD title data cannot leave local cloud under law</li> <li>Singapore MAS requires investor data retention in APAC</li> <li>U.S. SEC rules mandate audit logs remain queryable under FINRA standards</li> </ul>"},{"location":"semantic-intelligence-layer/data-residency/#developer-notes","title":"Developer Notes","text":"<ul> <li>SDK allows:<ul> <li><code>registerRegionalVault()</code>, <code>verifyResidency()</code></li> </ul> </li> <li>Compliance checks validate residency on read/write</li> <li>Vault metadata includes region, purpose, and retention period</li> </ul>"},{"location":"semantic-intelligence-layer/data-residency/#interop-and-encryption","title":"Interop and Encryption","text":"<ul> <li>Data can be mirrored across jurisdictions only with:<ul> <li>Attestation by owner or regulator</li> <li>Double-keyed access (MPC share + regional gate)</li> </ul> </li> <li>All metadata hashes traceable to Arda Core or AuditLog</li> </ul>"},{"location":"semantic-intelligence-layer/external-agents/","title":"External Agents","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"semantic-intelligence-layer/external-agents/#external-agents","title":"External Agents","text":"<p>External agents in the Arda ecosystem are autonomous or semi-autonomous service providers that perform roles such as deal structuring, monitoring, verification, and execution support. These agents enhance trust, scale throughput, and standardize execution across asset and capital lifecycles.</p> <p>They operate under permissioned attestations and are tracked via the Agent Registry. Agents may be institutional (e.g. broker-dealers), DAO-governed, or programmatic (smart contracts or AI models).</p>"},{"location":"semantic-intelligence-layer/external-agents/#agent-types","title":"Agent Types","text":"Agent Role Connect Agent Matches investors with capital pools based on mandate fit Risk Agent Evaluates asset and borrower risk using underwriting data Structuring Agent Designs tranches, cashflows, and waterfall logic Monitoring Agent Tracks loan performance and flags anomalies IM Agent Generates investment memos from standard templates RFQ Agent Facilitates cross-chain and bilateral deal negotiations"},{"location":"semantic-intelligence-layer/external-agents/#registration-process","title":"Registration Process","text":"<ol> <li>Identity Verification \u2014 Must be linked to a Tier 2+ Wallet or Entity</li> <li>Attestation Submission \u2014 Includes capabilities, jurisdiction, track record</li> <li>Score Assignment \u2014 Based on performance, uptime, and participation volume</li> <li>Activation \u2014 Registered in the Agent Registry for matching and query routing</li> </ol>"},{"location":"semantic-intelligence-layer/external-agents/#agent-registry-record-example","title":"Agent Registry Record (Example)","text":"<pre><code>{\n  \"agentId\": \"AGENT-019\",\n  \"type\": \"Monitoring Agent\",\n  \"entity\": \"RealData Analytics Ltd.\",\n  \"jurisdiction\": \"EU\",\n  \"score\": 92,\n  \"active\": true\n}\n</code></pre>"},{"location":"semantic-intelligence-layer/external-agents/#permissions-and-responsibilities","title":"Permissions and Responsibilities","text":"<ul> <li>Must act within approved jurisdictional scopes</li> <li>Can be slashed or delisted for inactivity, fraud, or poor performance</li> <li>May be delegated roles by pool creators, brokers, or DAOs</li> <li>Compensated via protocol incentives or custom fee agreements</li> </ul>"},{"location":"semantic-intelligence-layer/external-agents/#compliance","title":"Compliance","text":"<ul> <li>All agent actions are recorded in the AuditLog</li> <li>Role-specific TransferRules apply (e.g. only Structuring Agents may configure waterfalls)</li> <li>Monitoring Agents may access encrypted Vault data via MPC or FHE</li> </ul>"},{"location":"semantic-intelligence-layer/external-agents/#integration-points","title":"Integration Points","text":"<ul> <li>Underwriting + Syndication \u2014 Used during deal assessment and capital formation</li> <li>Token Factory \u2014 May submit structuring logic and tranche metadata</li> <li>Vault \u2014 Secure access to inspection reports, contracts, or valuation records</li> <li>Clear \u2014 Triggers based on agent signals (e.g. default events, payment failures)</li> </ul>"},{"location":"semantic-intelligence-layer/identity-providers/","title":"Identity Providers","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"semantic-intelligence-layer/identity-providers/#identity-providers","title":"Identity Providers","text":"<p>Identity provider integrations enable Arda to verify users, investors, institutions, and agents across jurisdictions using trusted KYC/KYB workflows. Arda supports pluggable, programmable identity systems that conform to both local compliance rules and global coordination needs.</p>"},{"location":"semantic-intelligence-layer/identity-providers/#identity-types","title":"Identity Types","text":""},{"location":"semantic-intelligence-layer/identity-providers/#1-kyc-individuals","title":"1. KYC (Individuals)","text":"<ul> <li>Tiered system:<ul> <li>Tier 0: Email-only (read-only access)</li> <li>Tier 1: Government ID</li> <li>Tier 2: Proof of address, selfie, AML screen</li> <li>Tier 3: Source of funds, enhanced due diligence</li> </ul> </li> </ul>"},{"location":"semantic-intelligence-layer/identity-providers/#2-kyb-organizations","title":"2. KYB (Organizations)","text":"<ul> <li>Entity verification includes:<ul> <li>Registration number</li> <li>UBO (ultimate beneficial owner) data</li> <li>Tax and regulatory standing</li> </ul> </li> </ul>"},{"location":"semantic-intelligence-layer/identity-providers/#3-agent-attribution","title":"3. Agent Attribution","text":"<ul> <li>Agents are linked to originating Entity</li> <li>Enforced by signature attestations or AIP delegation</li> </ul>"},{"location":"semantic-intelligence-layer/identity-providers/#integration-standards","title":"Integration Standards","text":"<ul> <li>OAuth2 and OpenID Connect supported</li> <li>Verifiable Credential (VC) format with ZK proof compatibility</li> <li>REST APIs for provider hooks:<ul> <li><code>verifyIdentity()</code>, <code>getKYCStatus()</code>, <code>updateRiskScore()</code></li> </ul> </li> </ul>"},{"location":"semantic-intelligence-layer/identity-providers/#regional-providers-examples","title":"Regional Providers (Examples)","text":"Region Providers UAE uqudo, IDnow, Jumio US Alloy, Socure, Persona EU Veriff, Onfido, iDenfy SG MyInfo, ACRA"},{"location":"semantic-intelligence-layer/identity-providers/#identity-lifecycle","title":"Identity Lifecycle","text":"<ol> <li>User initiates onboarding</li> <li>Identity verified via provider</li> <li>Entity created and linked to Wallet Group</li> <li>JurisdictionProfile + KYC Tier assigned</li> <li>Logs and documents anchored to Vault</li> </ol>"},{"location":"semantic-intelligence-layer/oracles/","title":"Oracles","text":"<p>Documentation Under Development</p> <p>This documentation is currently in a period of rapid development. Content may change frequently and some sections may be incomplete or subject to revision.</p>"},{"location":"semantic-intelligence-layer/oracles/#oracle-integration","title":"Oracle Integration","text":"<p>Oracles in Arda supply off-chain data needed for risk assessment, asset valuation, repayment triggers, and compliance enforcement. Arda supports trusted oracles scoped by jurisdiction and role, with optional staking, signature, or zero-knowledge attestation.</p>"},{"location":"semantic-intelligence-layer/oracles/#oracle-use-cases","title":"Oracle Use Cases","text":""},{"location":"semantic-intelligence-layer/oracles/#1-asset-valuation","title":"1. Asset Valuation","text":"<ul> <li>Periodic updates for:<ul> <li>LTV calculations</li> <li>Loan re-underwriting</li> <li>Collateral rebalancing</li> </ul> </li> </ul>"},{"location":"semantic-intelligence-layer/oracles/#2-payment-confirmation","title":"2. Payment Confirmation","text":"<ul> <li>Used to:<ul> <li>Confirm fiat repayments</li> <li>Release escrowed funds</li> <li>Trigger YieldToken distribution</li> </ul> </li> </ul>"},{"location":"semantic-intelligence-layer/oracles/#3-milestone-triggers","title":"3. Milestone Triggers","text":"<ul> <li>Common for:<ul> <li>Construction loans</li> <li>Development phases</li> <li>Legal registration milestones</li> </ul> </li> </ul>"},{"location":"semantic-intelligence-layer/oracles/#4-compliance-updates","title":"4. Compliance Updates","text":"<ul> <li>Supports:<ul> <li>Jurisdiction blacklist sync</li> <li>Sanctions list refresh</li> <li>Economic indicator thresholds (e.g. interest cap by region)</li> </ul> </li> </ul>"},{"location":"semantic-intelligence-layer/oracles/#security-models","title":"Security Models","text":"<ul> <li> <p>Oracles may be:</p> <ul> <li>Signed by validator sets</li> <li>Anchored via ZK proof or MPC attestations</li> <li>Submitted via multi-party threshold schemes</li> </ul> </li> <li> <p>Oracle metadata includes:</p> <ul> <li>Source (e.g. DLD, Bloomberg, Chainlink node)</li> <li>Region and role scope</li> <li>Validity window</li> <li>Hash of input data</li> </ul> </li> </ul>"},{"location":"semantic-intelligence-layer/oracles/#example-oracle-update","title":"Example Oracle Update","text":"<pre><code>{\n  \"oracle_id\": \"VAL-DXB-01\",\n  \"asset_id\": \"AST-2038\",\n  \"valuation_usd\": 1320000,\n  \"timestamp\": \"2025-06-01T00:00:00Z\",\n  \"signature\": \"0xabc123...\",\n  \"region\": \"UAE\"\n}\n</code></pre>"}]}